; ModuleID = 'libm.89929277-cgu.0'
source_filename = "libm.89929277-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"core::ptr::metadata::PtrRepr<[f64]>" = type { [2 x i64] }
%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>" = type { %"core::ops::range::RangeInclusive<usize>" }
%"math::fma::Num" = type { i64, i32, i32 }

@alloc1742 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/mod.rs" }>, align 1
@alloc1743 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1742, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc1750 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc1751 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/acos.rs" }>, align 1
@alloc1752 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1751, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00O\00\00\00\0D\00\00\00" }>, align 8
@str.0 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1753 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/asin.rs" }>, align 1
@alloc1754 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1753, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00S\00\00\00\0D\00\00\00" }>, align 8
@alloc880 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"O\BBa\05g\AC\DD?\18-DT\FB!\E9?\9B\F6\81\D2\0Bs\EF?\18-DT\FB!\F9?" }>, align 8
@alloc1757 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/atan.rs" }>, align 1
@alloc1756 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1757, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\81\00\00\00\0D\00\00\00" }>, align 8
@alloc883 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"\E2e/\22\7F+z<\07\\\143&\A6\81<\BD\CB\F0z\88\07p<\07\\\143&\A6\91<" }>, align 8
@alloc1758 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1757, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\81\00\00\008\00\00\00" }>, align 8
@alloc1761 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/atan2f.rs" }>, align 1
@alloc1760 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1761, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00J\00\00\00\09\00\00\00" }>, align 8
@str.1 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1762 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1761, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00O\00\00\00!\00\00\00" }>, align 8
@alloc915 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"8c\ED>\DA\0FI?^\98{?\DA\0F\C9?" }>, align 4
@alloc1777 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/atanf.rs" }>, align 1
@alloc1764 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00;\00\00\00\0D\00\00\00" }>, align 8
@alloc912 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"\A9\AA\AA>\98\CAL\BE\0D\F5\11>G\12\DA\BD%\AC|=" }>, align 4
@alloc1766 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00d\00\00\00\13\00\00\00" }>, align 8
@alloc1768 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00d\00\00\00%\00\00\00" }>, align 8
@alloc1770 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00d\00\00\006\00\00\00" }>, align 8
@alloc1772 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00e\00\00\00\13\00\00\00" }>, align 8
@alloc1774 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00e\00\00\00$\00\00\00" }>, align 8
@alloc1776 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00j\00\00\00\0D\00\00\00" }>, align 8
@alloc918 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"i7\AC1h!\223\B4\0F\143h!\A23" }>, align 4
@alloc1778 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1777, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00j\00\00\001\00\00\00" }>, align 8
@alloc1783 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/cbrt.rs" }>, align 1
@alloc1780 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1783, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00G\00\00\00\0E\00\00\00" }>, align 8
@alloc1782 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1783, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00I\00\00\00\0E\00\00\00" }>, align 8
@alloc1784 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1783, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00g\00\00\00\0A\00\00\00" }>, align 8
@alloc1787 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/cbrtf.rs" }>, align 1
@alloc1786 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1787, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\002\00\00\00\0E\00\00\00" }>, align 8
@alloc1788 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1787, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\004\00\00\00\0E\00\00\00" }>, align 8
@alloc1791 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/ceilf.rs" }>, align 1
@alloc1790 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1791, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\17\00\00\00\11\00\00\00" }>, align 8
@str.2 = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc1792 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1791, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\1D\00\00\00\0D\00\00\00" }>, align 8
@alloc1037 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\E0?\00\00\00\00\00\00\E0\BF" }>, align 8
@alloc1795 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/exp.rs" }>, align 1
@alloc1794 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1795, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\7F\00\00\00\1F\00\00\00" }>, align 8
@alloc1796 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1795, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\81\00\00\00\11\00\00\00" }>, align 8
@alloc206 = private unnamed_addr constant <{ [248 x i8] }> <{ [248 x i8] c"\16V\E7\9E\AF\03\D2<\9B+\A1\86\9B\84\06=\82vIh\C2%<=\11\EA-\81\99\97q=\95dy\E1\7F\FD\A5=\BB\BD\D7\D9\DF|\DB=\95\D6&\E8\0B.\11>:\8C0\E2\8EyE>H\AF\BC\9A\F2\D7z>\8D\ED\B5\A0\F7\C6\B0>\F1h\E3\88\B5\F8\E4>-C\1C\EB\E26\1A?\FC\A9\F1\D2MbP?{\14\AEG\E1z\84?\9A\99\99\99\99\99\B9?\00\00\00\00\00\00\F0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8F@\00\00\00\00\00\88\C3@\00\00\00\00\00j\F8@\00\00\00\00\80\84.A\00\00\00\00\D0\12cA\00\00\00\00\84\D7\97A\00\00\00\00e\CD\CDA\00\00\00 _\A0\02B\00\00\00\E8vH7B\00\00\00\A2\94\1AmB\00\00@\E5\9C0\A2B\00\00\90\1E\C4\BC\D6B\00\004&\F5k\0CC" }>, align 8
@0 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [248 x i8] }>, <{ [248 x i8] }>* @alloc206, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00" }>, align 8
@alloc1803 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/exp10.rs" }>, align 1
@alloc1798 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1803, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\0F\00\00\00\18\00\00\00" }>, align 8
@alloc1800 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1803, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\0F\00\00\00\14\00\00\00" }>, align 8
@alloc1802 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1803, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\12\00\00\00\18\00\00\00" }>, align 8
@alloc1804 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1803, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\12\00\00\00\14\00\00\00" }>, align 8
@alloc211 = private unnamed_addr constant <{ [60 x i8] }> <{ [60 x i8] c"\95\BF\D63\BD7\865\AC\C5'7\17\B7\D18o\12\83:\0A\D7#<\CD\CC\CC=\00\00\80?\00\00 A\00\00\C8B\00\00zD\00@\1CF\00P\C3G\00$tI\80\96\18K" }>, align 4
@1 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [60 x i8] }>, <{ [60 x i8] }>* @alloc211, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00" }>, align 8
@alloc1811 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/exp10f.rs" }>, align 1
@alloc1806 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1811, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\0F\00\00\00\18\00\00\00" }>, align 8
@alloc1808 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1811, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\0F\00\00\00\14\00\00\00" }>, align 8
@alloc1810 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1811, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\12\00\00\00\18\00\00\00" }>, align 8
@alloc1812 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1811, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\12\00\00\00\14\00\00\00" }>, align 8
@_ZN4libm4math4exp23TBL17hcbfd84bbe9a734d0E = internal constant <{ [4096 x i8] }> <{ [4096 x i8] c"]=\7Ff\9E\A0\E6?\00\00\00\00\00\889=D\17u\FAR\B0\E6?\00\00\00\00\00\00\D8<\FE\D9\0Bu\12\C0\E6?\00\00\00\00\00x(\BD\BFv\D4\DD\DC\CF\E6?\00\00\00\00\00\C0\1E=)\1Ae<\B2\DF\E6?\00\00\00\00\00\00\D8\BC\E3:Y\98\92\EF\E6?\00\00\00\00\00\00\BC\BC\86\93Q\F9}\FF\E6?\00\00\00\00\00\D8/\BD\A3-\F4ft\0F\E7?\00\00\00\00\00\88,\BD\C3_\EC\E8u\1F\E7?\00\00\00\00\00\C0\13=\05\CF\EA\86\82/\E7?\00\00\00\00\0008\BDR\81\A5H\9A?\E7?\00\00\00\00\00\C0\00\BD\FC\CC\D75\BDO\E7?\00\00\00\00\00\88/=\F1gBV\EB_\E7?\00\00\00\00\00\E0\03=Hm\AB\B1$p\E7?\00\00\00\00\00\D0'\BD8]\DEOi\80\E7?\00\00\00\00\00\00\DD\BC\00\1D\AC8\B9\90\E7?\00\00\00\00\00\00\E3<x\01\EBs\14\A1\E7?\00\00\00\00\00\00\ED\BC`\D0v\09{\B1\E7?\00\00\00\00\00@ =3\C10\01\ED\C1\E7?\00\00\00\00\00\00\A0<6\86\FFbj\D2\E7?\00\00\00\00\00\90&\BD;N\CF6\F3\E2\E7?\00\00\00\00\00\E0\02\BD\E8\C3\91\84\87\F3\E7?\00\00\00\00\00X$\BDN\1B>T'\04\E8?\00\00\00\00\00\003=\1A\07\D1\AD\D2\14\E8?\00\00\00\00\00\00\0F=~\CDL\99\89%\E8?\00\00\00\00\00\C0!\BD\D0B\B9\1EL6\E8?\00\00\00\00\00\D0)=\B5\CA#F\1AG\E8?\00\00\00\00\00\10G=\BC[\9F\17\F4W\E8?\00\00\00\00\00`\22=\AF\91D\9B\D9h\E8?\00\00\00\00\00\C42\BD\95\A31\D9\CAy\E8?\00\00\00\00\00\00#\BD\B8e\8A\D9\C7\8A\E8?\00\00\00\00\00\80*\BD\00Xx\A4\D0\9B\E8?\00\00\00\00\00\00\ED\BC#\A2*B\E5\AC\E8?\00\00\00\00\00(3=\FA\19\D6\BA\05\BE\E8?\00\00\00\00\00\B4B=\83C\B5\162\CF\E8?\00\00\00\00\00\D0.\BDLf\08^j\E0\E8?\00\00\00\00\00P \BD\07x\15\99\AE\F1\E8?\00\00\00\00\00((=\0E,(\D0\FE\02\E9?\00\00\00\00\00\B0\1C\BD\96\FF\91\0B[\14\E9?\00\00\00\00\00\E0\05\BD\F9/\AAS\C3%\E9?\00\00\00\00\00@\F5<J\C6\CD\B077\E9?\00\00\00\00\00 \17=\AE\98_+\B8H\E9?\00\00\00\00\00\00\09\BD\CBR\C8\CBDZ\E9?\00\00\00\00\00h%=!ov\9A\DDk\E9?\00\00\00\00\00\D06\BD*N\DE\9F\82}\E9?\00\00\00\00\00\00\01\BD\A3#z\E43\8F\E9?\00\00\00\00\00\00-=\04\06\CAp\F1\A0\E9?\00\00\00\00\00\A48\BD\89\FFSM\BB\B2\E9?\00\00\00\00\00\\5=[\F1\A3\82\91\C4\E9?\00\00\00\00\00\B8&=\C5\B8K\19t\D6\E9?\00\00\00\00\00\00\EC\BC\8E#\E3\19c\E8\E9?\00\00\00\00\00\D0\17=\02\F3\07\8D^\FA\E9?\00\00\00\00\00@\16=M\E5]{f\0C\EA?\00\00\00\00\00\00\F5\BC\F6\B8\8E\EDz\1E\EA?\00\00\00\00\00\E0\09='.J\EC\9B0\EA?\00\00\00\00\00\D8*=]\0AF\80\C9B\EA?\00\00\00\00\00\F0\1A\BD\9B%>\B2\03U\EA?\00\00\00\00\00`\0B=\13b\F4\8AJg\EA?\00\00\00\00\00\888=\A7\B30\13\9Ey\EA?\00\00\00\00\00 \11=\8D.\C1S\FE\8B\EA?\00\00\00\00\00\C0\06=\D2\FCyUk\9E\EA?\00\00\00\00\00\B8)\BD\B8o5!\E5\B0\EA?\00\00\00\00\00p+=\81\F3\D3\BFk\C3\EA?\00\00\00\00\00\00\D9<\80'<:\FF\D5\EA?\00\00\00\00\00\00\E4<\A3\D2Z\99\9F\E8\EA?\00\00\00\00\00\90,\BDg\F3\22\E6L\FB\EA?\00\00\00\00\00P\16=\90\B7\8D)\07\0E\EB?\00\00\00\00\00\D4/=\A9\89\9Al\CE \EB?\00\00\00\00\00p\12=K\1AO\B8\A23\EB?\00\00\00\00\00GM=\E7G\B7\15\84F\EB?\00\00\00\00\0088\BD:Y\E5\8DrY\EB?\00\00\00\00\00\00\98<j\C5\F1)nl\EB?\00\00\00\00\00\D0\0A=P^\FB\F2v\7F\EB?\00\00\00\00\00\80\DE<\B2I'\F2\8C\92\EB?\00\00\00\00\00\C0\04\BD\03\06\A10\B0\A5\EB?\00\00\00\00\00p\0D\BDfo\9A\B7\E0\B8\EB?\00\00\00\00\00\90\0D=\FF\C1K\90\1E\CC\EB?\00\00\00\00\00\A0\02=o\A1\F3\C3i\DF\EB?\00\00\00\00\00x\1F\BD\B8\1D\D7[\C2\F2\EB?\00\00\00\00\00\A0\10\BD\E9\B2Aa(\06\EC?\00\00\00\00\00@\11\BD\E0R\85\DD\9B\19\EC?\00\00\00\00\00\E0\0B=\EEd\FA\D9\1C-\EC?\00\00\00\00\00@\09\BD/\D0\FF_\AB@\EC?\00\00\00\00\00\D0\0E\BD\15\FD\FAxGT\EC?\00\00\00\00\00f9=\CB\D0W.\F1g\EC?\00\00\00\00\00\10\1A\BD\B6\C1\88\89\A8{\EC?\00\00\00\00\80EX\BD3\E7\06\94m\8F\EC?\00\00\00\00\00H\1A\BD\DF\C4QW@\A3\EC?\00\00\00\00\00\00\CB<\94\90\EF\DC \B7\EC?\00\00\00\00\00@\01=\89\16m.\0F\CB\EC?\00\00\00\00\00 \F0<\12\C4]U\0B\DF\EC?\00\00\00\00\00`\F3<;\AB[[\15\F3\EC?\00\00\00\00\00\90\06\BD\BC\89\07J-\07\ED?\00\00\00\00\00\A0\09=\FA\C8\08+S\1B\ED?\00\00\00\00\00\E0\15\BD\85\8A\0D\08\87/\ED?\00\00\00\00\00(\1D=\03\A2\CA\EA\C8C\ED?\00\00\00\00\00\A0\01=\91\A4\FB\DC\18X\ED?\00\00\00\00\00\00\DF<\A1\E6b\E8vl\ED?\00\00\00\00\00\A0\03\BDN\83\C9\16\E3\80\ED?\00\00\00\00\00\D8\0C\BD\90`\FFq]\95\ED?\00\00\00\00\00\C0\F4<\AE2\DB\03\E6\A9\ED?\00\00\00\00\00\90\FF<%\83:\D6|\BE\ED?\00\00\00\00\00\80\E9<E\B4\01\F3!\D3\ED?\00\00\00\00\00 \F5\BC\BF\05\1Cd\D5\E7\ED?\00\00\00\00\00p\1D\BD\EC\9A{3\97\FC\ED?\00\00\00\00\00\14\16\BD^}\19kg\11\EE?\00\00\00\00\00H\0B=\E7\A3\F5\14F&\EE?\00\00\00\00\00\CE@=\\\EE\16;3;\EE?\00\00\00\00\00h\0C=\B4?\8B\E7.P\EE?\00\00\00\00\000\09\BDhmg$9e\EE?\00\00\00\00\00\00\E5\BCDL\C7\FBQz\EE?\00\00\00\00\00\F8\07\BD&\B7\CDwy\8F\EE?\00\00\00\00\00p\F3\BC\E8\90\A4\A2\AF\A4\EE?\00\00\00\00\00\D0\E5<\E4\CA|\86\F4\B9\EE?\00\00\00\00\00\1A\16=\0Dh\8E-H\CF\EE?\00\00\00\00\00P\F5<\14\85\18\A2\AA\E4\EE?\00\00\00\00\00@\C6<\13Za\EE\1B\FA\EE?\00\00\00\00\00\80\EE\BC\06A\B6\1C\9C\0F\EF?\00\00\00\00\00\88\FA\BCc\B9k7+%\EF?\00\00\00\00\00\90,\BDur\DDH\C9:\EF?\00\00\00\00\00\00\AA<$En[vP\EF?\00\00\00\00\00\F0\F4\BC\FDD\88y2f\EF?\00\00\00\00\00\80\CA<8\BE\9C\AD\FD{\EF?\00\00\00\00\00\BC\FA<\82<$\02\D8\91\EF?\00\00\00\00\00`\D4\BC\8E\90\9E\81\C1\A7\EF?\00\00\00\00\00\0C\0B\BD\11\D5\926\BA\BD\EF?\00\00\00\00\00\E0\C0\BC\94q\8F+\C2\D3\EF?\00\00\00\00\80\DE\10\BD\EE#*k\D9\E9\EF?\00\00\00\00\00C\EE<\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00\BE\BCZ\FA\1A\0B\F0?\00\00\00\00\00@\B3\BC\033\FB\A9=\16\F0?\00\00\00\00\00\17\12\BD\82\02;\14h!\F0?\00\00\00\00\00@\BA<l\80w>\9A,\F0?\00\00\00\00\00\98\EF<\CA\BB\11.\D47\F0?\00\00\00\00\00@\C7\BC\89\7Fn\E8\15C\F0?\00\00\00\00\000\D8<gT\F6r_N\F0?\00\00\00\00\00?\1A\BDZ\85\15\D3\B0Y\F0?\00\00\00\00\00\84\02\BD\95\1F<\0E\0Ae\F0?\00\00\00\00\00`\F1<\1A\F7\DD)kp\F0?\00\00\00\00\00$\15=-\A8r+\D4{\F0?\00\00\00\00\00\A0\E9\BC\D0\9Bu\18E\87\F0?\00\00\00\00\00@\E6<\C8\07f\F6\BD\92\F0?\00\00\00\00\00x\00\BD\83\F3\C6\CA>\9E\F0?\00\00\00\00\00\00\98\BC09\1F\9B\C7\A9\F0?\00\00\00\00\00\A0\FF<\FC\88\F9lX\B5\F0?\00\00\00\00\00\C8\FA\BC\8Al\E4E\F1\C0\F0?\00\00\00\00\00\C0\D9<\16Hr+\92\CC\F0?\00\00\00\00\00 \05=\D8]9#;\D8\F0?\00\00\00\00\00\D0\FA\BC\F3\D1\D32\EC\E3\F0?\00\00\00\00\00\AC\1B=\A6\A9\DF_\A5\EF\F0?\00\00\00\00\00\E8\04\BD\F0\D2\FE\AFf\FB\F0?\00\00\00\00\000\0D\BDK#\D7(0\07\F1?\00\00\00\00\00P\F1<[[\12\D0\01\13\F1?\00\00\00\00\00\00\EC<\F9*^\AB\DB\1E\F1?\00\00\00\00\00\BC\16=\D51l\C0\BD*\F1?\00\00\00\00\00@\E8<}\04\F2\14\A86\F1?\00\00\00\00\00\D0\0E\BD\E9-\A9\AE\9AB\F1?\00\00\00\00\00\E0\E8<81O\93\95N\F1?\00\00\00\00\00@\EB<q\8E\A5\C8\98Z\F1?\00\00\00\00\000\05=\DF\C3qT\A4f\F1?\00\00\00\00\008\03=\11R}<\B8r\F1?\00\00\00\00\00\D4(=\9F\BB\95\86\D4~\F1?\00\00\00\00\00\D0\05\BD\93\8D\8C8\F9\8A\F1?\00\00\00\00\00\88\1C\BDf]7X&\97\F1?\00\00\00\00\00\F0\11=\A7\CBo\EB[\A3\F1?\00\00\00\00\00H\10=\E3\87\13\F8\99\AF\F1?\00\00\00\00\009G\BDT]\04\84\E0\BB\F1?\00\00\00\00\00\E4$=C\1C(\95/\C8\F1?\00\00\00\00\00 \0A\BD\B2\B9h1\87\D4\F1?\00\00\00\00\00\80\E3<1@\B4^\E7\E0\F1?\00\00\00\00\00\C0\EA<8\D9\FC\22P\ED\F1?\00\00\00\00\00\90\01=\F7\CD8\84\C1\F9\F1?\00\00\00\00\00x\1B\BD\8F\8Db\88;\06\F2?\00\00\00\00\00\94-=\1E\A8x5\BE\12\F2?\00\00\00\00\00\00\D8<A\DD}\91I\1F\F2?\00\00\00\00\004+=#\13y\A2\DD+\F2?\00\00\00\00\00\F8\19=\E7aunz8\F2?\00\00\00\00\00\C8\19\BD'\14\82\FB\1FE\F2?\00\00\00\00\000\02=\02\A6\B2O\CEQ\F2?\00\00\00\00\00H\13\BD\B0\CE\1Eq\85^\F2?\00\00\00\00\00p\12=\16}\E2eEk\F2?\00\00\00\00\00\D0\11=\0F\E0\1D4\0Ex\F2?\00\00\00\00\00\EE1=>c\F5\E1\DF\84\F2?\00\00\00\00\00\C0\14\BD0\BB\91u\BA\91\F2?\00\00\00\00\00\D8\13\BD\09\DF\1F\F5\9D\9E\F2?\00\00\00\00\00\B0\08=\9B\0E\D1f\8A\AB\F2?\00\00\00\00\00|\22\BD:\DA\DA\D0\7F\B8\F2?\00\00\00\00\004*=\F9\1Aw9~\C5\F2?\00\00\00\00\00\80\10\BD\D9\02\E4\A6\85\D2\F2?\00\00\00\00\00\D0\0E\BDy\15d\1F\96\DF\F2?\00\00\00\00\00 \F4\BC\CF.>\A9\AF\EC\F2?\00\00\00\00\00\98$\BD\22\88\BDJ\D2\F9\F2?\00\00\00\00\000\16\BD%\B61\0A\FE\06\F3?\00\00\00\00\0062\BD\0B\A5\EE\ED2\14\F3?\00\00\00\00\80\DFp\BD\B8\D7L\FCp!\F3?\00\00\00\00\00H\22\BD\A2\E9\A8;\B8.\F3?\00\00\00\00\00\98%\BDf\17d\B2\08<\F3?\00\00\00\00\00\D0\1E='\FA\E3fbI\F3?\00\00\00\00\00\00\DC\BC\0F\9F\92_\C5V\F3?\00\00\00\00\00\D80\BD\B9\88\DE\A21d\F3?\00\00\00\00\00\C8\22=9\AA:7\A7q\F3?\00\00\00\00\00` =\FEt\1E#&\7F\F3?\00\00\00\00\00`\16\BD8\D8\05m\AE\8C\F3?\00\00\00\00\00\E0\0A\BD\C3>q\1B@\9A\F3?\00\00\00\00\00rD\BD \A0\E54\DB\A7\F3?\00\00\00\00\00 \08=\95n\EC\BF\7F\B5\F3?\00\00\00\00\00\80>=\F2\A8\13\C3-\C3\F3?\00\00\00\00\00\80\EF<\22\E1\EDD\E5\D0\F3?\00\00\00\00\00\A0\17\BD\BB4\12L\A6\DE\F3?\00\00\00\00\000&=\CCN\1C\DFp\EC\F3?\00\00\00\00\00\A6H\BD\8C~\AC\04E\FA\F3?\00\00\00\00\00\DC<\BD\BB\A0g\C3\22\08\F4?\00\00\00\00\00\B8%=\95.\F7!\0A\16\F4?\00\00\00\00\00\C0\1E=FF\09'\FB#\F4?\00\00\00\00\00`\13\BD \A9P\D9\F51\F4?\00\00\00\00\00\98#=\EB\B9\84?\FA?\F4?\00\00\00\00\00\00\FA<\19\89a`\08N\F4?\00\00\00\00\00\C0\F6\BC\01\D2\A7B \\\F4?\00\00\00\00\00\C0\0B\BD\16\00\1D\EDAj\F4?\00\00\00\00\00\80\12\BD&3\8Bfmx\F4?\00\00\00\00\00\E00=\00<\C1\B5\A2\86\F4?\00\00\00\00\00@-\BD\04\AF\92\E1\E1\94\F4?\00\00\00\00\00 \0C=r\D3\D7\F0*\A3\F4?\00\00\00\00\00P\1E\BD\01\B8m\EA}\B1\F4?\00\00\00\00\00\80\07=\E1)6\D5\DA\BF\F4?\00\00\00\00\00\80\13\BD2\C1\17\B8A\CE\F4?\00\00\00\00\00\80\00=\DB\DD\FD\99\B2\DC\F4?\00\00\00\00\00p,=\96\AB\D8\81-\EB\F4?\00\00\00\00\00\E0\1C\BD\02-\9Dv\B2\F9\F4?\00\00\00\00\00 \19=\C11E\7FA\08\F5?\00\00\00\00\00\C0\08\BD*f\CF\A2\DA\16\F5?\00\00\00\00\00\00\FA\BC\EAQ?\E8}%\F5?\00\00\00\00\00\08J=\DAN\9DV+4\F5?\00\00\00\00\00\D8&\BD\1A\AC\F6\F4\E2B\F5?\00\00\00\00\00D2\BD\DB\94]\CA\A4Q\F5?\00\00\00\00\00<H=k\11\E9\DDp`\F5?\00\00\00\00\00\B0$=\DE)\B56Go\F5?\00\00\00\00\00ZA=\0E\C4\E2\DB'~\F5?\00\00\00\00\00\E0)\BDo\C7\97\D4\12\8D\F5?\00\00\00\00\00\08#\BDL\0B\FF'\08\9C\F5?\00\00\00\00\00\ECM='TH\DD\07\AB\F5?\00\00\00\00\00\00\C4\BC\F4z\A8\FB\11\BA\F5?\00\00\00\00\00\080=\0BFY\8A&\C9\F5?\00\00\00\00\00\C8&\BD?\8E\99\90E\D8\F5?\00\00\00\00\00\9AF=\E1 \AD\15o\E7\F5?\00\00\00\00\00@\1B\BD\CA\EB\DC \A3\F6\F5?\00\00\00\00\00p\17=\B8\DCv\B9\E1\05\F6?\00\00\00\00\00\F8&=\15\F7\CD\E6*\15\F6?\00\00\00\00\00\00\01=1U:\B0~$\F6?\00\00\00\00\00\D0\15\BD\B5)\19\1D\DD3\F6?\00\00\00\00\00\D0\12\BD\13\C3\CC4FC\F6?\00\00\00\00\00\80\EA\BC\FA\8E\BC\FE\B9R\F6?\00\00\00\00\00`(\BD\973U\828b\F6?\00\00\00\00\00\FEq=\8E2\08\C7\C1q\F6?\00\00\00\00\00 7\BD~\A9L\D4U\81\F6?\00\00\00\00\00\80\E6<q\94\9E\B1\F4\90\F6?\00\00\00\00\00x)\BD" }>, align 8
@alloc1823 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/exp2.rs" }>, align 1
@alloc1814 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00x\01\00\00\0E\00\00\00" }>, align 8
@str.3 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc1816 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00y\01\00\00\0E\00\00\00" }>, align 8
@str.4 = internal constant [31 x i8] c"attempt to divide with overflow"
@alloc1818 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\7F\01\00\00$\00\00\00" }>, align 8
@alloc1820 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\7F\01\00\00\1C\00\00\00" }>, align 8
@alloc1822 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\80\01\00\00!\00\00\00" }>, align 8
@alloc1824 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1823, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\80\01\00\00\19\00\00\00" }>, align 8
@_ZN4libm4math5exp2f6EXP2FT17h6e9901433b232025E = internal constant <{ [128 x i8] }> <{ [128 x i8] c"\CD;\7Ff\9E\A0\E6?\87\01\EBs\14\A1\E7?\DB\A0*B\E5\AC\E8?\90\F0\A3\82\91\C4\E9?\AD\D3Z\99\9F\E8\EA?\9CR\85\DD\9B\19\EC?\87\A4\FB\DC\18X\ED?\DA\90\A4\A2\AF\A4\EE?\00\00\00\00\00\00\F0?\0F\89\F9lX\B5\F0?{Q}<\B8r\F1?8bunz8\F2?\15\B71\0A\FE\06\F3?\224\12L\A6\DE\F3?'*6\D5\DA\BF\F4?)TH\DD\07\AB\F5?" }>, align 8
@alloc1829 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/exp2f.rs" }>, align 1
@alloc1826 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1829, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00y\00\00\00\05\00\00\00" }>, align 8
@alloc1828 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1829, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00{\00\00\00\1F\00\00\00" }>, align 8
@alloc1830 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1829, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\81\00\00\00!\00\00\00" }>, align 8
@alloc1054 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\00\00\00?\00\00\00\BF" }>, align 4
@alloc1833 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/expf.rs" }>, align 1
@alloc1832 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1833, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00I\00\00\00 \00\00\00" }>, align 8
@alloc1834 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1833, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\00\00\00\11\00\00\00" }>, align 8
@alloc1837 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/expm1.rs" }>, align 1
@alloc1836 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1837, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00t\00\00\00\0B\00\00\00" }>, align 8
@alloc1838 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1837, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\80\00\00\00\0B\00\00\00" }>, align 8
@alloc1841 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/expm1f.rs" }>, align 1
@alloc1840 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1841, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00u\00\00\00!\00\00\00" }>, align 8
@alloc1842 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1841, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\80\00\00\00\1E\00\00\00" }>, align 8
@alloc1847 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/floorf.rs" }>, align 1
@alloc1844 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1847, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\11\00\00\00\0D\00\00\00" }>, align 8
@alloc1846 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1847, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\17\00\00\00\16\00\00\00" }>, align 8
@alloc1848 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1847, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1D\00\00\00\0D\00\00\00" }>, align 8
@alloc1933 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/fma.rs" }>, align 1
@alloc1850 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\17\00\00\00\19\00\00\00" }>, align 8
@alloc1852 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\1C\00\00\00\05\00\00\00" }>, align 8
@alloc1854 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00)\00\00\00\0A\00\00\00" }>, align 8
@alloc1856 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00*\00\00\00\0A\00\00\00" }>, align 8
@alloc1858 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00*\00\00\00\16\00\00\00" }>, align 8
@alloc1860 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00+\00\00\00\0A\00\00\00" }>, align 8
@alloc1862 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00-\00\00\00\0E\00\00\00" }>, align 8
@alloc1864 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00R\00\00\00\16\00\00\00" }>, align 8
@alloc1866 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00S\00\00\00\16\00\00\00" }>, align 8
@alloc1868 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00W\00\00\00\13\00\00\00" }>, align 8
@str.5 = internal constant [35 x i8] c"attempt to shift left with overflow"
@alloc1870 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00X\00\00\00\1B\00\00\00" }>, align 8
@alloc1872 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00X\00\00\00\13\00\00\00" }>, align 8
@alloc1874 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\\\00\00\00\11\00\00\00" }>, align 8
@alloc1876 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00]\00\00\00\0D\00\00\00" }>, align 8
@alloc1878 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00`\00\00\00\1E\00\00\00" }>, align 8
@alloc1880 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00`\00\00\00\17\00\00\00" }>, align 8
@alloc1882 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00`\00\00\00)\00\00\00" }>, align 8
@alloc1884 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00`\00\00\00=\00\00\00" }>, align 8
@alloc1886 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00`\00\00\005\00\00\00" }>, align 8
@alloc1888 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00a\00\00\00\17\00\00\00" }>, align 8
@alloc1890 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00i\00\00\00\0D\00\00\00" }>, align 8
@str.6 = internal constant [31 x i8] c"attempt to negate with overflow"
@alloc1892 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00m\00\00\00\13\00\00\00" }>, align 8
@alloc1894 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00m\00\00\00)\00\00\00" }>, align 8
@alloc1896 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00m\00\00\00 \00\00\00" }>, align 8
@alloc1898 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00z\00\00\00\10\00\00\00" }>, align 8
@alloc1900 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00z\00\00\00\09\00\00\00" }>, align 8
@alloc1902 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\81\00\00\00\13\00\00\00" }>, align 8
@alloc1904 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\82\00\00\00\13\00\00\00" }>, align 8
@alloc1906 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8A\00\00\00\09\00\00\00" }>, align 8
@alloc1908 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8B\00\00\00\0D\00\00\00" }>, align 8
@alloc1910 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8D\00\00\00\0F\00\00\00" }>, align 8
@alloc1912 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8D\00\00\00!\00\00\00" }>, align 8
@alloc1914 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8D\00\00\00\1A\00\00\00" }>, align 8
@alloc1916 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8D\00\00\00-\00\00\00" }>, align 8
@alloc1918 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8F\00\00\00\0D\00\00\00" }>, align 8
@alloc1920 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\93\00\00\00\13\00\00\00" }>, align 8
@alloc1922 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\99\00\00\00\05\00\00\00" }>, align 8
@alloc1924 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9E\00\00\00\0D\00\00\00" }>, align 8
@alloc1926 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\B5\00\00\00\19\00\00\00" }>, align 8
@alloc1928 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C4\00\00\00'\00\00\00" }>, align 8
@alloc1930 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C4\00\00\00\1F\00\00\00" }>, align 8
@alloc1932 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C4\00\00\00\11\00\00\00" }>, align 8
@alloc1934 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1933, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C6\00\00\00\15\00\00\00" }>, align 8
@alloc1935 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/fmaf.rs" }>, align 1
@alloc1936 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1935, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00e\00\00\00\09\00\00\00" }>, align 8
@alloc1957 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/fmod.rs" }>, align 1
@alloc1938 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\1D\00\00\00\11\00\00\00" }>, align 8
@alloc1940 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\1D\00\00\00\09\00\00\00" }>, align 8
@alloc1942 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00(\00\00\00\11\00\00\00" }>, align 8
@alloc1944 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00(\00\00\00\09\00\00\00" }>, align 8
@alloc1946 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\008\00\00\00\09\00\00\00" }>, align 8
@alloc1948 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00H\00\00\00\09\00\00\00" }>, align 8
@alloc1950 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\00\00\00\11\00\00\00" }>, align 8
@alloc1952 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\00\00\00\09\00\00\00" }>, align 8
@alloc1954 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00C\00\00\00\09\00\00\00" }>, align 8
@alloc1956 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00%\00\00\00\0D\00\00\00" }>, align 8
@alloc1958 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1957, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\1A\00\00\00\0D\00\00\00" }>, align 8
@alloc1979 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/fmodf.rs" }>, align 1
@alloc1960 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00!\00\00\00\11\00\00\00" }>, align 8
@alloc1962 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc1964 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00.\00\00\00\11\00\00\00" }>, align 8
@alloc1966 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00.\00\00\00\09\00\00\00" }>, align 8
@alloc1968 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00?\00\00\00\09\00\00\00" }>, align 8
@alloc1970 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00Q\00\00\00\09\00\00\00" }>, align 8
@alloc1972 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00T\00\00\00\11\00\00\00" }>, align 8
@alloc1974 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00T\00\00\00\09\00\00\00" }>, align 8
@alloc1976 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00L\00\00\00\09\00\00\00" }>, align 8
@alloc1978 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00*\00\00\00\0D\00\00\00" }>, align 8
@alloc1980 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1979, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\1D\00\00\00\0D\00\00\00" }>, align 8
@alloc1983 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/frexp.rs" }>, align 1
@alloc1982 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1983, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\10\00\00\00\0D\00\00\00" }>, align 8
@alloc1984 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1983, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\09\00\00\00\18\00\00\00" }>, align 8
@alloc1987 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/frexpf.rs" }>, align 1
@alloc1986 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1987, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\11\00\00\00\0D\00\00\00" }>, align 8
@alloc1988 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1987, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\09\00\00\00\18\00\00\00" }>, align 8
@alloc1989 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/hypot.rs" }>, align 1
@alloc1990 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1989, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\007\00\00\00\08\00\00\00" }>, align 8
@alloc1991 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/hypotf.rs" }>, align 1
@alloc1992 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1991, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1C\00\00\00)\00\00\00" }>, align 8
@alloc1995 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/ilogb.rs" }>, align 1
@alloc1994 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1995, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\1D\00\00\00\09\00\00\00" }>, align 8
@alloc1263 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\00\00\00\00\00\00\F8\7F" }>, align 8
@alloc1996 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1995, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\11\00\00\00\0D\00\00\00" }>, align 8
@alloc1999 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/ilogbf.rs" }>, align 1
@alloc1998 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1999, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1D\00\00\00\09\00\00\00" }>, align 8
@alloc2000 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1999, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\11\00\00\00\0D\00\00\00" }>, align 8
@alloc1272 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\00\00\00\00\00\00\00\002\FD\FF\FF\FF\FF\B1\BFy\A7O\B4\D0) \C0c\E8\19{\02\11p\C0\FC\CAM\CDnj\A3\C0=d\CC6\0B\85\B4\C0" }>, align 8
@alloc1275 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"Qg\A9\073\22]@8iYP}\F3\AD@_\B0\B6n\BB\D2\E3@\BD\A9\9F\8F\0F\81\FC@\DCI,OwA\E7@" }>, align 8
@alloc1278 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\CC\95\E4G\B1\18\A9\BD\C6\FB\9A\E6\FF\FF\B1\BF\BFk\0C\F9p\A3\10\C0\83\17}Z/\EBP\C0c\CCBg\B3\B3t\C0\D7\8B\A3(\EF\A6u\C0" }>, align 8
@alloc1281 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"\DE\C5\98\0C\81`N@d(~\\\02m\90@`\1D\BE\8F\F8Z\B7@8\FAv\FA\B8\CC\C2@d\E8\0B\C7\1D\CC\A2@" }>, align 8
@alloc1284 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\86\AA\E1o\03\E1%\BEK\E2\C0\F7\F6\FF\B1\BFt\80\A4\AE\B2E\03\C0\14N\B9LJ\F75\C0E\1A\0AB\22\0AM\C0\0F\D8\92\A8\ACr?\C0" }>, align 8
@alloc1287 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"\D3}\07\84\92\EDA@\0E|JF9\98v@\D6a\10mn\A6\92@~\9B\C3\B8\FC\9F\91@\81\907\FC\96\B2e@" }>, align 8
@alloc1290 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"m\02'\E9\16\D3w\BEB\1E^Ib\FF\B1\BFC\A8$\8A96\F7\BF\F3\A7\AF\ED\F3\8A\1E\C0\03c$\C5\E6b&\C0\0F\E7\8F\AF\81\DE\09\C0" }>, align 8
@alloc1293 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"YY\8B\90e86@\8F\87\E8\0E\9E\06a@\9B\07\EAB\86\E7p@\FF\FA\B6:\03<c@\09\189D\B3P-@" }>, align 8
@alloc1297 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\00\00\00\00\00\00\00\00,\FE\FF\FF\FF\BF\B2?\D64\B3[R\89'@%\180\15cm\81@m\F4\18>\99M\C1@f\15\90\0E\D4\12\E2@" }>, align 8
@alloc1300 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\BC9[6\D5xd@c\05kNX\A2\BF@?\8C\D3TRf\01AC+\A5\83\DA\83(A=\0B\DE(k\A6)A\C50\95,m\FD\14\C1" }>, align 8
@alloc1303 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\D9\8C\CC)\8F=\B4=L\B0r\D1\FF\BF\B2?\D3=\95\B9\B0W\17@\E9\88\87\0A\92\E3`@\81\C4\C8\9D\F9\0C\90@\A6\E3\C6S\E9\17\9F@" }>, align 8
@alloc1306 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"C\15^\FB\B3\B1T@\CE\C0!\DA\A0;\A0@m\1EY{\D2g\D2@r#\E0\97\E3\B5\EB@\A0Tz\1F\18\91\E1@\09\C6\DB\BEW\EA\B4\C0" }>, align 8
@alloc1309 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\82\CB\DEj\03\CD2>B\08\8D\0E\EE\BF\B2?\F5\9C\14a\FC\C0\0A@\DD\AE-\96\98OE@\1F\FD^\E2\DBYe@\E0!\FA\81|\D7d@" }>, align 8
@alloc1312 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\A6C\E3\BF\22aH@\B3NT\86\83-\86@c\FCM\E4K\F0\AC@(j\C7\D7l<\B9@\C0\B1O\D9\AA\A8\A3@\0F\F4\1C \EB\A7b\C0" }>, align 8
@alloc1315 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\DBk\F7T;1\84>4>\88>\C5\BE\B2?\9Cw'\E7\97\F8\FF?\E5o\F9\AA\BF\FD,@J\DC\FB)\8E\AA?@\B4K\81q\B1@0@" }>, align 8
@alloc1318 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\EDz\C0\F7\96]>@@K\D1\E4\91\D5p@\22\BF\B3\22Ef\8A@\14\C2\\\9C|\97\8B@e\13\00\0ES\95j@1)\B3\F8j>\15\C0" }>, align 8
@alloc1326 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\00\00\00\00\00\00\90\BD\86N\01\C1\14\88\80\C3vS\1B\C5Z(\A4\C5" }>, align 4
@alloc1329 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"\98\11\E9B\EB\9BoE\DB\95\1EG|\08\E4G\BA\0B:G" }>, align 4
@alloc1332 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\8A\C5H\AD\FF\FF\8F\BD\88\1B\85\C0{Y\87\C2\9B\9D\A5\C3y7\AD\C3" }>, align 4
@alloc1335 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"\08\04sB\13h\83D\C4\D7\BAE\C8e\16F\EE`\16E" }>, align 4
@alloc1338 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\1B\08/\B1\B8\FF\8F\BD\95-\1A\C0R\BA\AF\C1\12Qh\C2e\95\FB\C1" }>, align 4
@alloc1341 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"\94l\0FB\CA\C1\B4Cs3\95D\E6\FF\8CD\B8\94-C" }>, align 4
@alloc1344 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\B7\98\BE\B3\12\FB\8F\BD\CC\B1\B9\BF\9FW\F4\C06\173\C1\0D\F4N\C0" }>, align 4
@alloc1347 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"-\C3\B1A\F04\08C2<\87C\1A\E0\19C\9A\85jA" }>, align 4
@alloc1351 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\00\00\00\00\00\00\96=\93J<A\19k\0BD\CAl\0AF\A0\96\10G" }>, align 4
@alloc1354 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\AA\C6#C\C2\12\FDE\932\0BH\D4\1EDIY3MIi\EB\A7\C8" }>, align 4
@alloc1357 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"y\EC\A1-\FF\FF\95=\86\BD\BA@\90\1C\07C\CDg\80DK\BF\F8D" }>, align 4
@alloc1360 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\A0\8D\A5B\07\DD\01E\94>\93F\1D\AF]G\C1\88\0CG\BER\A7\C5" }>, align 4
@alloc1363 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\1Bh\961p\FF\95=\E3\07V@\C5|*B\DF\CE*C\E4\BB&C" }>, align 4
@alloc1366 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\16\09CB\1Cl1D_\82gEg\E3\C9EWE\1DEY?\15\C3" }>, align 4
@alloc1369 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\DB\89!4*\F6\95=\BF\C4\FF?\FD\EDgAqT\FDA\8C\05\82A" }>, align 4
@alloc1372 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\B8\EC\F2A\8F\AC\86C)2SD\E5\BB\\D\98\AATCX\F3\A9\C0" }>, align 4
@alloc1379 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\00\00\00\00\00\00\00\00\CE\FC\FF\FF\FF\FF\BD?\CE\7F\7F5\9Dz*@\90\A5.e\D4\C0y@\CC2\A5\A3}E\AE@\DD\82'\C3z\EA\BE@" }>, align 8
@alloc1382 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"\ACle\8EE\8D\\@O'M\96\DC\85\AC@\7F\BB\C5\97\86\0B\E2@\BB\17\8F\B2,\D4\F7@-\0Bzi\11\15\DE@" }>, align 8
@alloc1385 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"}\CA\E1\DAg\06\AD=C\00\C1\E2\FF\FF\BD?\E3\15cn\046\1B@\ED\02&E\B9\13[@I\D6R\D0\16-\80@\B7\0C~\BB\B8\85\80@" }>, align 8
@alloc1388 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"=c\AF\A8\EA\A3M@\01g\06\1B6\FB\8E@\FB\B6\06WD\E9\B4@\15\BB\A5\B8\B0\A4\BE@Q^o\030\80\97@" }>, align 8
@alloc1391 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\DD\9E\AD\A7!\FC)>{\D1![\F5\FF\BD?\8A\AD^\E8\BCv\0F@)\D1\A6\9DH\8FA@7\18,M\85\C3V@\E5>\A8\8E\8FGH@" }>, align 8
@alloc1394 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"\9C\064\A1IeA@_\A7\F1\073\0Cu@#\D57P|[\90@\E91.\A3}\D6\8B@S\ED.|m\F2Y@" }>, align 8
@alloc1397 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\F4DU\F6\D4\E9|>\83\0Dv\BEB\FF\BD?\C0\AE\8F\F9\B7\F2\02@d\A9q\7F7|(@\E2\8E\7F\17\A8\B11@\FE\C1t\A5IK\14@" }>, align 8
@alloc1400 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"\DC\EC\D5\8A\BDo5@\D5,\F9\14\93R_@\D9\DB\A2\D5\D8\08m@\A9\84\18\DAzk]@\92QN\F4\B1\BA @" }>, align 8
@alloc1404 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\00\00\00\00\00\00\00\00\F3\FD\FF\FF\FF?\BA\BF\F7yg\A2\91E0\C0v\B5\E4S\D0\BC\87\C0\15t\F8@\E7$\C7\C0j\9C\D0e\D0\A6\E7\C0" }>, align 8
@alloc1407 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\E5\CD[\DE\A6,d@\19\84\D8\D0b\91\BE@\98^\B7\B0\9AW\00A\19\9C\86rS\F6%A\\\AD\19w\D2W$A\18\AA\A5\0Ei\F9\11\C1" }>, align 8
@alloc1410 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\98\A0\A1\1AC\FA\B6\BD\EF\7FY\CB\FF?\BA\BFK\AD\03\CA\E6\1C \C0\B0\B9\A7lm\F5f\C0Os1i\C6t\95\C0\9D\A7\FD\88\E3h\A4\C0" }>, align 8
@alloc1413 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\B2\11Z\FF\B2QT@9\F8{\E71\1F\9F@)\CEd\0D\1F\0F\D1@\97\D1\BA\AAmW\E8@K6|\CF\04K\DB@\04\A0\FF\FC.o\B2\C0" }>, align 8
@alloc1416 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"O\C8\8F\D3\A9\CF5\BET\ED\AEQ\EB?\BA\BF\FF\D9\023\C2p\12\C0\DA\16]\C2q\ECL\C0_\D5\18G\D3\87l\C0\F6\1B\\_\B9fk\C0" }>, align 8
@alloc1419 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\E4g\D3\CC#\D5G@>\EE1\C0\EB\0E\85@\9A|\8EDNh\AA@\A6T\1D\A6\BA\AB\B5@K\DF\D4\0Dz\BC\9D@\1F1\0A)p\E6`\C0" }>, align 8
@alloc1422 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\D2&\C6D&\F1\87\BE\10\B0H\91\8E>\BA\BF\DAN\BBi\84\04\06\C0\7F\90h\C1\E2\A93\C0\AAJ\10\DE\A3)E\C0Rn\CF96_5\C0" }>, align 8
@alloc1425 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"\FFd\AEx\8A\88=@\BA\1C\82\DBh\9Fo@\F7\A0I\CE\05\AC\87@)\C0\D4H%\1B\87@\D4\D8><^~c@k\E8\1B\E7\86\D6\13\C0" }>, align 8
@alloc1452 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\00\00\00\00\00\00\F0=\EA\D4SA\A3\06\CEC\ED+rE\D6S\F7E" }>, align 4
@alloc1455 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c",j\E4B\E5.dE5\\\10Gf\A1\BEG\8B\A8\F0F" }>, align 4
@alloc1458 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"?3h-\FF\FF\EF=#\B0\D9@\CA\9D\D8B\B7h\01D\C6-\04D" }>, align 4
@alloc1461 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"U\1FmB\B1\D9wD#J\A7E\86%\F5E\80\01\BCD" }>, align 4
@alloc1464 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\0D\E1O1\AB\FF\EF=\E7\B5{@Ez\0CB*\1C\B6B|<BB" }>, align 4
@alloc1467 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"M*\0BB\98a\A8C\E3\DB\82D\ED\B3^Dl\93\CFB" }>, align 4
@alloc1470 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\A8N\E73\16\FA\EF=\C0\95\17@\BC\E1CAA\8D\8DAMZ\A2@" }>, align 4
@alloc1473 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"\EC}\ABA\99\94\FAB\C7FhC\D7[\EBB\90\D5\05A" }>, align 4
@alloc1477 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\00\00\00\00\00\00\D2\BD\8D,\82\C1\83\E6=\C4:'9\C6\836=\C7" }>, align 4
@alloc1480 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"7e!C\17\8B\F4E\D6\BC\02H\9C\B2/I\94\BE\22IH\CB\8F\C8" }>, align 4
@alloc1483 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\19\D2\B7\AD\FE\FF\D1\BD6\E7\00\C1k\AB7\C33\A6\AB\C4\1CG#\C5" }>, align 4
@alloc1486 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\98\8D\A2B\8F\F9\F8D\F8x\88Fm\BBBG&X\DAFxy\93\C5" }>, align 4
@alloc1489 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"O}\AE\B1[\FF\D1\BD\12\86\93\C0\8Ecg\C2\9A>d\C3\CB5[\C3" }>, align 4
@alloc1492 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"\1E\A9>B^w(DrBSE\D5]\ADE\D0\E3\EDD\813\07\C3" }>, align 4
@alloc1495 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"2\89?\B4u\F4\D1\BD#$0\C0\16O\9D\C1\1FM)\C2\B2\F9\AA\C1" }>, align 4
@alloc1498 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"TD\ECAG\FB|C.`=D*\D98D\F2\F2\1BC7\B4\9E\C0" }>, align 4
@alloc2027 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/jn.rs" }>, align 1
@alloc2002 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00F\00\00\00\10\00\00\00" }>, align 8
@alloc2004 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00F\00\00\00\0F\00\00\00" }>, align 8
@alloc2006 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00J\00\00\00\0F\00\00\00" }>, align 8
@alloc2008 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00r\00\00\00\11\00\00\00" }>, align 8
@alloc2010 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\86\00\00\00\1C\00\00\00" }>, align 8
@alloc2012 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\89\00\00\00\15\00\00\00" }>, align 8
@alloc2014 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\BE\00\00\00\11\00\00\00" }>, align 8
@alloc2016 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\C8\00\00\00\11\00\00\00" }>, align 8
@alloc2018 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\DB\00\00\00\15\00\00\00" }>, align 8
@alloc2020 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\EA\00\00\00\15\00\00\00" }>, align 8
@alloc2022 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\1F\01\00\00\10\00\00\00" }>, align 8
@alloc2024 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\1F\01\00\00\0F\00\00\00" }>, align 8
@alloc2026 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\22\01\00\00\0F\00\00\00" }>, align 8
@alloc2028 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc2027, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00J\01\00\00\0D\00\00\00" }>, align 8
@alloc2055 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/jnf.rs" }>, align 1
@alloc2030 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00(\00\00\00\10\00\00\00" }>, align 8
@alloc2032 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00(\00\00\00\0F\00\00\00" }>, align 8
@alloc2034 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00,\00\00\00\0F\00\00\00" }>, align 8
@alloc2036 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00=\00\00\00\0D\00\00\00" }>, align 8
@alloc2038 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00P\00\00\00\18\00\00\00" }>, align 8
@alloc2040 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00S\00\00\00\11\00\00\00" }>, align 8
@alloc2042 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\86\00\00\00\11\00\00\00" }>, align 8
@alloc2044 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\90\00\00\00\11\00\00\00" }>, align 8
@alloc2046 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A3\00\00\00\15\00\00\00" }>, align 8
@alloc2048 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\B2\00\00\00\15\00\00\00" }>, align 8
@alloc2050 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E3\00\00\00\10\00\00\00" }>, align 8
@alloc2052 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E3\00\00\00\0F\00\00\00" }>, align 8
@alloc2054 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E6\00\00\00\0F\00\00\00" }>, align 8
@alloc2056 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2055, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F7\00\00\00\09\00\00\00" }>, align 8
@alloc2060 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/lgamma_r.rs" }>, align 1
@alloc2058 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2060, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9B\00\00\00\09\00\00\00" }>, align 8
@alloc2589 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc2061 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2060, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\12\01\00\00\12\00\00\00" }>, align 8
@alloc2065 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/lgammaf_r.rs" }>, align 1
@alloc2063 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2065, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00[\00\00\00\09\00\00\00" }>, align 8
@alloc2066 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2065, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\D1\00\00\00\12\00\00\00" }>, align 8
@alloc2075 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log.rs" }>, align 1
@alloc2068 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2075, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00Z\00\00\00\09\00\00\00" }>, align 8
@alloc2070 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2075, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00e\00\00\00\05\00\00\00" }>, align 8
@alloc2072 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2075, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00f\00\00\00\0A\00\00\00" }>, align 8
@alloc2074 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2075, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00f\00\00\00\05\00\00\00" }>, align 8
@alloc2076 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2075, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00g\00\00\00\0A\00\00\00" }>, align 8
@alloc2085 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log10.rs" }>, align 1
@alloc2078 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2085, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00B\00\00\00\09\00\00\00" }>, align 8
@alloc2080 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2085, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00M\00\00\00\05\00\00\00" }>, align 8
@alloc2082 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2085, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00N\00\00\00\0A\00\00\00" }>, align 8
@alloc2084 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2085, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00N\00\00\00\05\00\00\00" }>, align 8
@alloc2086 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2085, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00O\00\00\00\0A\00\00\00" }>, align 8
@alloc2095 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log10f.rs" }>, align 1
@alloc2088 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2095, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00:\00\00\00\09\00\00\00" }>, align 8
@alloc2090 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2095, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00E\00\00\00\05\00\00\00" }>, align 8
@alloc2092 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2095, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00F\00\00\00\0A\00\00\00" }>, align 8
@alloc2094 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2095, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00F\00\00\00\05\00\00\00" }>, align 8
@alloc2096 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2095, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00G\00\00\00\0A\00\00\00" }>, align 8
@alloc2101 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log1p.rs" }>, align 1
@alloc2098 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2101, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00t\00\00\00\09\00\00\00" }>, align 8
@alloc2100 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2101, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00u\00\00\00\0D\00\00\00" }>, align 8
@alloc2102 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2101, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\82\00\00\00\0E\00\00\00" }>, align 8
@alloc2107 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log1pf.rs" }>, align 1
@alloc2104 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2107, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00G\00\00\00\09\00\00\00" }>, align 8
@alloc2106 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2107, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00H\00\00\00\0D\00\00\00" }>, align 8
@alloc2108 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2107, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00U\00\00\00\0E\00\00\00" }>, align 8
@alloc2117 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log2.rs" }>, align 1
@alloc2110 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2117, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00?\00\00\00\09\00\00\00" }>, align 8
@alloc2112 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2117, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00J\00\00\00\05\00\00\00" }>, align 8
@alloc2114 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2117, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\00\00\00\0A\00\00\00" }>, align 8
@alloc2116 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2117, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\00\00\00\05\00\00\00" }>, align 8
@alloc2118 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2117, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00L\00\00\00\0A\00\00\00" }>, align 8
@alloc2127 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/log2f.rs" }>, align 1
@alloc2120 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2127, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\007\00\00\00\09\00\00\00" }>, align 8
@alloc2122 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2127, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00B\00\00\00\05\00\00\00" }>, align 8
@alloc2124 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2127, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00C\00\00\00\0A\00\00\00" }>, align 8
@alloc2126 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2127, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00C\00\00\00\05\00\00\00" }>, align 8
@alloc2128 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2127, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00D\00\00\00\0A\00\00\00" }>, align 8
@alloc2137 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/logf.rs" }>, align 1
@alloc2130 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2137, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00(\00\00\00\09\00\00\00" }>, align 8
@alloc2132 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2137, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\002\00\00\00\05\00\00\00" }>, align 8
@alloc2134 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2137, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\003\00\00\00\0A\00\00\00" }>, align 8
@alloc2136 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2137, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\003\00\00\00\05\00\00\00" }>, align 8
@alloc2138 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2137, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\004\00\00\00\0A\00\00\00" }>, align 8
@alloc2141 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/modf.rs" }>, align 1
@alloc2140 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2141, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\05\00\00\00\0D\00\00\00" }>, align 8
@alloc2142 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2141, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\19\00\00\00\0C\00\00\00" }>, align 8
@alloc2145 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/modff.rs" }>, align 1
@alloc2144 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2145, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\05\00\00\00\0D\00\00\00" }>, align 8
@alloc2146 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2145, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\18\00\00\00\0C\00\00\00" }>, align 8
@alloc2149 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/nextafter.rs" }>, align 1
@alloc2148 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2149, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\15\00\00\00\09\00\00\00" }>, align 8
@alloc2150 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2149, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\17\00\00\00\09\00\00\00" }>, align 8
@alloc2153 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/nextafterf.rs" }>, align 1
@alloc2152 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc2153, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\15\00\00\00\09\00\00\00" }>, align 8
@alloc2154 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc2153, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\17\00\00\00\09\00\00\00" }>, align 8
@alloc2227 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/pow.rs" }>, align 1
@alloc2156 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\86\00\00\00\11\00\00\00" }>, align 8
@alloc2158 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\89\00\00\00\1C\00\00\00" }>, align 8
@alloc2160 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\89\00\00\00\15\00\00\00" }>, align 8
@alloc2162 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8B\00\00\00\1A\00\00\00" }>, align 8
@alloc2164 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8B\00\00\00\14\00\00\00" }>, align 8
@alloc2166 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8C\00\00\00\1E\00\00\00" }>, align 8
@alloc2168 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8F\00\00\00\1B\00\00\00" }>, align 8
@alloc2170 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8F\00\00\00\15\00\00\00" }>, align 8
@alloc2172 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\91\00\00\00\1A\00\00\00" }>, align 8
@alloc2174 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\91\00\00\00\14\00\00\00" }>, align 8
@alloc2176 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\92\00\00\00\1E\00\00\00" }>, align 8
@alloc2178 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D1\00\00\00\15\00\00\00" }>, align 8
@alloc2180 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\16\01\00\00\0D\00\00\00" }>, align 8
@alloc2182 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\1A\01\00\00\0E\00\00\00" }>, align 8
@alloc2184 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\1A\01\00\00\09\00\00\00" }>, align 8
@alloc2186 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00(\01\00\00\0D\00\00\00" }>, align 8
@alloc2188 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00)\01\00\00\0D\00\00\00" }>, align 8
@alloc1111 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\F0?\00\00\00\00\00\00\F8?" }>, align 8
@alloc2190 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00.\01\00\00\1B\00\00\00" }>, align 8
@alloc2192 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00/\01\00\00\22\00\00\00" }>, align 8
@alloc2194 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\006\01\00\00\0D\00\00\00" }>, align 8
@alloc2196 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\008\01\00\00$\00\00\00" }>, align 8
@alloc1114 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\06\D0\CFC\EB\FDL>" }>, align 8
@alloc2198 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00K\01\00\000\00\00\00" }>, align 8
@alloc1120 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00@\03\B8\E2?" }>, align 8
@alloc2200 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00O\01\00\00/\00\00\00" }>, align 8
@alloc2202 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00P\01\00\00!\00\00\00" }>, align 8
@alloc2204 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00^\01\00\00\0C\00\00\00" }>, align 8
@alloc2206 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00j\01\00\00\0D\00\00\00" }>, align 8
@alloc2208 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00v\01\00\00\09\00\00\00" }>, align 8
@alloc2210 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00{\01\00\00 \00\00\00" }>, align 8
@alloc2212 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00{\01\00\00\11\00\00\00" }>, align 8
@alloc2214 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00{\01\00\00\0D\00\00\00" }>, align 8
@alloc2216 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00|\01\00\00\0D\00\00\00" }>, align 8
@alloc2218 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00}\01\00\004\00\00\00" }>, align 8
@alloc2220 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00~\01\00\000\00\00\00" }>, align 8
@alloc2222 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00~\01\00\00\0D\00\00\00" }>, align 8
@alloc2224 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\80\01\00\00\11\00\00\00" }>, align 8
@alloc2226 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\8F\01\00\00\05\00\00\00" }>, align 8
@alloc2228 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2227, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9D\00\00\00\18\00\00\00" }>, align 8
@alloc2285 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/powf.rs" }>, align 1
@alloc2230 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00j\00\00\00\11\00\00\00" }>, align 8
@alloc2232 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00k\00\00\00\17\00\00\00" }>, align 8
@alloc2234 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00k\00\00\00\11\00\00\00" }>, align 8
@alloc2236 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00l\00\00\00\16\00\00\00" }>, align 8
@alloc2238 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00l\00\00\00\10\00\00\00" }>, align 8
@alloc2240 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00m\00\00\00\1A\00\00\00" }>, align 8
@alloc2242 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\9D\00\00\00\11\00\00\00" }>, align 8
@alloc2244 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\DC\00\00\00\0D\00\00\00" }>, align 8
@alloc2246 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\DF\00\00\00\0E\00\00\00" }>, align 8
@alloc2248 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\DF\00\00\00\09\00\00\00" }>, align 8
@alloc2250 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\EB\00\00\00\0D\00\00\00" }>, align 8
@alloc2252 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\EC\00\00\00\0D\00\00\00" }>, align 8
@alloc1585 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\00\00\80?\00\00\C0?" }>, align 4
@alloc2254 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\F1\00\00\00\12\00\00\00" }>, align 8
@alloc2256 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\F2\00\00\00\19\00\00\00" }>, align 8
@alloc2258 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\F9\00\00\00\1E\00\00\00" }>, align 8
@alloc2260 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\FA\00\00\00\1B\00\00\00" }>, align 8
@alloc1588 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\00\00\00\00\DC\CF\D15" }>, align 4
@alloc2262 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\0E\01\00\00'\00\00\00" }>, align 8
@alloc1594 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\00\00\00\00\00\C0\15?" }>, align 4
@alloc2264 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\11\01\00\00\1D\00\00\00" }>, align 8
@alloc2266 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\14\01\00\00!\00\00\00" }>, align 8
@alloc2268 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\005\01\00\00\09\00\00\00" }>, align 8
@alloc2270 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\009\01\00\00 \00\00\00" }>, align 8
@alloc2272 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\009\01\00\00\11\00\00\00" }>, align 8
@alloc2274 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\009\01\00\00\0D\00\00\00" }>, align 8
@alloc2276 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00:\01\00\00\0D\00\00\00" }>, align 8
@alloc2278 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00;\01\00\00(\00\00\00" }>, align 8
@alloc2280 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00<\01\00\000\00\00\00" }>, align 8
@alloc2282 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00<\01\00\00\0D\00\00\00" }>, align 8
@alloc2284 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00>\01\00\00\11\00\00\00" }>, align 8
@alloc2286 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc2285, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00N\01\00\00\05\00\00\00" }>, align 8
@alloc2317 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/remquo.rs" }>, align 1
@alloc2288 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1B\00\00\00\11\00\00\00" }>, align 8
@alloc2290 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1B\00\00\00\09\00\00\00" }>, align 8
@alloc2292 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00&\00\00\00\10\00\00\00" }>, align 8
@alloc2294 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00&\00\00\00\09\00\00\00" }>, align 8
@alloc2296 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00.\00\00\00\08\00\00\00" }>, align 8
@alloc2298 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\007\00\00\00\11\00\00\00" }>, align 8
@alloc2300 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00;\00\00\00\0D\00\00\00" }>, align 8
@alloc2302 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00@\00\00\00\0D\00\00\00" }>, align 8
@alloc2304 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00G\00\00\00\11\00\00\00" }>, align 8
@alloc2306 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00N\00\00\00\09\00\00\00" }>, align 8
@alloc2308 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00Q\00\00\00\11\00\00\00" }>, align 8
@alloc2310 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00Q\00\00\00\09\00\00\00" }>, align 8
@alloc2312 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00W\00\00\00\15\00\00\00" }>, align 8
@alloc2314 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00]\00\00\00\1C\00\00\00" }>, align 8
@alloc2316 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00#\00\00\00\0D\00\00\00" }>, align 8
@alloc2318 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2317, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\18\00\00\00\0D\00\00\00" }>, align 8
@alloc2351 = private unnamed_addr constant <{ [87 x i8] }> <{ [87 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/remquof.rs" }>, align 1
@alloc2320 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\1B\00\00\00\11\00\00\00" }>, align 8
@alloc2322 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\1B\00\00\00\09\00\00\00" }>, align 8
@alloc2324 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00&\00\00\00\10\00\00\00" }>, align 8
@alloc2326 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00&\00\00\00\09\00\00\00" }>, align 8
@alloc2328 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00-\00\00\00\08\00\00\00" }>, align 8
@alloc2330 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\006\00\00\00\11\00\00\00" }>, align 8
@alloc2332 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00:\00\00\00\0D\00\00\00" }>, align 8
@alloc2334 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00?\00\00\00\0D\00\00\00" }>, align 8
@alloc2336 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00F\00\00\00\11\00\00\00" }>, align 8
@alloc2338 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00M\00\00\00\09\00\00\00" }>, align 8
@alloc2340 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00P\00\00\00\11\00\00\00" }>, align 8
@alloc2342 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00P\00\00\00\09\00\00\00" }>, align 8
@alloc2344 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00V\00\00\00\15\00\00\00" }>, align 8
@alloc2346 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00X\00\00\00\09\00\00\00" }>, align 8
@alloc2348 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00[\00\00\00\1C\00\00\00" }>, align 8
@alloc2350 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00#\00\00\00\0D\00\00\00" }>, align 8
@alloc2352 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2351, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\18\00\00\00\0D\00\00\00" }>, align 8
@alloc2361 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/scalbn.rs" }>, align 1
@alloc2354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\0B\00\00\00\09\00\00\00" }>, align 8
@alloc2356 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\0E\00\00\00\0D\00\00\00" }>, align 8
@alloc2358 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\17\00\00\00\09\00\00\00" }>, align 8
@alloc2360 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\1A\00\00\00\0D\00\00\00" }>, align 8
@alloc2362 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2361, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00 \00\00\00\19\00\00\00" }>, align 8
@alloc2371 = private unnamed_addr constant <{ [87 x i8] }> <{ [87 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/scalbnf.rs" }>, align 1
@alloc2364 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2371, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\09\00\00\00\09\00\00\00" }>, align 8
@alloc2366 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2371, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\0C\00\00\00\0D\00\00\00" }>, align 8
@alloc2368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2371, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\13\00\00\00\09\00\00\00" }>, align 8
@alloc2370 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2371, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\16\00\00\00\0D\00\00\00" }>, align 8
@alloc2372 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2371, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\1C\00\00\00\19\00\00\00" }>, align 8
@alloc2374 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/sincos.rs" }>, align 1
@alloc2375 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2374, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\007\00\00\00\0E\00\00\00" }>, align 8
@alloc2377 = private unnamed_addr constant <{ [87 x i8] }> <{ [87 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/sincosf.rs" }>, align 1
@alloc2378 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc2377, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00w\00\00\00\0E\00\00\00" }>, align 8
@alloc2391 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/tgamma.rs" }>, align 1
@alloc2380 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00)\00\00\00\09\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"\9E\A4\C1CQ\EA\15BWL\F5up\FC#B\1A\B6\8A\812\A1 B\1A&\E8\22\B5\B0\10B\E8\A1\A5\B3\C1\7F\F6A?\F3\D3\F5\18t\D5A*_\B9{\0C\AB\ADA\98\CC]\F9v\F8}AL\F4\80P\E9\F1EA\EB\87\87\1FB\B6\06A\04\D8X\08\AC\87\BF@R;\BC{`Zj@\05'\F6\1F\93\0D\04@" }>, align 8
@alloc2382 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00y\00\00\00\1D\00\00\00" }>, align 8
@3 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\A8\08\83A\00\00\00\80i\BD\9CA\00\00\00\B0\A6\FD\A1A\00\00\00pq\18\99A\00\00\00\90\B6\EE\85A\00\00\00\E0qqiA\00\00\00\00{\1FDA\00\00\00\00\BC\D0\15A\00\00\00\00\80\E7\DF@\00\00\00\00\00\14\9E@\00\00\00\00\00\80P@\00\00\00\00\00\00\F0?" }>, align 8
@alloc2384 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00z\00\00\00\1D\00\00\00" }>, align 8
@alloc2386 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00~\00\00\00\1D\00\00\00" }>, align 8
@alloc2388 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\7F\00\00\00\1D\00\00\00" }>, align 8
@4 = private unnamed_addr constant <{ [184 x i8] }> <{ [184 x i8] c"\00\00\00\00\00\00\F0?\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\18@\00\00\00\00\00\008@\00\00\00\00\00\00^@\00\00\00\00\00\80\86@\00\00\00\00\00\B0\B3@\00\00\00\00\00\B0\E3@\00\00\00\00\00&\16A\00\00\00\00\80\AFKA\00\00\00\00\A8\08\83A\00\00\00\00\FC\8C\BCA\00\00\00\C0\8C2\F7A\00\00\00(;L4B\00\00\80uw\07sB\00\00\80uw\07\B3B\00\00\D8\EC\EE7\F4B\00\00s\CA\EC\BE6C\00\90h0\B9\02{C\00ZA\BE\B3\E1\C0C \C6\B5\E9;(\06Dl\F0YaRwND" }>, align 8
@alloc2390 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\A0\00\00\00\19\00\00\00" }>, align 8
@alloc2392 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2391, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\A0\00\00\00\14\00\00\00" }>, align 8
@alloc2395 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/trunc.rs" }>, align 1
@alloc2394 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2395, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\10\00\00\00\16\00\00\00" }>, align 8
@alloc2396 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2395, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\19\00\00\00\09\00\00\00" }>, align 8
@alloc2399 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/truncf.rs" }>, align 1
@alloc2398 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2399, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\10\00\00\00\16\00\00\00" }>, align 8
@alloc2400 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc2399, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\19\00\00\00\09\00\00\00" }>, align 8
@_ZN4libm4math5k_tan1T17h4b9238c6e4951672E = internal constant <{ [104 x i8] }> <{ [104 x i8] c"cUUUUU\D5?z\FE\10\11\11\11\C1?\FEA\B3\1B\BA\A1\AB?7\D6\06\84\F4d\96?\93\84n\E9\E3&\82?(\03V\C9\22mm?\15\83\E0\FE\C8\DBW?\01e\F2\F2\D8DC?h\10\8D\1A\F7&0?\A6\927\A0\88~\14?\E9\A7\F02\0F\B8\12?sS`\DB\CBu\F3\BE\D4z\BFtp*\FB>" }>, align 8
@alloc2427 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/rem_pio2.rs" }>, align 1
@alloc2402 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AF\00\00\00\09\00\00\00" }>, align 8
@alloc2404 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B0\00\00\00\12\00\00\00" }>, align 8
@alloc2406 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B2\00\00\00\05\00\00\00" }>, align 8
@alloc2408 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B5\00\00\00\15\00\00\00" }>, align 8
@alloc2410 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B6\00\00\00\09\00\00\00" }>, align 8
@alloc2412 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B9\00\00\00\1D\00\00\00" }>, align 8
@alloc2414 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B9\00\00\000\00\00\00" }>, align 8
@alloc2416 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BB\00\00\00\11\00\00\00" }>, align 8
@alloc2418 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BB\00\00\00\16\00\00\00" }>, align 8
@alloc2420 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BB\00\00\00\22\00\00\00" }>, align 8
@alloc2422 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BD\00\00\00\09\00\00\00" }>, align 8
@alloc2424 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BD\00\00\00\14\00\00\00" }>, align 8
@alloc2426 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00B\00\00\00\0C\00\00\00" }>, align 8
@alloc2428 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc2427, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00J\00\00\00\10\00\00\00" }>, align 8
@alloc994 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00" }>, align 8
@alloc2658 = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/rem_pio2_large.rs" }>, align 1
@alloc2430 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\F5\00\00\00\0E\00\00\00" }>, align 8
@alloc2432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\F9\00\00\00\0E\00\00\00" }>, align 8
@alloc2434 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\FA\00\00\00\17\00\00\00" }>, align 8
@alloc2436 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\FA\00\00\00\12\00\00\00" }>, align 8
@alloc2438 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\FE\00\00\00\1C\00\00\00" }>, align 8
@alloc2440 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\FE\00\00\00\17\00\00\00" }>, align 8
@alloc2442 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\FE\00\00\00\12\00\00\00" }>, align 8
@alloc2444 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\02\01\00\00\11\00\00\00" }>, align 8
@alloc2446 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\03\01\00\00\0D\00\00\00" }>, align 8
@alloc1001 = private unnamed_addr constant <{ [2760 x i8] }> <{ [2760 x i8] c"\83\F9\A2\00DNn\00\FC)\15\00\D1W'\00\DD4\F5\00b\DB\C0\00<\99\95\00A\90C\00cQ\FE\00\BB\DE\AB\00\B7a\C5\00:n$\00\D2MB\00I\06\E0\00\09\EA.\00\1C\92\D1\00\EB\1D\FE\00)\B1\1C\00\E8>\A7\00\F55\82\00D\BB.\00\9C\E9\84\00\B4&p\00A~_\00\D6\919\00S\839\00\9C\F49\00\8B_\84\00(\F9\BD\00\F8\1F;\00\DE\FF\97\00\0F\98\05\00\11/\EF\00\0AZ\8B\00m\1Fm\00\CF~6\00\09\CB'\00FO\B7\00\9Ef?\00-\EA_\00\BA'u\00\E5\EB\C7\00={\F1\00\F79\07\00\92R\8A\00\FBk\EA\00\1F\B1_\00\08]\8D\000\03V\00{\FCF\00\F0\ABk\00 \BC\CF\006\F4\9A\00\E3\A9\1D\00^a\91\00\08\1B\E6\00\85\99e\00\A0\14_\00\8D@h\00\80\D8\FF\00'sM\00\06\061\00\CAV\15\00\C9\A8s\00{\E2`\00k\8C\C0\00\19\C4G\00\CDg\C3\00\09\E8\DC\00Y\83*\00\8Bv\C4\00\A6\1C\96\00D\AF\DD\00\19W\D1\00\A5>\05\00\05\07\FF\003~?\00\C22\E8\00\98O\DE\00\BB}2\00&=\C3\00\1Ek\EF\00\9F\F8^\005\1F:\00\7F\F2\CA\00\F1\87\1D\00|\90!\00j$|\00\D5n\FA\000-w\00\15;C\00\B5\14\C6\00\C3\19\9D\00\AD\C4\C2\00,MA\00\0C\00]\00\86}F\00\E3q-\00\9B\C6\9A\003b\00\00\B4\D2|\00\B4\A7\97\007U\D5\00\D7>\F6\00\A3\10\18\00Mv\FC\00d\9D*\00p\D7\AB\00c|\F8\00z\B0W\00\17\15\E7\00\C0IV\00;\D6\D9\00\A7\848\00$#\CB\00\D6\8Aw\00ZT#\00\00\1F\B9\00\F1\0A\1B\00\19\CE\DF\00\9F1\FF\00f\1Ej\00\99Wa\00\AC\FBG\00~\7F\D8\00\22e\B7\002\E8\89\00\E6\BF`\00\EF\C4\CD\00l6\09\00]?\D4\00\16\DE\D7\00X;\DE\00\DE\9B\92\00\D2\22(\00(\86\E8\00\E2XM\00\C6\CA2\00\08\E3\16\00\E0}\CB\00\17\C0P\00\F3\1D\A7\00\18\E0[\00.\134\00\83\12b\00\83H\01\00\F5\8E[\00\AD\B0\7F\00\1E\E9\F2\00HJC\00\10g\D3\00\AA\DD\D8\00\AE_B\00ja\CE\00\0A(\A4\00\D3\99\B4\00\06\A6\F2\00\\w\7F\00\A3\C2\83\00a<\88\00\8Asx\00\AF\8CZ\00o\D7\BD\00-\A6c\00\F4\BF\CB\00\8D\81\EF\00&\C1g\00U\CAE\00\CA\D96\00(\A8\D2\00\C2a\8D\00\12\C9w\00\04&\14\00\12F\9B\00\C4Y\C4\00\C8\C5D\00M\B2\91\00\00\17\F3\00\D4C\AD\00)I\E5\00\FD\D5\10\00\00\BE\FC\00\1E\94\CC\00p\CE\EE\00\13>\F5\00\EC\F1\80\00\B3\E7\C3\00\C7\F8(\00\93\05\94\00\C1q>\00.\09\B3\00\0BE\F3\00\88\12\9C\00\AB {\00.\B5\9F\00G\92\C2\00{2/\00\0CUm\00r\A7\90\00k\E7\1F\001\CB\96\00y\16J\00Ay\E2\00\F4\DF\89\00\E8\94\97\00\E2\E6\84\00\991\97\00\88\EDk\00__6\00\BB\FD\0E\00H\9A\B4\00g\A4l\00qrB\00\8D]2\00\9F\15\B8\00\BC\E5\09\00\8D1%\00\F7t9\000\05\1C\00\0D\0C\01\00K\08h\00,\EEX\00G\AA\90\00t\E7\02\00\BD\D6$\00\F7}\A6\00nHr\00\9F\16\EF\00\8E\94\A6\00\B4\91\F6\00\D1SQ\00\CF\0A\F2\00 \983\00\F5K~\00\B2ch\00\DD>_\00@]\03\00\85\89\7F\00UR)\007d\C0\00m\D8\10\002H2\00[Lu\00Nq\D4\00ETn\00\0B\09\C1\00*\F5i\00\14f\D5\00'\07\9D\00]\04P\00\B4;\DB\00\EAv\C5\00\87\F9\17\00Ik}\00\1D'\BA\00\96i)\00\C6\CC\AC\00\AD\14T\00\90\E2j\00\88\D9\89\00,rP\00\04\A4\BE\00w\07\94\00\F30p\00\00\FC'\00\EAq\A8\00f\C2I\00d\E0=\00\97\DD\83\00\A3?\97\00C\94\FD\00\0D\86\8C\001A\DE\00\929\9D\00\DDp\8C\00\17\B7\E7\00\08\DF;\00\157+\00\\\80\A0\00Z\80\93\00\10\11\92\00\0F\E8\D8\00l\80\AF\00\DB\FFK\008\90\0F\00Y\18v\00b\A5\15\00a\CB\BB\00\C7\89\B9\00\10@\BD\00\D2\F2\04\00Iu'\00\EB\B6\F6\00\DB\22\BB\00\0A\14\AA\00\89&/\00d\83v\00\09;3\00\0E\94\1A\00Q:\AA\00\1D\A3\C2\00\AF\ED\AE\00\\&\12\00m\C2M\00-z\9C\00\C0V\97\00\03?\83\00\09\F0\F6\00+@\8C\00m1\99\009\B4\07\00\0C \15\00\D8\C3[\00\F5\92\C4\00\C6\ADK\00N\CA\A5\00\A77\CD\00\E6\A96\00\AB\92\94\00\DDBh\00\19c\DE\00v\8C\EF\00h\8BR\00\FC\DB7\00\AE\A1\AB\00\DF\151\00\00\AE\A1\00\0C\FB\DA\00dMf\00\ED\05\B7\00)e0\00WV\BF\00G\FF:\00j\F9\B9\00u\BE\F3\00(\93\DF\00\AB\800\00f\8C\F6\00\04\CB\15\00\FA\22\06\00\D9\E4\1D\00=\B3\A4\00W\1B\8F\006\CD\09\00NB\E9\00\13\BE\A4\003#\B5\00\F0\AA\1A\00Oe\A8\00\D2\C1\A5\00\0B?\0F\00[x\CD\00#\F9v\00{\8B\04\00\89\17r\00\C6\A6S\00on\E2\00\EF\EB\00\00\9BJX\00\C4\DA\B7\00\AAf\BA\00v\CF\CF\00\D1\02\1D\00\B1\F1-\00\8C\99\C1\00\C3\ADw\00\86H\DA\00\F7]\A0\00\C6\80\F4\00\AC\F0/\00\DD\EC\9A\00?\\\BC\00\D0\DEm\00\90\C7\1F\00*\DB\B6\00\A3%:\00\00\AF\9A\00\ADS\93\00\B6W\04\00)-\B4\00K\80~\00\DA\07\A7\00v\AA\0E\00{Y\A1\00\16\12*\00\DC\B7-\00\FA\E5\FD\00\89\DB\FE\00\89\BE\FD\00\E4vl\00\06\A9\FC\00>\80p\00\85n\15\00\FD\87\FF\00(>\07\00ag3\00*\18\86\00M\BD\EA\00\B3\E7\AF\00\8Fmn\00\95g9\001\BF[\00\84\D7H\000\DF\16\00\C7-C\00%a5\00\C9p\CE\000\CB\B8\00\BFl\FD\00\A4\00\A2\00\05l\E4\00Z\DD\A0\00!oG\00b\12\D2\00\B9\\\84\00paI\00kV\E0\00\99R\01\00PU7\00\1E\D5\B7\003\F1\C4\00\13n_\00]0\E4\00\85.\A9\00\1D\B2\C3\00\A126\00\08\B7\A4\00\EA\B1\D4\00\16\F7!\00\8Fi\E4\00'\FFw\00\0C\03\80\00\8D@-\00O\CD\A0\00 \A5\99\00\B3\A2\D3\00/]\0A\00\B4\F9B\00\11\DA\CB\00}\BE\D0\00\9B\DB\C1\00\AB\17\BD\00\CA\A2\81\00\08j\\\00.U\17\00'\00U\00\7F\14\F0\00\E1\07\86\00\14\0Bd\00\96A\8D\00\87\BE\DE\00\DA\FD*\00k%\B6\00{\894\00\05\F3\FE\00\B9\BF\9E\00hjO\00J*\A8\00O\C4Z\00-\F8\BC\00\D7Z\98\00\F4\C7\95\00\0DM\8D\00 :\A6\00\A4W_\00\14?\B1\00\808\95\00\CC \01\00q\DD\86\00\C9\DE\B6\00\BF`\F5\00Me\11\00\01\07k\00\8C\B0\AC\00\B2\C0\D0\00QUH\00\1E\FB\0E\00\95r\C3\00\A3\06;\00\C0@5\00\06\DC{\00\E0E\CC\00N)\FA\00\D6\CA\C8\00\E8\F3A\00|d\DE\00\9Bd\D8\00\D9\BE1\00\A4\97\C3\00wX\D4\00i\E3\C5\00\F0\DA\13\00\BA:<\00F\18F\00Uu_\00\D2\BD\F5\00n\92\C6\00\AC.]\00\0ED\ED\00\1C>B\00a\C4\87\00)\FD\E9\00\E7\D6\F3\00\22|\CA\00o\915\00\08\E0\C5\00\FF\D7\8D\00nj\E2\00\B0\FD\C6\00\93\08\C1\00|]t\00k\AD\B2\00\CDn\9D\00>r{\00\C6\11j\00\F7\CF\A9\00)s\DF\00\B5\C9\BA\00\B7\00Q\00\E2\B2\0D\00t\BA$\00\E5}`\00t\D8\8A\00\0D\15,\00\81\18\0C\00~f\94\00\01)\16\00\9Fzv\00\FD\FD\BE\00VE\EF\00\D9~6\00\EC\D9\13\00\8B\BA\B9\00\C4\97\FC\001\A8'\00\F1n\C3\00\94\C56\00\D8\A8V\00\B4\A8\B5\00\CF\CC\0E\00\12\89-\00oW4\00,V\89\00\99\CE\E3\00\D6 \B9\00k^\AA\00>*\9C\00\11_\CC\00\FD\0BJ\00\E1\F4\FB\00\8E;m\00\E2\86,\00\E9\D4\84\00\FC\B4\A9\00\EF\EE\D1\00.5\C9\00/9a\008!D\00\1B\D9\C8\00\81\FC\0A\00\FBJj\00/\1C\D8\00S\B4\84\00N\99\8C\00T\22\CC\00*U\DC\00\C0\C6\D6\00\0B\19\96\00\1Ap\B8\00i\95d\00&Z`\00?R\EE\00\7F\11\0F\00\F4\B5\11\00\FC\CB\F5\004\BC-\004\BC\EE\00\E8]\CC\00\DD^`\00g\8E\9B\00\923\EF\00\C9\17\B8\00aX\9B\00\E1W\BC\00Q\83\C6\00\D8>\10\00\DDqH\00-\1C\DD\00\AF\18\A1\00!,F\00Y\F3\D7\00\D9z\98\00\9ET\C0\00O\86\FA\00V\06\FC\00\E5y\AE\00\89\226\008\AD\22\00g\93\DC\00U\E8\AA\00\82&8\00\CA\E7\9B\00Q\0D\A4\00\993\B1\00\A9\D7\0E\00i\05H\00e\B2\F0\00\7F\88\A7\00\88L\97\00\F9\D16\00!\92\B3\00{\82J\00\98\CF!\00@\9F\DC\00\DCGU\00\E1t:\00g\EBB\00\FE\9D\DF\00^\D4_\00{g\A4\00\BA\ACz\00U\F6\A2\00+\88#\00A\BAU\00Yn\08\00!*\86\009G\83\00\89\E3\E6\00\E5\9E\D4\00I\FB@\00\FFV\E9\00\1C\0F\CA\00\C5Y\8A\00\94\FA+\00\D3\C1\C5\00\0F\C5\CF\00\DBZ\AE\00G\C5\86\00\85Cb\00!\86;\00,y\94\00\10a\87\00*L{\00\80,\1A\00C\BF\12\00\88&\90\00x<\89\00\A8\C4\E4\00\E5\DB{\00\C4:\C2\00&\F4\EA\00\F7g\8A\00\0D\92\BF\00e\A3+\00=\93\B1\00\BD|\0B\00\A4Q\DC\00'\DDc\00i\E1\DD\00\9A\94\19\00\A8)\95\00h\CE(\00\09\ED\B4\00D\9F \00N\98\CA\00p\82c\00~|#\00\0F\B92\00\A7\F5\8E\00\14V\E7\00!\F1\08\00\B5\9D*\00o~M\00\A5\19Q\00\B5\F9\AB\00\82\DF\D6\00\96\DDa\00\166\02\00\C4:\9F\00\83\A2\A1\00r\EDm\009\8Dz\00\82\B8\A9\00k2\\\00F'[\00\004\ED\00\D2\00w\00\FC\F4U\00\01YM\00\E0q\80\00" }>, align 4
@alloc2448 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\08\01\00\00\0D\00\00\00" }>, align 8
@alloc2450 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\05\01\00\00\09\00\00\00" }>, align 8
@alloc2452 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\0A\01\00\00\09\00\00\00" }>, align 8
@alloc2454 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\11\01\00\00\13\00\00\00" }>, align 8
@alloc2456 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\11\01\00\00$\00\00\00" }>, align 8
@alloc2458 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\11\01\00\00\1E\00\00\00" }>, align 8
@alloc2460 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\13\01\00\00\09\00\00\00" }>, align 8
@alloc2462 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\1B\01\00\00\0D\00\00\00" }>, align 8
@alloc2464 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\1E\01\00\00\0D\00\00\00" }>, align 8
@alloc2466 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\1F\01\00\00\17\00\00\00" }>, align 8
@alloc2468 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\1F\01\00\00\11\00\00\00" }>, align 8
@alloc2470 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00 \01\00\00\0D\00\00\00" }>, align 8
@alloc2472 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00+\01\00\00\18\00\00\00" }>, align 8
@alloc2474 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00+\01\00\00\11\00\00\00" }>, align 8
@alloc2476 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00+\01\00\00#\00\00\00" }>, align 8
@alloc2478 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00,\01\00\00\0D\00\00\00" }>, align 8
@alloc2480 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00-\01\00\00%\00\00\00" }>, align 8
@alloc2482 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00-\01\00\00 \00\00\00" }>, align 8
@alloc2484 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00-\01\00\00\14\00\00\00" }>, align 8
@alloc2486 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00-\01\00\00\0D\00\00\00" }>, align 8
@alloc2488 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00.\01\00\00\19\00\00\00" }>, align 8
@alloc2490 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00.\01\00\00\12\00\00\00" }>, align 8
@alloc2492 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00.\01\00\00$\00\00\00" }>, align 8
@alloc2494 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\000\01\00\00\19\00\00\00" }>, align 8
@alloc2496 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\000\01\00\00\12\00\00\00" }>, align 8
@alloc2498 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\007\01\00\00\0D\00\00\00" }>, align 8
@alloc2500 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00;\01\00\00\19\00\00\00" }>, align 8
@alloc2502 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00B\01\00\00\22\00\00\00" }>, align 8
@alloc2504 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00B\01\00\00\15\00\00\00" }>, align 8
@alloc2506 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00?\01\00\00&\00\00\00" }>, align 8
@alloc2508 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00?\01\00\00\19\00\00\00" }>, align 8
@alloc2510 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00L\01\00\00 \00\00\00" }>, align 8
@alloc2512 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00L\01\00\00\19\00\00\00" }>, align 8
@alloc2514 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00I\01\00\00 \00\00\00" }>, align 8
@alloc2516 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00I\01\00\00\19\00\00\00" }>, align 8
@alloc2518 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\\\01\00\00\1C\00\00\00" }>, align 8
@alloc2520 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00]\01\00\00\16\00\00\00" }>, align 8
@alloc2522 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00b\01\00\00\1E\00\00\00" }>, align 8
@alloc2524 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00b\01\00\00\17\00\00\00" }>, align 8
@alloc2526 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00f\01\00\00\1A\00\00\00" }>, align 8
@alloc2528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00f\01\00\00%\00\00\00" }>, align 8
@alloc2530 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00h\01\00\000\00\00\00" }>, align 8
@alloc2532 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00h\01\00\00&\00\00\00" }>, align 8
@alloc2534 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00h\01\00\00\1B\00\00\00" }>, align 8
@alloc2536 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00h\01\00\00\15\00\00\00" }>, align 8
@alloc2538 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00k\01\00\00\1F\00\00\00" }>, align 8
@alloc2540 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00k\01\00\000\00\00\00" }>, align 8
@alloc2542 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00k\01\00\00*\00\00\00" }>, align 8
@alloc2544 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00m\01\00\00\15\00\00\00" }>, align 8
@alloc2546 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00o\01\00\00\11\00\00\00" }>, align 8
@alloc2548 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00c\01\00\00\15\00\00\00" }>, align 8
@alloc2550 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00y\01\00\00\09\00\00\00" }>, align 8
@alloc2552 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00z\01\00\00\09\00\00\00" }>, align 8
@alloc2554 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00{\01\00\00\0F\00\00\00" }>, align 8
@alloc2556 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00|\01\00\00\0D\00\00\00" }>, align 8
@alloc2558 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00}\01\00\00\0D\00\00\00" }>, align 8
@alloc2560 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\81\01\00\00\17\00\00\00" }>, align 8
@alloc2562 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\84\01\00\00\0D\00\00\00" }>, align 8
@alloc2564 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\85\01\00\00\0D\00\00\00" }>, align 8
@alloc2566 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\86\01\00\00\0D\00\00\00" }>, align 8
@alloc2568 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\87\01\00\00\0D\00\00\00" }>, align 8
@alloc2570 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\89\01\00\00\0D\00\00\00" }>, align 8
@alloc2572 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\90\01\00\00\1B\00\00\00" }>, align 8
@alloc2574 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\90\01\00\00\09\00\00\00" }>, align 8
@alloc2576 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\98\01\00\00\22\00\00\00" }>, align 8
@alloc1004 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"\00\00\00@\FB!\F9?\00\00\00\00-Dt>\00\00\00\80\98F\F8<\00\00\00`Q\CCx;\00\00\00\80\83\1B\F09\00\00\00@ %z8\00\00\00\80\22\82\E36\00\00\00\00\1D\F3i5" }>, align 8
@alloc2578 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\99\01\00\00\13\00\00\00" }>, align 8
@alloc2580 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\99\01\00\00'\00\00\00" }>, align 8
@alloc2582 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\99\01\00\00!\00\00\00" }>, align 8
@alloc2584 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\9A\01\00\00\0D\00\00\00" }>, align 8
@alloc2586 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\9C\01\00\00\10\00\00\00" }>, align 8
@alloc2588 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\9C\01\00\00\09\00\00\00" }>, align 8
@alloc2591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\D1\01\00\00\0E\00\00\00" }>, align 8
@alloc2593 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B9\01\00\00\1D\00\00\00" }>, align 8
@alloc2595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B9\01\00\00\16\00\00\00" }>, align 8
@alloc2597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B9\01\00\00&\00\00\00" }>, align 8
@alloc2599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BA\01\00\00&\00\00\00" }>, align 8
@alloc2601 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BA\01\00\00\1F\00\00\00" }>, align 8
@alloc2603 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BA\01\00\00\11\00\00\00" }>, align 8
@alloc2605 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BB\01\00\00\18\00\00\00" }>, align 8
@alloc2607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BB\01\00\00\11\00\00\00" }>, align 8
@alloc2609 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BE\01\00\00\1D\00\00\00" }>, align 8
@alloc2611 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BE\01\00\00\16\00\00\00" }>, align 8
@alloc2613 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BE\01\00\00&\00\00\00" }>, align 8
@alloc2615 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BF\01\00\00&\00\00\00" }>, align 8
@alloc2617 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BF\01\00\00\1F\00\00\00" }>, align 8
@alloc2619 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\BF\01\00\00\11\00\00\00" }>, align 8
@alloc2621 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C0\01\00\00\18\00\00\00" }>, align 8
@alloc2623 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C0\01\00\00\11\00\00\00" }>, align 8
@alloc2625 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C4\01\00\00\17\00\00\00" }>, align 8
@alloc2627 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\CB\01\00\00\1E\00\00\00" }>, align 8
@alloc2629 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\CB\01\00\00\11\00\00\00" }>, align 8
@alloc2631 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\CC\01\00\00\1E\00\00\00" }>, align 8
@alloc2633 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\CC\01\00\00\11\00\00\00" }>, align 8
@alloc2635 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\CD\01\00\00\11\00\00\00" }>, align 8
@alloc2637 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C7\01\00\00\1D\00\00\00" }>, align 8
@alloc2639 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C7\01\00\00\11\00\00\00" }>, align 8
@alloc2641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C8\01\00\00\1D\00\00\00" }>, align 8
@alloc2643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C8\01\00\00\11\00\00\00" }>, align 8
@alloc2645 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\C9\01\00\00\11\00\00\00" }>, align 8
@alloc2647 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\AB\01\00\00\17\00\00\00" }>, align 8
@alloc2649 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\AF\01\00\00\0D\00\00\00" }>, align 8
@alloc2651 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B0\01\00\00\12\00\00\00" }>, align 8
@alloc2653 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B2\01\00\00\17\00\00\00" }>, align 8
@alloc2655 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\B4\01\00\00\0D\00\00\00" }>, align 8
@alloc2657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\A4\01\00\00\17\00\00\00" }>, align 8
@alloc2659 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc2658, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\A6\01\00\00\0D\00\00\00" }>, align 8
@alloc2664 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.2/src/math/rem_pio2f.rs" }>, align 1
@alloc2661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2664, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00<\00\00\00\0E\00\00\00" }>, align 8
@alloc2663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2664, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00=\00\00\00\1C\00\00\00" }>, align 8
@alloc2665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc2664, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00@\00\00\00\11\00\00\00" }>, align 8

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hac0c038c73507a98E"(i64 %self.0, i64 %self.1, [0 x double]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca double*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call double* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbe606b66be56a872E"([0 x double]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds double, double* %_4, i64 %self.0
  store double* %1, double** %0, align 8
  %2 = load double*, double** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x double]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h37a6f96914914655E(double* %2, i64 %_7)
  %4 = extractvalue { [0 x double]*, i64 } %3, 0
  %5 = extractvalue { [0 x double]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %4, 0
  %7 = insertvalue { [0 x double]*, i64 } %6, i64 %5, 1
  ret { [0 x double]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h83d8a451d688ef91E"(i64 %self.0, i64 %self.1, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #11
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x double]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hac0c038c73507a98E"(i64 %self.0, i64 %self.1, [0 x double]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x double]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x double]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #11
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %_15.0, 0
  %3 = insertvalue { [0 x double]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x double]*, i64 } %3
}

; <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$14spec_next_back17haac2c4c9b900115fE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_7 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::ops::range::RangeInclusive<Idx>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h5e8f48491ce71f60E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
  %_6 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %is_iterating = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h4603d09786e0e995E"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6)
  br label %bb4

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb2
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7

bb4:                                              ; preds = %bb3
  br i1 %is_iterating, label %bb5, label %bb9

bb9:                                              ; preds = %bb4
  %8 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 2
  store i8 1, i8* %8, align 8
  %_15 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %9 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %_15)
  store i64 %9, i64* %_7, align 8
  br label %bb10

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_10 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <usize as core::iter::range::Step>::backward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h6b9a353d80de1669E"(i64 %_10, i64 1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::mem::replace
  %10 = call i64 @_ZN4core3mem7replace17ha732f0fd0f1d5a66E(i64* align 8 dereferenceable(8) %_13, i64 %n)
  store i64 %10, i64* %_7, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %11 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %13 = load i64, i64* %_7, align 8
  store i64 %13, i64* %12, align 8
  %14 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %14, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb11
}

; <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$9spec_next17h379de2181e512f40E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_7 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::ops::range::RangeInclusive<Idx>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h5e8f48491ce71f60E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
  %_6 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %is_iterating = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h4603d09786e0e995E"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6)
  br label %bb4

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb2
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7

bb4:                                              ; preds = %bb3
  br i1 %is_iterating, label %bb5, label %bb9

bb9:                                              ; preds = %bb4
  %8 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 2
  store i8 1, i8* %8, align 8
  %_15 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %9 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %_15)
  store i64 %9, i64* %_7, align 8
  br label %bb10

bb5:                                              ; preds = %bb4
  %_11 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_10 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h736cda8130d4dadeE"(i64 %_10, i64 1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
; call core::mem::replace
  %10 = call i64 @_ZN4core3mem7replace17ha732f0fd0f1d5a66E(i64* align 8 dereferenceable(8) %_13, i64 %n)
  store i64 %10, i64* %_7, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %11 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %13 = load i64, i64* %_7, align 8
  store i64 %13, i64* %12, align 8
  %14 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %14, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb11
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h71317f3d9b96ad78E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_8 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7f0843cdd5d1366cE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load i64, i64* %_5, align 8
  %_3 = icmp eq i64 %_4, -1
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_8 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h638038bbf92fe10aE"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_8)
  %_7.0 = extractvalue { i64, i64 } %3, 0
  %_7.1 = extractvalue { i64, i64 } %3, 1
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h1088041795c895c8E(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) #11
  unreachable

bb4:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %4 = call { [0 x double]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h83d8a451d688ef91E"(i64 %_7.0, i64 %_7.1, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %5 = extractvalue { [0 x double]*, i64 } %4, 0
  %6 = extractvalue { [0 x double]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %5, 0
  %8 = insertvalue { [0 x double]*, i64 } %7, i64 %6, 1
  ret { [0 x double]*, i64 } %8
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd5978b6202182c68E"(i64 %self, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_3, i64 0, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x double]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h71317f3d9b96ad78E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_3, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x double]*, i64 } %1, 0
  %3 = extractvalue { [0 x double]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %2, 0
  %5 = insertvalue { [0 x double]*, i64 } %4, i64 %3, 1
  ret { [0 x double]*, i64 } %5
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h736cda8130d4dadeE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h6b9a353d80de1669E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8bac867be4a45d8aE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ule i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h4603d09786e0e995E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::f32::<impl f32>::is_nan
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %self) unnamed_addr #0 {
start:
  %0 = fcmp une float %self, %self
  ret i1 %0
}

; core::f32::<impl f32>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = bitcast float %self to i32
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::f32::<impl f32>::from_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %v) unnamed_addr #0 {
start:
  %0 = alloca float, align 4
  %1 = bitcast i32 %v to float
  store float %1, float* %0, align 4
  %2 = load float, float* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret float %2
}

; core::f64::<impl f64>::is_nan
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %self) unnamed_addr #0 {
start:
  %0 = fcmp une double %self, %self
  ret i1 %0
}

; core::f64::<impl f64>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast double %self to i64
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::f64::<impl f64>::from_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %1 = bitcast i64 %v to double
  store double %1, double* %0, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17ha732f0fd0f1d5a66E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17ha80f22b57fabad8cE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hce15fea864a848e5E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7f0843cdd5d1366cE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
  ret i64* %0
}

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %0, i64 %start1, i64 %end) unnamed_addr #0 {
start:
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %0 to i64*
  store i64 %start1, i64* %1, align 8
  %2 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %0, i32 0, i32 1
  store i64 %end, i64* %2, align 8
  %3 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %0, i32 0, i32 2
  store i8 0, i8* %3, align 8
  ret void
}

; core::ops::range::RangeInclusive<Idx>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h5e8f48491ce71f60E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 2
  %2 = load i8, i8* %1, align 8, !range !3
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_5 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
  %_6 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le
  %_4 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8bac867be4a45d8aE"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6)
  br label %bb4

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb4, %bb1
  %3 = load i8, i8* %0, align 1, !range !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb4:                                              ; preds = %bb2
  %_3 = xor i1 %_4, true
  %5 = zext i1 %_3 to i8
  store i8 %5, i8* %0, align 1
  br label %bb3
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h638038bbf92fe10aE"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
  %exclusive_end = add i64 %_3, 1
  %2 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !3
  %_5 = trunc i8 %3 to i1
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %start1, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %exclusive_end, i64* %start1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_6 = load i64, i64* %start1, align 8
  %6 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_6, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %exclusive_end, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13
}

; core::ptr::read_volatile
; Function Attrs: inlinehint nonlazybind uwtable
define double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %src) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %1 = load volatile double, double* %src, align 8
  store double %1, double* %0, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; core::ptr::read_volatile
; Function Attrs: inlinehint nonlazybind uwtable
define float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %src) unnamed_addr #0 {
start:
  %0 = alloca float, align 4
  %1 = load volatile float, float* %src, align 4
  store float %1, float* %0, align 4
  %2 = load float, float* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret float %2
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h37a6f96914914655E(double* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h508450d62b686ba8E"(double* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x double]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hd657026edf34745eE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x double]*, i64 } %0, 0
  %2 = extractvalue { [0 x double]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %1, 0
  %4 = insertvalue { [0 x double]*, i64 } %3, i64 %2, 1
  ret { [0 x double]*, i64 } %4
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17ha80f22b57fabad8cE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hce15fea864a848e5E(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hd657026edf34745eE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[f64]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[f64]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[f64]>"* %_3 to { [0 x double]*, i64 }*
  %10 = getelementptr inbounds { [0 x double]*, i64 }, { [0 x double]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x double]*, [0 x double]** %10, align 8
  %12 = getelementptr inbounds { [0 x double]*, i64 }, { [0 x double]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %11, 0
  %15 = insertvalue { [0 x double]*, i64 } %14, i64 %13, 1
  ret { [0 x double]*, i64 } %15
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h508450d62b686ba8E"(double* %self) unnamed_addr #0 {
start:
  %0 = bitcast double* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define float* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h49c8118f8a24c42dE"([0 x float]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x float]* %self.0 to float*
  ret float* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6a00ccceb5d1c37cE"([0 x i32]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h73efdd7406ff2479E"([0 x i64]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64]* %self.0 to i64*
  ret i64* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb54856b43de8f497E"([0 x i64]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64]* %self.0 to i64*
  ret i64* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define double* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbe606b66be56a872E"([0 x double]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x double]* %self.0 to double*
  ret double* %0
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbda93f1fa34cbf27E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hece7e545f0792be7E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$9spec_next17h379de2181e512f40E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hdcecb39ee4e09eafE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$14spec_next_back17haac2c4c9b900115fE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %0, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_2 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::iter::adapters::rev::Rev<T>::new
  call void @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hce67a97ffdc447a0E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %0, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hce67a97ffdc447a0E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %0, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %iter) unnamed_addr #1 {
start:
  %_2 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_2 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %0 to %"core::ops::range::RangeInclusive<usize>"*
  %4 = bitcast %"core::ops::range::RangeInclusive<usize>"* %3 to i8*
  %5 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h699f35a7d2fc297dE"([3 x double]* align 8 dereferenceable(24) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4.0 = bitcast [3 x double]* %self to [0 x double]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x double]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h89e28f2b4be04880E"([0 x double]* nonnull align 8 %_4.0, i64 3, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x double]*, i64 } %1, 0
  %3 = extractvalue { [0 x double]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %2, 0
  %5 = insertvalue { [0 x double]*, i64 } %4, i64 %3, 1
  ret { [0 x double]*, i64 } %5
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h904fd5d3da2601fdE"(i64 %index, [0 x float]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7b14170dcefc9181E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h5c3c6ef2ac45c707E"(i64 %index, [0 x i64]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h827f24cdb6adaa04E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h79def50ad5394dd0E"(i64 %index, [0 x i64]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h33fcebc32d97ff06E"(i64 %index, [0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h2be7cccb574a7ce7E"(i64 %index, [0 x double]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::<impl [T]>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_mut
  %0 = call align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$7get_mut17ha753f30f6fab2fb6E"(i64 %index, [0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; core::slice::<impl [T]>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_mut
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$7get_mut17h1f6806651bd932b2E"(i64 %index, [0 x double]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x double]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h89e28f2b4be04880E"([0 x double]* nonnull align 8 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x double]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd5978b6202182c68E"(i64 %index, [0 x double]* nonnull align 8 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x double]*, i64 } %1, 0
  %3 = extractvalue { [0 x double]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x double]*, i64 } undef, [0 x double]* %2, 0
  %5 = insertvalue { [0 x double]*, i64 } %4, i64 %3, 1
  ret { [0 x double]*, i64 } %5
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h018a001d296986e7E"(i64* align 8 dereferenceable_or_null(8) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %val = load i64*, i64** %self, align 8, !nonnull !4
  ret i64* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %val = load i32*, i32** %self, align 8, !nonnull !4
  ret i32* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %val = load i32*, i32** %self, align 8, !nonnull !4
  ret i32* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to double**
  %val = load double*, double** %5, align 8, !nonnull !4
  ret double* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6f09c6a4e0a3de23E"(i64* align 8 dereferenceable_or_null(8) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %val = load i64*, i64** %self, align 8, !nonnull !4
  ret i64* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to double**
  %val = load double*, double** %5, align 8, !nonnull !4
  ret double* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1750 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #11
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i32** %self to float**
  %val = load float*, float** %5, align 8, !nonnull !4
  ret float* %val
}

; core::convert::num::<impl core::convert::From<i32> for f64>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN4core7convert3num64_$LT$impl$u20$core..convert..From$LT$i32$GT$$u20$for$u20$f64$GT$4from17h85693ff1a49bd807E"(i32 %small) unnamed_addr #0 {
start:
  %0 = sitofp i32 %small to double
  ret double %0
}

; core::core_arch::x86::sse::_mm_set_ss
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x863sse10_mm_set_ss17hc3a7e8c40dfeb91bE(<4 x float>* noalias nocapture sret(<4 x float>) dereferenceable(16) %0, float %a) unnamed_addr #2 {
start:
  %1 = bitcast <4 x float>* %0 to float*
  store float %a, float* %1, align 16
  %2 = getelementptr inbounds <4 x float>, <4 x float>* %0, i32 0, i32 1
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds <4 x float>, <4 x float>* %0, i32 0, i32 2
  store float 0.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds <4 x float>, <4 x float>* %0, i32 0, i32 3
  store float 0.000000e+00, float* %4, align 4
  ret void
}

; core::core_arch::x86::sse::_mm_sqrt_ss
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x863sse11_mm_sqrt_ss17hc1feaa2672a20133E(<4 x float>* noalias nocapture sret(<4 x float>) dereferenceable(16) %0, <4 x float>* noalias nocapture dereferenceable(16) %a) unnamed_addr #2 {
start:
  %_2 = load <4 x float>, <4 x float>* %a, align 16
  %1 = extractelement <4 x float> %_2, i64 0
  %2 = call float @llvm.sqrt.f32(float %1)
  %3 = insertelement <4 x float> %_2, float %2, i64 0
  store <4 x float> %3, <4 x float>* %0, align 16
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse::_mm_cvtss_f32
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @_ZN4core9core_arch3x863sse13_mm_cvtss_f3217he0f382d7e200af8dE(<4 x float>* noalias nocapture dereferenceable(16) %a) unnamed_addr #2 {
start:
  %0 = alloca float, align 4
  %_2 = load <4 x float>, <4 x float>* %a, align 16
  %1 = extractelement <4 x float> %_2, i32 0
  store float %1, float* %0, align 4
  %2 = load float, float* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret float %2
}

; core::core_arch::x86::sse2::_mm_set_pd
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse210_mm_set_pd17h2a1d554a4770fd39E(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %0, double %a, double %b) unnamed_addr #3 {
start:
  %1 = bitcast <2 x double>* %0 to double*
  store double %b, double* %1, align 16
  %2 = getelementptr inbounds <2 x double>, <2 x double>* %0, i32 0, i32 1
  store double %a, double* %2, align 8
  ret void
}

; core::core_arch::x86::sse2::_mm_set_sd
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse210_mm_set_sd17ha9a04c181879efb7E(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %0, double %a) unnamed_addr #3 {
start:
; call core::core_arch::x86::sse2::_mm_set_pd
  call void @_ZN4core9core_arch3x864sse210_mm_set_pd17h2a1d554a4770fd39E(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %0, double 0.000000e+00, double %a)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_sqrt_pd
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse211_mm_sqrt_pd17h375770549f17f13fE(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %0, <2 x double>* noalias nocapture dereferenceable(16) %a) unnamed_addr #3 {
start:
  %_2 = load <2 x double>, <2 x double>* %a, align 16
  %1 = call <2 x double> @llvm.sqrt.v2f64(<2 x double> %_2)
  store <2 x double> %1, <2 x double>* %0, align 16
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_cvtsd_f64
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4core9core_arch3x864sse213_mm_cvtsd_f6417h2d0878bb856b7672E(<2 x double>* noalias nocapture dereferenceable(16) %a) unnamed_addr #3 {
start:
  %0 = alloca double, align 8
  %_2 = load <2 x double>, <2 x double>* %a, align 16
  %1 = extractelement <2 x double> %_2, i32 0
  store double %1, double* %0, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define double @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5765487eb2a923b3E"(i32 %self) unnamed_addr #1 {
start:
; call core::convert::num::<impl core::convert::From<i32> for f64>::from
  %0 = call double @"_ZN4core7convert3num64_$LT$impl$u20$core..convert..From$LT$i32$GT$$u20$for$u20$f64$GT$4from17h85693ff1a49bd807E"(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret double %0
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %0, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %0 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %0, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he91be1cf9e424f6fE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define float* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h11c608b2c2e204caE"(i64 %self, [0 x float]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca float*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call float* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h49c8118f8a24c42dE"([0 x float]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds float, float* %_3, i64 %self
  store float* %1, float** %0, align 8
  %2 = load float*, float** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret float* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h482ae52723df1f9cE"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb54856b43de8f497E"([0 x i64]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i64, i64* %_3, i64 %self
  store i64* %1, i64** %0, align 8
  %2 = load i64*, i64** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h927164531bccc52dE"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h73efdd7406ff2479E"([0 x i64]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i64, i64* %_3, i64 %self
  store i64* %1, i64** %0, align 8
  %2 = load i64*, i64** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define double* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hcdef85b51a719552E"(i64 %self, [0 x double]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca double*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call double* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbe606b66be56a872E"([0 x double]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds double, double* %_3, i64 %self
  store double* %1, double** %0, align 8
  %2 = load double*, double** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hdad12d48a942049cE"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i32* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6a00ccceb5d1c37cE"([0 x i32]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i32, i32* %_3, i64 %self
  store i32* %1, i32** %0, align 8
  %2 = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcaa5b08871b7477bE"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast [0 x i32]* %slice.0 to i32*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %1, i64 %self
  store i32* %2, i32** %0, align 8
  %_3.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %_3.i
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define double* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfa8f61c82fd6840fE"(i64 %self, [0 x double]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca double*, align 8
  %1 = bitcast [0 x double]* %slice.0 to double*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds double, double* %1, i64 %self
  store double* %2, double** %0, align 8
  %_3.i = load double*, double** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double* %_3.i
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h2be7cccb574a7ce7E"(i64 %self, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call double* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hcdef85b51a719552E"(i64 %self, [0 x double]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to double**
  store double* %_9, double** %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i64*, i64** %0, align 8
  ret i64* %3
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h33fcebc32d97ff06E"(i64 %self, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i32** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hdad12d48a942049cE"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %_9, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i32*, i32** %0, align 8
  ret i32* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h5c3c6ef2ac45c707E"(i64 %self, [0 x i64]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h927164531bccc52dE"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %_9, i64** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i64*, i64** %0, align 8
  ret i64* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h79def50ad5394dd0E"(i64 %self, [0 x i64]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h482ae52723df1f9cE"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %_9, i64** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i64*, i64** %0, align 8
  ret i64* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h904fd5d3da2601fdE"(i64 %self, [0 x float]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i32** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call float* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h11c608b2c2e204caE"(i64 %self, [0 x float]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i32** %0 to float**
  store float* %_9, float** %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i32*, i32** %0, align 8
  ret i32* %3
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$7get_mut17h1f6806651bd932b2E"(i64 %self, [0 x double]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_9 = call double* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hfa8f61c82fd6840fE"(i64 %self, [0 x double]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to double**
  store double* %_9, double** %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i64*, i64** %0, align 8
  ret i64* %3
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$7get_mut17ha753f30f6fab2fb6E"(i64 %self, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i32** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_9 = call i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcaa5b08871b7477bE"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %_9, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i32*, i32** %0, align 8
  ret i32* %2
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hece7e545f0792be7E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h4603d09786e0e995E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h3fc2e781b26d46b3E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h736cda8130d4dadeE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17ha732f0fd0f1d5a66E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %self to %"core::ops::range::RangeInclusive<usize>"*
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17hdcecb39ee4e09eafE"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %_2)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; libm::math::acos::r
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math4acos1r17h2a99d54ea013d225E(double %z) unnamed_addr #1 {
start:
  %_17 = fmul double %z, 0x3F023DE10DFDF709
  %_16 = fadd double 0x3F49EFE07501B288, %_17
  %_14 = fmul double %z, %_16
  %_13 = fadd double 0xBFA48228B5688F3B, %_14
  %_11 = fmul double %z, %_13
  %_10 = fadd double 0x3FC9C1550E884455, %_11
  %_8 = fmul double %z, %_10
  %_7 = fadd double 0xBFD4D61203EB6F7D, %_8
  %_5 = fmul double %z, %_7
  %_4 = fadd double 0x3FC5555555555555, %_5
  %p = fmul double %z, %_4
  %_29 = fmul double %z, 0x3FB3B8C5B12E9282
  %_28 = fadd double 0xBFE6066C1B8D0159, %_29
  %_26 = fmul double %z, %_28
  %_25 = fadd double 0x40002AE59C598AC8, %_26
  %_23 = fmul double %z, %_25
  %_22 = fadd double 0xC0033A271C8A2D4B, %_23
  %_20 = fmul double %z, %_22
  %q = fadd double 1.000000e+00, %_20
  %0 = fdiv double %p, %q
  ret double %0
}

; libm::math::acos::acos
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4acos4acos17hb3448b32207798acE(double %x) unnamed_addr #1 {
start:
  %s = alloca double, align 8
  %w = alloca double, align 8
  %z = alloca double, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p_120f = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4066750463515557888)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %_11 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_13.0 = lshr i64 %_11, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %hx = trunc i64 %_13.0 to i32
  %ix = and i32 %hx, 2147483647
  %_15 = icmp uge i32 %ix, 1072693248
  br i1 %_15, label %bb4, label %bb12

bb12:                                             ; preds = %bb3
  %_33 = icmp ult i32 %ix, 1071644672
  br i1 %_33, label %bb13, label %bb14

bb4:                                              ; preds = %bb3
; call core::f64::<impl f64>::to_bits
  %_18 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb5

bb5:                                              ; preds = %bb4
  %lx = trunc i64 %_18 to i32
  %1 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %ix, i32 1072693248)
  %_23.0 = extractvalue { i32, i1 } %1, 0
  %_23.1 = extractvalue { i32, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %2, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  %_20 = or i32 %_23.0, %lx
  %3 = icmp eq i32 %_20, 0
  br i1 %3, label %bb7, label %bb11

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1752 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb6
  %_27.0 = lshr i32 %hx, 31
  br label %bb8

bb11:                                             ; preds = %bb6
  %_30 = fsub double %x, %x
  %4 = fdiv double 0.000000e+00, %_30
  store double %4, double* %0, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb21, %bb17, %bb15, %bb10, %bb9, %bb11
  %5 = load double, double* %0, align 8
  ret double %5

bb8:                                              ; preds = %bb7
  %6 = icmp eq i32 %_27.0, 0
  br i1 %6, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  store double 0.000000e+00, double* %0, align 8
  br label %bb27

bb9:                                              ; preds = %bb8
  %7 = fadd double 0x400921FB54442D18, %x1p_120f
  store double %7, double* %0, align 8
  br label %bb27

bb14:                                             ; preds = %bb12
  %_49.0 = lshr i32 %hx, 31
  br label %bb18

bb13:                                             ; preds = %bb12
  %_35 = icmp ule i32 %ix, 1012924416
  br i1 %_35, label %bb15, label %bb16

bb16:                                             ; preds = %bb13
  %_44 = fmul double %x, %x
; call libm::math::acos::r
  %_43 = call double @_ZN4libm4math4acos1r17h2a99d54ea013d225E(double %_44)
  br label %bb17

bb15:                                             ; preds = %bb13
  %8 = fadd double 0x3FF921FB54442D18, %x1p_120f
  store double %8, double* %0, align 8
  br label %bb27

bb17:                                             ; preds = %bb16
  %_41 = fmul double %x, %_43
  %_40 = fsub double 0x3C91A62633145C07, %_41
  %_38 = fsub double %x, %_40
  %9 = fsub double 0x3FF921FB54442D18, %_38
  store double %9, double* %0, align 8
  br label %bb27

bb18:                                             ; preds = %bb14
  %10 = icmp eq i32 %_49.0, 0
  br i1 %10, label %bb22, label %bb19

bb22:                                             ; preds = %bb18
  %_62 = fsub double 1.000000e+00, %x
  %11 = fmul double %_62, 5.000000e-01
  store double %11, double* %z, align 8
  %_65 = load double, double* %z, align 8
; call libm::math::sqrt::sqrt
  %_64 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_65)
  br label %bb23

bb19:                                             ; preds = %bb18
  %_50 = fadd double 1.000000e+00, %x
  %12 = fmul double %_50, 5.000000e-01
  store double %12, double* %z, align 8
  %_53 = load double, double* %z, align 8
; call libm::math::sqrt::sqrt
  %_52 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_53)
  br label %bb20

bb20:                                             ; preds = %bb19
  store double %_52, double* %s, align 8
  %_56 = load double, double* %z, align 8
; call libm::math::acos::r
  %_55 = call double @_ZN4libm4math4acos1r17h2a99d54ea013d225E(double %_56)
  br label %bb21

bb21:                                             ; preds = %bb20
  %_57 = load double, double* %s, align 8
  %_54 = fmul double %_55, %_57
  %13 = fsub double %_54, 0x3C91A62633145C07
  store double %13, double* %w, align 8
  %_60 = load double, double* %s, align 8
  %_61 = load double, double* %w, align 8
  %_59 = fadd double %_60, %_61
  %_58 = fsub double 0x3FF921FB54442D18, %_59
  %14 = fmul double 2.000000e+00, %_58
  store double %14, double* %0, align 8
  br label %bb27

bb23:                                             ; preds = %bb22
  store double %_64, double* %s, align 8
  %_69 = load double, double* %s, align 8
; call core::f64::<impl f64>::to_bits
  %_68 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_69)
  br label %bb24

bb24:                                             ; preds = %bb23
  %_67 = and i64 %_68, -4294967296
; call core::f64::<impl f64>::from_bits
  %_66 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_67)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_71 = load double, double* %z, align 8
  %_72 = fmul double %_66, %_66
  %_70 = fsub double %_71, %_72
  %_76 = load double, double* %s, align 8
  %_75 = fadd double %_76, %_66
  %c = fdiv double %_70, %_75
  %_80 = load double, double* %z, align 8
; call libm::math::acos::r
  %_79 = call double @_ZN4libm4math4acos1r17h2a99d54ea013d225E(double %_80)
  br label %bb26

bb26:                                             ; preds = %bb25
  %_81 = load double, double* %s, align 8
  %_78 = fmul double %_79, %_81
  %15 = fadd double %_78, %c
  store double %15, double* %w, align 8
  %_85 = load double, double* %w, align 8
  %_83 = fadd double %_66, %_85
  %16 = fmul double 2.000000e+00, %_83
  store double %16, double* %0, align 8
  br label %bb27
}

; libm::math::acosf::r
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math5acosf1r17hf82969305c685f55E(float %z) unnamed_addr #1 {
start:
  %_8 = fmul float %z, 0xBF81BA6D60000000
  %_7 = fadd float 0xBFA5E27740000000, %_8
  %_5 = fmul float %z, %_7
  %_4 = fadd float 0x3FC5554EA0000000, %_5
  %p = fmul float %z, %_4
  %_11 = fmul float %z, 0xBFE69CB5C0000000
  %q = fadd float 1.000000e+00, %_11
  %0 = fdiv float %p, %q
  ret float %0
}

; libm::math::acosf::acosf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5acosf5acosf17h88a25764af285fbaE(float %x) unnamed_addr #1 {
start:
  %hx = alloca i32, align 4
  %s = alloca float, align 4
  %w = alloca float, align 4
  %z = alloca float, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::from_bits
  %x1p_120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 58720256)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %hx, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_9 = load i32, i32* %hx, align 4
  %ix = and i32 %_9, 2147483647
  %_10 = icmp uge i32 %ix, 1065353216
  br i1 %_10, label %bb3, label %bb9

bb9:                                              ; preds = %bb2
  %_21 = icmp ult i32 %ix, 1056964608
  br i1 %_21, label %bb10, label %bb11

bb3:                                              ; preds = %bb2
  %2 = icmp eq i32 %ix, 1065353216
  br i1 %2, label %bb4, label %bb8

bb4:                                              ; preds = %bb3
  %_14 = load i32, i32* %hx, align 4
  %_15.0 = lshr i32 %_14, 31
  br label %bb5

bb8:                                              ; preds = %bb3
  %_18 = fsub float %x, %x
  %3 = fdiv float 0.000000e+00, %_18
  store float %3, float* %0, align 4
  br label %bb24

bb24:                                             ; preds = %bb23, %bb18, %bb14, %bb12, %bb7, %bb6, %bb8
  %4 = load float, float* %0, align 4
  ret float %4

bb5:                                              ; preds = %bb4
  %5 = icmp eq i32 %_15.0, 0
  br i1 %5, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
  store float 0.000000e+00, float* %0, align 4
  br label %bb24

bb6:                                              ; preds = %bb5
  %6 = fadd float 0x400921FB40000000, %x1p_120
  store float %6, float* %0, align 4
  br label %bb24

bb11:                                             ; preds = %bb9
  %_36 = load i32, i32* %hx, align 4
  %_37.0 = lshr i32 %_36, 31
  br label %bb15

bb10:                                             ; preds = %bb9
  %_23 = icmp ule i32 %ix, 847249408
  br i1 %_23, label %bb12, label %bb13

bb13:                                             ; preds = %bb10
  %_32 = fmul float %x, %x
; call libm::math::acosf::r
  %_31 = call float @_ZN4libm4math5acosf1r17hf82969305c685f55E(float %_32)
  br label %bb14

bb12:                                             ; preds = %bb10
  %7 = fadd float 0x3FF921FB40000000, %x1p_120
  store float %7, float* %0, align 4
  br label %bb24

bb14:                                             ; preds = %bb13
  %_29 = fmul float %x, %_31
  %_28 = fsub float 0x3E74442D00000000, %_29
  %_26 = fsub float %x, %_28
  %8 = fsub float 0x3FF921FB40000000, %_26
  store float %8, float* %0, align 4
  br label %bb24

bb15:                                             ; preds = %bb11
  %9 = icmp eq i32 %_37.0, 0
  br i1 %9, label %bb19, label %bb16

bb19:                                             ; preds = %bb15
  %_50 = fsub float 1.000000e+00, %x
  %10 = fmul float %_50, 5.000000e-01
  store float %10, float* %z, align 4
  %_53 = load float, float* %z, align 4
; call libm::math::sqrtf::sqrtf
  %_52 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_53)
  br label %bb20

bb16:                                             ; preds = %bb15
  %_38 = fadd float 1.000000e+00, %x
  %11 = fmul float %_38, 5.000000e-01
  store float %11, float* %z, align 4
  %_41 = load float, float* %z, align 4
; call libm::math::sqrtf::sqrtf
  %_40 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_41)
  br label %bb17

bb17:                                             ; preds = %bb16
  store float %_40, float* %s, align 4
  %_44 = load float, float* %z, align 4
; call libm::math::acosf::r
  %_43 = call float @_ZN4libm4math5acosf1r17hf82969305c685f55E(float %_44)
  br label %bb18

bb18:                                             ; preds = %bb17
  %_45 = load float, float* %s, align 4
  %_42 = fmul float %_43, %_45
  %12 = fsub float %_42, 0x3E74442D00000000
  store float %12, float* %w, align 4
  %_48 = load float, float* %s, align 4
  %_49 = load float, float* %w, align 4
  %_47 = fadd float %_48, %_49
  %_46 = fsub float 0x3FF921FB40000000, %_47
  %13 = fmul float 2.000000e+00, %_46
  store float %13, float* %0, align 4
  br label %bb24

bb20:                                             ; preds = %bb19
  store float %_52, float* %s, align 4
  %_55 = load float, float* %s, align 4
; call core::f32::<impl f32>::to_bits
  %_54 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_55)
  br label %bb21

bb21:                                             ; preds = %bb20
  store i32 %_54, i32* %hx, align 4
  %_58 = load i32, i32* %hx, align 4
  %_57 = and i32 %_58, -4096
; call core::f32::<impl f32>::from_bits
  %df = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_57)
  br label %bb22

bb22:                                             ; preds = %bb21
  %_61 = load float, float* %z, align 4
  %_62 = fmul float %df, %df
  %_60 = fsub float %_61, %_62
  %_66 = load float, float* %s, align 4
  %_65 = fadd float %_66, %df
  %c = fdiv float %_60, %_65
  %_70 = load float, float* %z, align 4
; call libm::math::acosf::r
  %_69 = call float @_ZN4libm4math5acosf1r17hf82969305c685f55E(float %_70)
  br label %bb23

bb23:                                             ; preds = %bb22
  %_71 = load float, float* %s, align 4
  %_68 = fmul float %_69, %_71
  %14 = fadd float %_68, %c
  store float %14, float* %w, align 4
  %_75 = load float, float* %w, align 4
  %_73 = fadd float %df, %_75
  %15 = fmul float 2.000000e+00, %_73
  store float %15, float* %0, align 4
  br label %bb24
}

; libm::math::acosh::acosh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5acosh5acosh17ha46672bda1e2aab2E(double %x) unnamed_addr #1 {
start:
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8.0 = lshr i64 %u, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %e = and i64 %_8.0, 2047
  %_9 = icmp ult i64 %e, 1024
  br i1 %_9, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  %_25 = icmp ult i64 %e, 1049
  br i1 %_25, label %bb6, label %bb8

bb3:                                              ; preds = %bb2
  %_13 = fsub double %x, 1.000000e+00
  %_18 = fsub double %x, 1.000000e+00
  %_20 = fsub double %x, 1.000000e+00
  %_17 = fmul double %_18, %_20
  %_23 = fsub double %x, 1.000000e+00
  %_22 = fmul double 2.000000e+00, %_23
  %_16 = fadd double %_17, %_22
; call libm::math::sqrt::sqrt
  %_15 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_16)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_12 = fadd double %_13, %_15
; call libm::math::log1p::log1p
  %1 = call double @_ZN4libm4math5log1p5log1p17ha55fac024960e744E(double %_12)
  store double %1, double* %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7, %bb4
  %2 = load double, double* %0, align 8
  ret double %2

bb8:                                              ; preds = %bb5
; call libm::math::log::log
  %_39 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %x)
  br label %bb9

bb6:                                              ; preds = %bb5
  %_29 = fmul double 2.000000e+00, %x
  %_36 = fmul double %x, %x
  %_35 = fsub double %_36, 1.000000e+00
; call libm::math::sqrt::sqrt
  %_34 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_35)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_32 = fadd double %x, %_34
  %_31 = fdiv double 1.000000e+00, %_32
  %_28 = fsub double %_29, %_31
; call libm::math::log::log
  %3 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_28)
  store double %3, double* %0, align 8
  br label %bb10

bb9:                                              ; preds = %bb8
  %4 = fadd double %_39, 0x3FE62E42FEFA39EF
  store double %4, double* %0, align 8
  br label %bb10
}

; libm::math::acoshf::acoshf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6acoshf6acoshf17h98ef12f2d0478895E(float %x) unnamed_addr #1 {
start:
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %u = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %a = and i32 %u, 2147483647
  %_6 = icmp ult i32 %a, 1073741824
  br i1 %_6, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %_22 = icmp ult i32 %a, 1166016512
  br i1 %_22, label %bb5, label %bb7

bb2:                                              ; preds = %bb1
  %_10 = fsub float %x, 1.000000e+00
  %_15 = fsub float %x, 1.000000e+00
  %_17 = fsub float %x, 1.000000e+00
  %_14 = fmul float %_15, %_17
  %_20 = fsub float %x, 1.000000e+00
  %_19 = fmul float 2.000000e+00, %_20
  %_13 = fadd float %_14, %_19
; call libm::math::sqrtf::sqrtf
  %_12 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_13)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = fadd float %_10, %_12
; call libm::math::log1pf::log1pf
  %1 = call float @_ZN4libm4math6log1pf6log1pf17hc0f7e233528d6ae3E(float %_9)
  store float %1, float* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6, %bb3
  %2 = load float, float* %0, align 4
  ret float %2

bb7:                                              ; preds = %bb4
; call libm::math::logf::logf
  %_36 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %x)
  br label %bb8

bb5:                                              ; preds = %bb4
  %_26 = fmul float 2.000000e+00, %x
  %_33 = fmul float %x, %x
  %_32 = fsub float %_33, 1.000000e+00
; call libm::math::sqrtf::sqrtf
  %_31 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_32)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_29 = fadd float %x, %_31
  %_28 = fdiv float 1.000000e+00, %_29
  %_25 = fsub float %_26, %_28
; call libm::math::logf::logf
  %3 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_25)
  store float %3, float* %0, align 4
  br label %bb9

bb8:                                              ; preds = %bb7
  %4 = fadd float %_36, 0x3FE62E4300000000
  store float %4, float* %0, align 4
  br label %bb9
}

; libm::math::asin::comp_r
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math4asin6comp_r17hd732093c49ac5cdeE(double %z) unnamed_addr #1 {
start:
  %_17 = fmul double %z, 0x3F023DE10DFDF709
  %_16 = fadd double 0x3F49EFE07501B288, %_17
  %_14 = fmul double %z, %_16
  %_13 = fadd double 0xBFA48228B5688F3B, %_14
  %_11 = fmul double %z, %_13
  %_10 = fadd double 0x3FC9C1550E884455, %_11
  %_8 = fmul double %z, %_10
  %_7 = fadd double 0xBFD4D61203EB6F7D, %_8
  %_5 = fmul double %z, %_7
  %_4 = fadd double 0x3FC5555555555555, %_5
  %p = fmul double %z, %_4
  %_29 = fmul double %z, 0x3FB3B8C5B12E9282
  %_28 = fadd double 0xBFE6066C1B8D0159, %_29
  %_26 = fmul double %z, %_28
  %_25 = fadd double 0x40002AE59C598AC8, %_26
  %_23 = fmul double %z, %_25
  %_22 = fadd double 0xC0033A271C8A2D4B, %_23
  %_20 = fmul double %z, %_22
  %q = fadd double 1.000000e+00, %_20
  %0 = fdiv double %p, %q
  ret double %0
}

; libm::math::asin::asin
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4asin4asin17h3b8a3dc191ce6846E(double %0) unnamed_addr #1 {
start:
  %_28 = alloca i8, align 1
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_8 = load double, double* %x, align 8
; call libm::math::get_high_word
  %_7 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %ix = and i32 %_7, 2147483647
  %_10 = icmp uge i32 %ix, 1072693248
  br i1 %_10, label %bb2, label %bb8

bb8:                                              ; preds = %bb1
  %_26 = icmp ult i32 %ix, 1071644672
  br i1 %_26, label %bb9, label %bb10

bb2:                                              ; preds = %bb1
  %_14 = load double, double* %x, align 8
; call libm::math::get_low_word
  %_13 = call i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %_14)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %ix, i32 1072693248)
  %_18.0 = extractvalue { i32, i1 } %2, 0
  %_18.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %3, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %_15 = or i32 %_18.0, %_13
  %4 = icmp eq i32 %_15, 0
  br i1 %4, label %bb5, label %bb7

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1754 to %"core::panic::location::Location"*)) #11
  unreachable

bb5:                                              ; preds = %bb4
  %_21 = load double, double* %x, align 8
  %_20 = fmul double %_21, 0x3FF921FB54442D18
; call core::f64::<impl f64>::from_bits
  %_22 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4066750463515557888)
  br label %bb6

bb7:                                              ; preds = %bb4
  %_24 = load double, double* %x, align 8
  %_25 = load double, double* %x, align 8
  %_23 = fsub double %_24, %_25
  %5 = fdiv double 0.000000e+00, %_23
  store double %5, double* %1, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25, %bb16, %bb14, %bb6, %bb7
  %6 = load double, double* %1, align 8
  ret double %6

bb6:                                              ; preds = %bb5
  %7 = fadd double %_20, %_22
  store double %7, double* %1, align 8
  br label %bb27

bb10:                                             ; preds = %bb8
  %_42 = load double, double* %x, align 8
; call libm::math::fabs::fabs
  %_41 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_42)
  br label %bb17

bb9:                                              ; preds = %bb8
  %_29 = icmp ult i32 %ix, 1045430272
  br i1 %_29, label %bb12, label %bb11

bb11:                                             ; preds = %bb9
  store i8 0, i8* %_28, align 1
  br label %bb13

bb12:                                             ; preds = %bb9
  %_31 = icmp uge i32 %ix, 1048576
  %8 = zext i1 %_31 to i8
  store i8 %8, i8* %_28, align 1
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %9 = load i8, i8* %_28, align 1, !range !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %_33 = load double, double* %x, align 8
  %_35 = load double, double* %x, align 8
  %_38 = load double, double* %x, align 8
  %_39 = load double, double* %x, align 8
  %_37 = fmul double %_38, %_39
; call libm::math::asin::comp_r
  %_36 = call double @_ZN4libm4math4asin6comp_r17hd732093c49ac5cdeE(double %_37)
  br label %bb16

bb14:                                             ; preds = %bb13
  %11 = load double, double* %x, align 8
  store double %11, double* %1, align 8
  br label %bb27

bb16:                                             ; preds = %bb15
  %_34 = fmul double %_35, %_36
  %12 = fadd double %_33, %_34
  store double %12, double* %1, align 8
  br label %bb27

bb17:                                             ; preds = %bb10
  %_40 = fsub double 1.000000e+00, %_41
  %z = fmul double %_40, 5.000000e-01
; call libm::math::sqrt::sqrt
  %_43 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %z)
  br label %bb18

bb18:                                             ; preds = %bb17
; call libm::math::asin::comp_r
  %_45 = call double @_ZN4libm4math4asin6comp_r17hd732093c49ac5cdeE(double %z)
  br label %bb19

bb19:                                             ; preds = %bb18
  %_47 = icmp uge i32 %ix, 1072640819
  br i1 %_47, label %bb20, label %bb21

bb21:                                             ; preds = %bb19
; call libm::math::with_set_low_word
  %_58 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_43, i32 0)
  br label %bb22

bb20:                                             ; preds = %bb19
  %_53 = fmul double %_43, %_45
  %_51 = fadd double %_43, %_53
  %_50 = fmul double 2.000000e+00, %_51
  %_49 = fsub double %_50, 0x3C91A62633145C07
  %13 = fsub double 0x3FF921FB54442D18, %_49
  store double %13, double* %x, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb20
  %_84.0 = lshr i32 %_7, 31
  br label %bb24

bb22:                                             ; preds = %bb21
  %_62 = fmul double %_58, %_58
  %_60 = fsub double %z, %_62
  %_65 = fadd double %_43, %_58
  %c = fdiv double %_60, %_65
  %_72 = fmul double 2.000000e+00, %_43
  %_71 = fmul double %_72, %_45
  %_76 = fmul double 2.000000e+00, %c
  %_75 = fsub double 0x3C91A62633145C07, %_76
  %_70 = fsub double %_71, %_75
  %_80 = fmul double 2.000000e+00, %_58
  %_78 = fsub double 0x3FE921FB54442D18, %_80
  %_69 = fsub double %_70, %_78
  %14 = fsub double 0x3FE921FB54442D18, %_69
  store double %14, double* %x, align 8
  br label %bb23

bb24:                                             ; preds = %bb23
  %15 = icmp eq i32 %_84.0, 0
  br i1 %15, label %bb26, label %bb25

bb26:                                             ; preds = %bb24
  %16 = load double, double* %x, align 8
  store double %16, double* %1, align 8
  br label %bb27

bb25:                                             ; preds = %bb24
  %_85 = load double, double* %x, align 8
  %17 = fneg double %_85
  store double %17, double* %1, align 8
  br label %bb27
}

; libm::math::asinf::r
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math5asinf1r17h68fcfcb171d7f636E(float %z) unnamed_addr #1 {
start:
  %_8 = fmul float %z, 0xBF81BA6D60000000
  %_7 = fadd float 0xBFA5E27740000000, %_8
  %_5 = fmul float %z, %_7
  %_4 = fadd float 0x3FC5554EA0000000, %_5
  %p = fmul float %z, %_4
  %_11 = fmul float %z, 0xBFE69CB5C0000000
  %q = fadd float 1.000000e+00, %_11
  %0 = fdiv float %p, %q
  ret float %0
}

; libm::math::asinf::asinf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5asinf5asinf17h4b144ccb22327e4bE(float %0) unnamed_addr #1 {
start:
  %_20 = alloca i8, align 1
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f64::<impl f64>::from_bits
  %x1p_120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4066750463515557888)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %hx = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %ix = and i32 %hx, 2147483647
  %_7 = icmp uge i32 %ix, 1065353216
  br i1 %_7, label %bb3, label %bb6

bb6:                                              ; preds = %bb2
  %_18 = icmp ult i32 %ix, 1056964608
  br i1 %_18, label %bb7, label %bb8

bb3:                                              ; preds = %bb2
  %2 = icmp eq i32 %ix, 1065353216
  br i1 %2, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %_13 = load float, float* %x, align 4
  %_12 = fpext float %_13 to double
  %_11 = fmul double %_12, 0x3FF921FB54442D18
  %_10 = fadd double %_11, %x1p_120
  %3 = fptrunc double %_10 to float
  store float %3, float* %1, align 4
  br label %bb21

bb5:                                              ; preds = %bb3
  %_16 = load float, float* %x, align 4
  %_17 = load float, float* %x, align 4
  %_15 = fsub float %_16, %_17
  %4 = fdiv float 0.000000e+00, %_15
  store float %4, float* %1, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19, %bb14, %bb12, %bb4, %bb5
  %5 = load float, float* %1, align 4
  ret float %5

bb8:                                              ; preds = %bb6
  %_35 = load float, float* %x, align 4
; call libm::math::fabsf::fabsf
  %_34 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_35)
  br label %bb15

bb7:                                              ; preds = %bb6
  %_21 = icmp ult i32 %ix, 964689920
  br i1 %_21, label %bb10, label %bb9

bb9:                                              ; preds = %bb7
  store i8 0, i8* %_20, align 1
  br label %bb11

bb10:                                             ; preds = %bb7
  %_23 = icmp uge i32 %ix, 8388608
  %6 = zext i1 %_23 to i8
  store i8 %6, i8* %_20, align 1
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  %7 = load i8, i8* %_20, align 1, !range !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %_25 = load float, float* %x, align 4
  %_27 = load float, float* %x, align 4
  %_30 = load float, float* %x, align 4
  %_31 = load float, float* %x, align 4
  %_29 = fmul float %_30, %_31
; call libm::math::asinf::r
  %_28 = call float @_ZN4libm4math5asinf1r17h68fcfcb171d7f636E(float %_29)
  br label %bb14

bb12:                                             ; preds = %bb11
  %9 = load float, float* %x, align 4
  store float %9, float* %1, align 4
  br label %bb21

bb14:                                             ; preds = %bb13
  %_26 = fmul float %_27, %_28
  %10 = fadd float %_25, %_26
  store float %10, float* %1, align 4
  br label %bb21

bb15:                                             ; preds = %bb8
  %_33 = fsub float 1.000000e+00, %_34
  %z = fmul float %_33, 5.000000e-01
  %_37 = fpext float %z to double
; call libm::math::sqrt::sqrt
  %s = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_37)
  br label %bb16

bb16:                                             ; preds = %bb15
; call libm::math::asinf::r
  %_46 = call float @_ZN4libm4math5asinf1r17h68fcfcb171d7f636E(float %z)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_45 = fpext float %_46 to double
  %_43 = fmul double %s, %_45
  %_41 = fadd double %s, %_43
  %_40 = fmul double 2.000000e+00, %_41
  %_39 = fsub double 0x3FF921FB54442D18, %_40
  %11 = fptrunc double %_39 to float
  store float %11, float* %x, align 4
  %_50.0 = lshr i32 %hx, 31
  br label %bb18

bb18:                                             ; preds = %bb17
  %12 = icmp eq i32 %_50.0, 0
  br i1 %12, label %bb20, label %bb19

bb20:                                             ; preds = %bb18
  %13 = load float, float* %x, align 4
  store float %13, float* %1, align 4
  br label %bb21

bb19:                                             ; preds = %bb18
  %_51 = load float, float* %x, align 4
  %14 = fneg float %_51
  store float %14, float* %1, align 4
  br label %bb21
}

; libm::math::asinh::asinh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5asinh5asinh17h2e2c4130a5e9e9daE(double %0) unnamed_addr #1 {
start:
  %_56 = alloca double, align 8
  %u = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_3 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_3)
  store i64 %2, i64* %u, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %u, align 8
  %_8.0 = lshr i64 %_7, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %e = and i64 %_8.0, 2047
  %_11 = load i64, i64* %u, align 8
  %_12.0 = lshr i64 %_11, 63
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i64 %_12.0, 0
  %3 = load i64, i64* %u, align 8
  %4 = and i64 %3, 9223372036854775807
  store i64 %4, i64* %u, align 8
  %_15 = load i64, i64* %u, align 8
; call core::f64::<impl f64>::from_bits
  %_14 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_15)
  br label %bb4

bb4:                                              ; preds = %bb3
  store double %_14, double* %x, align 8
  %_16 = icmp uge i64 %e, 1049
  br i1 %_16, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  %_21 = icmp uge i64 %e, 1024
  br i1 %_21, label %bb8, label %bb11

bb5:                                              ; preds = %bb4
  %_20 = load double, double* %x, align 8
; call libm::math::log::log
  %_19 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_20)
  br label %bb6

bb6:                                              ; preds = %bb5
  %5 = fadd double %_19, 0x3FE62E42FEFA39EF
  store double %5, double* %x, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb14, %bb10, %bb6
  br i1 %sign, label %bb18, label %bb19

bb11:                                             ; preds = %bb7
  %_36 = icmp uge i64 %e, 997
  br i1 %_36, label %bb12, label %bb15

bb8:                                              ; preds = %bb7
  %_27 = load double, double* %x, align 8
  %_26 = fmul double 2.000000e+00, %_27
  %_33 = load double, double* %x, align 8
  %_34 = load double, double* %x, align 8
  %_32 = fmul double %_33, %_34
  %_31 = fadd double %_32, 1.000000e+00
; call libm::math::sqrt::sqrt
  %_30 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_31)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_35 = load double, double* %x, align 8
  %_29 = fadd double %_30, %_35
  %_28 = fdiv double 1.000000e+00, %_29
  %_25 = fadd double %_26, %_28
; call libm::math::log::log
  %_24 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_25)
  br label %bb10

bb10:                                             ; preds = %bb9
  store double %_24, double* %x, align 8
  br label %bb17

bb15:                                             ; preds = %bb11
; call core::f64::<impl f64>::from_bits
  %x1p120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 5147614374084476928)
  br label %bb16

bb12:                                             ; preds = %bb11
  %_41 = load double, double* %x, align 8
  %_44 = load double, double* %x, align 8
  %_45 = load double, double* %x, align 8
  %_43 = fmul double %_44, %_45
  %_50 = load double, double* %x, align 8
  %_51 = load double, double* %x, align 8
  %_49 = fmul double %_50, %_51
  %_48 = fadd double %_49, 1.000000e+00
; call libm::math::sqrt::sqrt
  %_47 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_48)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_46 = fadd double %_47, 1.000000e+00
  %_42 = fdiv double %_43, %_46
  %_40 = fadd double %_41, %_42
; call libm::math::log1p::log1p
  %_39 = call double @_ZN4libm4math5log1p5log1p17ha55fac024960e744E(double %_40)
  br label %bb14

bb14:                                             ; preds = %bb13
  store double %_39, double* %x, align 8
  br label %bb17

bb16:                                             ; preds = %bb15
  %_57 = load double, double* %x, align 8
  %6 = fadd double %_57, %x1p120
  store double %6, double* %_56, align 8
; call core::ptr::read_volatile
  %_53 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_56)
  br label %bb17

bb19:                                             ; preds = %bb17
  %7 = load double, double* %x, align 8
  store double %7, double* %1, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  %_60 = load double, double* %x, align 8
  %8 = fneg double %_60
  store double %8, double* %1, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %9 = load double, double* %1, align 8
  ret double %9
}

; libm::math::asinhf::asinhf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6asinhf6asinhf17he10c6b3fc87c0e1cE(float %0) unnamed_addr #1 {
start:
  %_52 = alloca float, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_3 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %u = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %i = and i32 %u, 2147483647
  %_9.0 = lshr i32 %u, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_9.0, 0
; call core::f32::<impl f32>::from_bits
  %_10 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %i)
  br label %bb3

bb3:                                              ; preds = %bb2
  store float %_10, float* %x, align 4
  %_12 = icmp uge i32 %i, 1166016512
  br i1 %_12, label %bb4, label %bb6

bb6:                                              ; preds = %bb3
  %_17 = icmp uge i32 %i, 1073741824
  br i1 %_17, label %bb7, label %bb10

bb4:                                              ; preds = %bb3
  %_16 = load float, float* %x, align 4
; call libm::math::logf::logf
  %_15 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_16)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = fadd float %_15, 0x3FE62E4300000000
  store float %2, float* %x, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb13, %bb9, %bb5
  br i1 %sign, label %bb17, label %bb18

bb10:                                             ; preds = %bb6
  %_32 = icmp uge i32 %i, 964689920
  br i1 %_32, label %bb11, label %bb14

bb7:                                              ; preds = %bb6
  %_23 = load float, float* %x, align 4
  %_22 = fmul float 2.000000e+00, %_23
  %_29 = load float, float* %x, align 4
  %_30 = load float, float* %x, align 4
  %_28 = fmul float %_29, %_30
  %_27 = fadd float %_28, 1.000000e+00
; call libm::math::sqrtf::sqrtf
  %_26 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_27)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_31 = load float, float* %x, align 4
  %_25 = fadd float %_26, %_31
  %_24 = fdiv float 1.000000e+00, %_25
  %_21 = fadd float %_22, %_24
; call libm::math::logf::logf
  %_20 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_21)
  br label %bb9

bb9:                                              ; preds = %bb8
  store float %_20, float* %x, align 4
  br label %bb16

bb14:                                             ; preds = %bb10
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb15

bb11:                                             ; preds = %bb10
  %_37 = load float, float* %x, align 4
  %_40 = load float, float* %x, align 4
  %_41 = load float, float* %x, align 4
  %_39 = fmul float %_40, %_41
  %_46 = load float, float* %x, align 4
  %_47 = load float, float* %x, align 4
  %_45 = fmul float %_46, %_47
  %_44 = fadd float %_45, 1.000000e+00
; call libm::math::sqrtf::sqrtf
  %_43 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_44)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_42 = fadd float %_43, 1.000000e+00
  %_38 = fdiv float %_39, %_42
  %_36 = fadd float %_37, %_38
; call libm::math::log1pf::log1pf
  %_35 = call float @_ZN4libm4math6log1pf6log1pf17hc0f7e233528d6ae3E(float %_36)
  br label %bb13

bb13:                                             ; preds = %bb12
  store float %_35, float* %x, align 4
  br label %bb16

bb15:                                             ; preds = %bb14
  %_53 = load float, float* %x, align 4
  %3 = fadd float %_53, %x1p120
  store float %3, float* %_52, align 4
; call core::ptr::read_volatile
  %_49 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_52)
  br label %bb16

bb18:                                             ; preds = %bb16
  %4 = load float, float* %x, align 4
  store float %4, float* %1, align 4
  br label %bb19

bb17:                                             ; preds = %bb16
  %_56 = load float, float* %x, align 4
  %5 = fneg float %_56
  store float %5, float* %1, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %6 = load float, float* %1, align 4
  ret float %6
}

; libm::math::atan::atan
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4atan4atan17h90a1a037b3435436E(double %x) unnamed_addr #1 {
start:
  %_30 = alloca float, align 4
  %id = alloca i32, align 4
  %ix = alloca i32, align 4
  %x1 = alloca double, align 8
  %0 = alloca double, align 8
  store double %x, double* %x1, align 8
  %_6 = load double, double* %x1, align 8
; call core::f64::<impl f64>::to_bits
  %_5 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_7.0 = lshr i64 %_5, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = trunc i64 %_7.0 to i32
  store i32 %1, i32* %ix, align 4
  %_9 = load i32, i32* %ix, align 4
  %_10.0 = lshr i32 %_9, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_12 = load i32, i32* %ix, align 4
  %_11 = icmp uge i32 %_12, 1141899264
  br i1 %_11, label %bb4, label %bb11

bb11:                                             ; preds = %bb3
  %_22 = load i32, i32* %ix, align 4
  %_21 = icmp ult i32 %_22, 1071382528
  br i1 %_21, label %bb12, label %bb13

bb4:                                              ; preds = %bb3
  %_14 = load double, double* %x1, align 8
; call core::f64::<impl f64>::is_nan
  %_13 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %_14)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_13, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; call core::f64::<impl f64>::from_bits
  %_17 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 58720256)
  br label %bb8

bb6:                                              ; preds = %bb5
  %4 = load double, double* %x1, align 8
  store double %4, double* %0, align 8
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32, %bb26, %bb16, %bb10, %bb9, %bb6
  %5 = load double, double* %0, align 8
  ret double %5

bb8:                                              ; preds = %bb7
  %z = fadd double 0x3FF921FB54442D18, %_17
  %6 = icmp eq i32 %_10.0, 0
  br i1 %6, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  store double %z, double* %0, align 8
  br label %bb34

bb9:                                              ; preds = %bb8
  %7 = fneg double %z
  store double %7, double* %0, align 8
  br label %bb34

bb13:                                             ; preds = %bb11
  %_33 = load double, double* %x1, align 8
; call libm::math::fabs::fabs
  %_32 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_33)
  br label %bb18

bb12:                                             ; preds = %bb11
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp ult i32 %_24, 1044381696
  br i1 %_23, label %bb14, label %bb17

bb17:                                             ; preds = %bb12
  store i32 -1, i32* %id, align 4
  br label %bb25

bb14:                                             ; preds = %bb12
  %_26 = load i32, i32* %ix, align 4
  %_25 = icmp ult i32 %_26, 1048576
  br i1 %_25, label %bb15, label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %8 = load double, double* %x1, align 8
  store double %8, double* %0, align 8
  br label %bb34

bb15:                                             ; preds = %bb14
  %_31 = load double, double* %x1, align 8
  %9 = fptrunc double %_31 to float
  store float %9, float* %_30, align 4
; call core::ptr::read_volatile
  %_27 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_30)
  br label %bb16

bb25:                                             ; preds = %bb24, %bb23, %bb21, %bb20, %bb17
  %_56 = load double, double* %x1, align 8
  %_57 = load double, double* %x1, align 8
  %z2 = fmul double %_56, %_57
  %w = fmul double %z2, %z2
  %_81 = fmul double %w, 0x3F90AD3AE322DA11
  %_79 = fadd double 0x3FA97B4B24760DEB, %_81
  %_77 = fmul double %w, %_79
  %_75 = fadd double 0x3FB10D66A0D03D51, %_77
  %_73 = fmul double %w, %_75
  %_71 = fadd double 0x3FB745CDC54C206E, %_73
  %_69 = fmul double %w, %_71
  %_67 = fadd double 0x3FC24924920083FF, %_69
  %_65 = fmul double %w, %_67
  %_63 = fadd double 0x3FD555555555550D, %_65
  %s1 = fmul double %z2, %_63
  %_100 = fmul double %w, 0xBFA2B4442C6A6C2F
  %_98 = fadd double 0xBFADDE2D52DEFD9A, %_100
  %_96 = fmul double %w, %_98
  %_94 = fadd double 0xBFB3B0F2AF749A6D, %_96
  %_92 = fmul double %w, %_94
  %_90 = fadd double 0xBFBC71C6FE231671, %_92
  %_88 = fmul double %w, %_90
  %_86 = fadd double 0xBFC999999998EBC4, %_88
  %s2 = fmul double %w, %_86
  %_104 = load i32, i32* %id, align 4
  %_103 = icmp slt i32 %_104, 0
  br i1 %_103, label %bb26, label %bb27

bb18:                                             ; preds = %bb13
  store double %_32, double* %x1, align 8
  %_35 = load i32, i32* %ix, align 4
  %_34 = icmp ult i32 %_35, 1072889856
  br i1 %_34, label %bb19, label %bb22

bb22:                                             ; preds = %bb18
  %_48 = load i32, i32* %ix, align 4
  %_47 = icmp ult i32 %_48, 1073971200
  br i1 %_47, label %bb23, label %bb24

bb19:                                             ; preds = %bb18
  %_37 = load i32, i32* %ix, align 4
  %_36 = icmp ult i32 %_37, 1072037888
  br i1 %_36, label %bb20, label %bb21

bb21:                                             ; preds = %bb19
  %_44 = load double, double* %x1, align 8
  %_43 = fsub double %_44, 1.000000e+00
  %_46 = load double, double* %x1, align 8
  %_45 = fadd double %_46, 1.000000e+00
  %10 = fdiv double %_43, %_45
  store double %10, double* %x1, align 8
  store i32 1, i32* %id, align 4
  br label %bb25

bb20:                                             ; preds = %bb19
  %_40 = load double, double* %x1, align 8
  %_39 = fmul double 2.000000e+00, %_40
  %_38 = fsub double %_39, 1.000000e+00
  %_42 = load double, double* %x1, align 8
  %_41 = fadd double 2.000000e+00, %_42
  %11 = fdiv double %_38, %_41
  store double %11, double* %x1, align 8
  store i32 0, i32* %id, align 4
  br label %bb25

bb24:                                             ; preds = %bb22
  %_54 = load double, double* %x1, align 8
  %12 = fdiv double -1.000000e+00, %_54
  store double %12, double* %x1, align 8
  store i32 3, i32* %id, align 4
  br label %bb25

bb23:                                             ; preds = %bb22
  %_50 = load double, double* %x1, align 8
  %_49 = fsub double %_50, 1.500000e+00
  %_53 = load double, double* %x1, align 8
  %_52 = fmul double 1.500000e+00, %_53
  %_51 = fadd double 1.000000e+00, %_52
  %13 = fdiv double %_49, %_51
  store double %13, double* %x1, align 8
  store i32 2, i32* %id, align 4
  br label %bb25

bb27:                                             ; preds = %bb25
  %_118 = load i32, i32* %id, align 4
  %_117 = sext i32 %_118 to i64
; call core::slice::<impl [T]>::get
  %_114 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [32 x i8] }>* @alloc880 to [0 x double]*), i64 4, i64 %_117)
  br label %bb28

bb26:                                             ; preds = %bb25
  %_105 = load double, double* %x1, align 8
  %_107 = load double, double* %x1, align 8
  %_108 = fadd double %s1, %s2
  %_106 = fmul double %_107, %_108
  %14 = fsub double %_105, %_106
  store double %14, double* %0, align 8
  br label %bb34

bb28:                                             ; preds = %bb27
; call core::option::Option<T>::unwrap
  %_113 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_114, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1756 to %"core::panic::location::Location"*))
  br label %bb29

bb29:                                             ; preds = %bb28
  %_112 = load double, double* %_113, align 8
  %_122 = load double, double* %x1, align 8
  %_123 = fadd double %s1, %s2
  %_121 = fmul double %_122, %_123
  %_132 = load i32, i32* %id, align 4
  %_131 = sext i32 %_132 to i64
; call core::slice::<impl [T]>::get
  %_128 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [32 x i8] }>* @alloc883 to [0 x double]*), i64 4, i64 %_131)
  br label %bb30

bb30:                                             ; preds = %bb29
; call core::option::Option<T>::unwrap
  %_127 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_128, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1758 to %"core::panic::location::Location"*))
  br label %bb31

bb31:                                             ; preds = %bb30
  %_126 = load double, double* %_127, align 8
  %_120 = fsub double %_121, %_126
  %_133 = load double, double* %x1, align 8
  %_119 = fsub double %_120, %_133
  %z3 = fsub double %_112, %_119
  %15 = icmp eq i32 %_10.0, 0
  br i1 %15, label %bb33, label %bb32

bb33:                                             ; preds = %bb31
  store double %z3, double* %0, align 8
  br label %bb34

bb32:                                             ; preds = %bb31
  %16 = fneg double %z3
  store double %16, double* %0, align 8
  br label %bb34
}

; libm::math::atan2::atan2
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5atan25atan217h3d11fb40140bb161E(double %y, double %x) unnamed_addr #1 {
start:
  %_61 = alloca i8, align 1
  %z = alloca double, align 8
  %_50 = alloca i8, align 1
  %iy = alloca i32, align 4
  %ix = alloca i32, align 4
  %_3 = alloca i8, align 1
  %0 = alloca double, align 8
; call core::f64::<impl f64>::is_nan
  %_4 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call core::f64::<impl f64>::is_nan
  %_6 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %y)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %_3, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %3 = zext i1 %_6 to i8
  store i8 %3, i8* %_3, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
; call core::f64::<impl f64>::to_bits
  %_12 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb8

bb6:                                              ; preds = %bb3
  %4 = fadd double %x, %y
  store double %4, double* %0, align 8
  br label %bb60

bb60:                                             ; preds = %bb15, %bb21, %bb22, %bb20, %bb27, %bb26, %bb32, %bb33, %bb34, %bb31, %bb37, %bb38, %bb39, %bb36, %bb57, %bb58, %bb59, %bb56, %bb46, %bb45, %bb6
  %5 = load double, double* %0, align 8
  ret double %5

bb8:                                              ; preds = %bb7
  %_14.0 = lshr i64 %_12, 32
  br label %bb9

bb9:                                              ; preds = %bb8
  %6 = trunc i64 %_14.0 to i32
  store i32 %6, i32* %ix, align 4
; call core::f64::<impl f64>::to_bits
  %_16 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb10

bb10:                                             ; preds = %bb9
  %lx = trunc i64 %_16 to i32
; call core::f64::<impl f64>::to_bits
  %_20 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb11

bb11:                                             ; preds = %bb10
  %_22.0 = lshr i64 %_20, 32
  br label %bb12

bb12:                                             ; preds = %bb11
  %7 = trunc i64 %_22.0 to i32
  store i32 %7, i32* %iy, align 4
; call core::f64::<impl f64>::to_bits
  %_24 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb13

bb13:                                             ; preds = %bb12
  %ly = trunc i64 %_24 to i32
  %_28 = load i32, i32* %ix, align 4
  %8 = sub i32 %_28, 1072693248
  br label %bb14

bb14:                                             ; preds = %bb13
  %_26 = or i32 %8, %lx
  %9 = icmp eq i32 %_26, 0
  br i1 %9, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
; call libm::math::atan::atan
  %10 = call double @_ZN4libm4math4atan4atan17h90a1a037b3435436E(double %y)
  store double %10, double* %0, align 8
  br label %bb60

bb16:                                             ; preds = %bb14
  %_34 = load i32, i32* %iy, align 4
  %_35.0 = lshr i32 %_34, 31
  br label %bb17

bb17:                                             ; preds = %bb16
  %_32 = and i32 %_35.0, 1
  %_38 = load i32, i32* %ix, align 4
  %_39.0 = lshr i32 %_38, 30
  br label %bb18

bb18:                                             ; preds = %bb17
  %_36 = and i32 %_39.0, 2
  %m = or i32 %_32, %_36
  %11 = load i32, i32* %ix, align 4
  %12 = and i32 %11, 2147483647
  store i32 %12, i32* %ix, align 4
  %13 = load i32, i32* %iy, align 4
  %14 = and i32 %13, 2147483647
  store i32 %14, i32* %iy, align 4
  %_41 = load i32, i32* %iy, align 4
  %_40 = or i32 %_41, %ly
  %15 = icmp eq i32 %_40, 0
  br i1 %15, label %bb19, label %bb23

bb19:                                             ; preds = %bb18
  switch i32 %m, label %bb20 [
    i32 0, label %bb21
    i32 1, label %bb21
    i32 2, label %bb22
  ]

bb23:                                             ; preds = %bb18
  %_44 = load i32, i32* %ix, align 4
  %_43 = or i32 %_44, %lx
  %16 = icmp eq i32 %_43, 0
  br i1 %16, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %_46 = and i32 %m, 1
  %17 = icmp eq i32 %_46, 0
  br i1 %17, label %bb27, label %bb26

bb25:                                             ; preds = %bb23
  %_48 = load i32, i32* %ix, align 4
  %18 = icmp eq i32 %_48, 2146435072
  br i1 %18, label %bb28, label %bb29

bb28:                                             ; preds = %bb25
  %_49 = load i32, i32* %iy, align 4
  %19 = icmp eq i32 %_49, 2146435072
  br i1 %19, label %bb30, label %bb35

bb29:                                             ; preds = %bb25
  %_53 = load i32, i32* %ix, align 4
  %20 = add i32 %_53, 67108864
  br label %bb43

bb43:                                             ; preds = %bb29
  %_55 = load i32, i32* %iy, align 4
  %_51 = icmp ult i32 %20, %_55
  br i1 %_51, label %bb40, label %bb41

bb41:                                             ; preds = %bb43
  %_57 = load i32, i32* %iy, align 4
  %_56 = icmp eq i32 %_57, 2146435072
  %21 = zext i1 %_56 to i8
  store i8 %21, i8* %_50, align 1
  br label %bb42

bb40:                                             ; preds = %bb43
  store i8 1, i8* %_50, align 1
  br label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %22 = load i8, i8* %_50, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb44, label %bb47

bb47:                                             ; preds = %bb42
  %_62 = and i32 %m, 2
  %24 = icmp eq i32 %_62, 0
  br i1 %24, label %bb48, label %bb49

bb44:                                             ; preds = %bb42
  %_58 = and i32 %m, 1
  %25 = icmp eq i32 %_58, 0
  br i1 %25, label %bb46, label %bb45

bb46:                                             ; preds = %bb44
  store double 0x3FF921FB54442D18, double* %0, align 8
  br label %bb60

bb45:                                             ; preds = %bb44
  store double 0xBFF921FB54442D18, double* %0, align 8
  br label %bb60

bb48:                                             ; preds = %bb47
  store i8 0, i8* %_61, align 1
  br label %bb50

bb49:                                             ; preds = %bb47
  %_66 = load i32, i32* %iy, align 4
  %26 = add i32 %_66, 67108864
  br label %bb51

bb51:                                             ; preds = %bb49
  %_68 = load i32, i32* %ix, align 4
  %_64 = icmp ult i32 %26, %_68
  %27 = zext i1 %_64 to i8
  store i8 %27, i8* %_61, align 1
  br label %bb50

bb50:                                             ; preds = %bb48, %bb51
  %28 = load i8, i8* %_61, align 1, !range !3
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb52, label %bb53

bb53:                                             ; preds = %bb50
  %_70 = fdiv double %y, %x
; call libm::math::fabs::fabs
  %_69 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_70)
  br label %bb54

bb52:                                             ; preds = %bb50
  store double 0.000000e+00, double* %z, align 8
  br label %bb55

bb55:                                             ; preds = %bb54, %bb52
  switch i32 %m, label %bb56 [
    i32 0, label %bb57
    i32 1, label %bb58
    i32 2, label %bb59
  ]

bb54:                                             ; preds = %bb53
; call libm::math::atan::atan
  %30 = call double @_ZN4libm4math4atan4atan17h90a1a037b3435436E(double %_69)
  store double %30, double* %z, align 8
  br label %bb55

bb56:                                             ; preds = %bb55
  %_77 = load double, double* %z, align 8
  %_76 = fsub double %_77, 0x3CA1A62633145C07
  %31 = fsub double %_76, 0x400921FB54442D18
  store double %31, double* %0, align 8
  br label %bb60

bb57:                                             ; preds = %bb55
  %32 = load double, double* %z, align 8
  store double %32, double* %0, align 8
  br label %bb60

bb58:                                             ; preds = %bb55
  %_73 = load double, double* %z, align 8
  %33 = fneg double %_73
  store double %33, double* %0, align 8
  br label %bb60

bb59:                                             ; preds = %bb55
  %_75 = load double, double* %z, align 8
  %_74 = fsub double %_75, 0x3CA1A62633145C07
  %34 = fsub double 0x400921FB54442D18, %_74
  store double %34, double* %0, align 8
  br label %bb60

bb30:                                             ; preds = %bb28
  switch i32 %m, label %bb31 [
    i32 0, label %bb32
    i32 1, label %bb33
    i32 2, label %bb34
  ]

bb35:                                             ; preds = %bb28
  switch i32 %m, label %bb36 [
    i32 0, label %bb37
    i32 1, label %bb38
    i32 2, label %bb39
  ]

bb36:                                             ; preds = %bb35
  store double 0xC00921FB54442D18, double* %0, align 8
  br label %bb60

bb37:                                             ; preds = %bb35
  store double 0.000000e+00, double* %0, align 8
  br label %bb60

bb38:                                             ; preds = %bb35
  store double -0.000000e+00, double* %0, align 8
  br label %bb60

bb39:                                             ; preds = %bb35
  store double 0x400921FB54442D18, double* %0, align 8
  br label %bb60

bb31:                                             ; preds = %bb30
  store double 0xC002D97C7F3321D2, double* %0, align 8
  br label %bb60

bb32:                                             ; preds = %bb30
  store double 0x3FE921FB54442D18, double* %0, align 8
  br label %bb60

bb33:                                             ; preds = %bb30
  store double 0xBFE921FB54442D18, double* %0, align 8
  br label %bb60

bb34:                                             ; preds = %bb30
  store double 0x4002D97C7F3321D2, double* %0, align 8
  br label %bb60

bb27:                                             ; preds = %bb24
  store double 0x3FF921FB54442D18, double* %0, align 8
  br label %bb60

bb26:                                             ; preds = %bb24
  store double 0xBFF921FB54442D18, double* %0, align 8
  br label %bb60

bb20:                                             ; preds = %bb19
  store double 0xC00921FB54442D18, double* %0, align 8
  br label %bb60

bb21:                                             ; preds = %bb19, %bb19
  store double %y, double* %0, align 8
  br label %bb60

bb22:                                             ; preds = %bb19
  store double 0x400921FB54442D18, double* %0, align 8
  br label %bb60
}

; libm::math::atan2f::atan2f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6atan2f6atan2f17h38e792cffbd36ec0E(float %y, float %x) unnamed_addr #1 {
start:
  %_43 = alloca i8, align 1
  %z = alloca float, align 4
  %_31 = alloca i8, align 1
  %iy = alloca i32, align 4
  %ix = alloca i32, align 4
  %_3 = alloca i8, align 1
  %0 = alloca float, align 4
; call core::f32::<impl f32>::is_nan
  %_4 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call core::f32::<impl f32>::is_nan
  %_6 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %y)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %_3, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %3 = zext i1 %_6 to i8
  store i8 %3, i8* %_3, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
; call core::f32::<impl f32>::to_bits
  %4 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %4, i32* %ix, align 4
  br label %bb8

bb6:                                              ; preds = %bb3
  %5 = fadd float %x, %y
  store float %5, float* %0, align 4
  br label %bb55

bb55:                                             ; preds = %bb10, %bb15, %bb16, %bb17, %bb22, %bb21, %bb26, %bb27, %bb28, %bb29, %bb31, %bb32, %bb33, %bb34, %bb52, %bb53, %bb54, %bb51, %bb41, %bb40, %bb6
  %6 = load float, float* %0, align 4
  ret float %6

bb8:                                              ; preds = %bb7
; call core::f32::<impl f32>::to_bits
  %7 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  store i32 %7, i32* %iy, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  %_14 = load i32, i32* %ix, align 4
  %8 = icmp eq i32 %_14, 1065353216
  br i1 %8, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
; call libm::math::atanf::atanf
  %9 = call float @_ZN4libm4math5atanf5atanf17hd8585166827d2936E(float %y)
  store float %9, float* %0, align 4
  br label %bb55

bb11:                                             ; preds = %bb9
  %_19 = load i32, i32* %iy, align 4
  %_20.0 = lshr i32 %_19, 31
  br label %bb12

bb12:                                             ; preds = %bb11
  %_17 = and i32 %_20.0, 1
  %_23 = load i32, i32* %ix, align 4
  %_24.0 = lshr i32 %_23, 30
  br label %bb13

bb13:                                             ; preds = %bb12
  %_21 = and i32 %_24.0, 2
  %m = or i32 %_17, %_21
  %10 = load i32, i32* %ix, align 4
  %11 = and i32 %10, 2147483647
  store i32 %11, i32* %ix, align 4
  %12 = load i32, i32* %iy, align 4
  %13 = and i32 %12, 2147483647
  store i32 %13, i32* %iy, align 4
  %_25 = load i32, i32* %iy, align 4
  %14 = icmp eq i32 %_25, 0
  br i1 %14, label %bb14, label %bb18

bb14:                                             ; preds = %bb13
  switch i32 %m, label %bb17 [
    i32 0, label %bb15
    i32 1, label %bb15
    i32 2, label %bb16
    i32 3, label %bb17
  ]

bb18:                                             ; preds = %bb13
  %_26 = load i32, i32* %ix, align 4
  %15 = icmp eq i32 %_26, 0
  br i1 %15, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %_27 = and i32 %m, 1
  %16 = icmp eq i32 %_27, 0
  br i1 %16, label %bb22, label %bb21

bb20:                                             ; preds = %bb18
  %_29 = load i32, i32* %ix, align 4
  %17 = icmp eq i32 %_29, 2139095040
  br i1 %17, label %bb23, label %bb24

bb23:                                             ; preds = %bb20
  %_30 = load i32, i32* %iy, align 4
  %18 = icmp eq i32 %_30, 2139095040
  br i1 %18, label %bb25, label %bb30

bb24:                                             ; preds = %bb20
  %_34 = load i32, i32* %ix, align 4
  %19 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_34, i32 218103808)
  %_36.0 = extractvalue { i32, i1 } %19, 0
  %_36.1 = extractvalue { i32, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false)
  br i1 %20, label %panic, label %bb38

bb38:                                             ; preds = %bb24
  %_37 = load i32, i32* %iy, align 4
  %_32 = icmp ult i32 %_36.0, %_37
  br i1 %_32, label %bb35, label %bb36

panic:                                            ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1760 to %"core::panic::location::Location"*)) #11
  unreachable

bb36:                                             ; preds = %bb38
  %_39 = load i32, i32* %iy, align 4
  %_38 = icmp eq i32 %_39, 2139095040
  %21 = zext i1 %_38 to i8
  store i8 %21, i8* %_31, align 1
  br label %bb37

bb35:                                             ; preds = %bb38
  store i8 1, i8* %_31, align 1
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %22 = load i8, i8* %_31, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb39, label %bb42

bb42:                                             ; preds = %bb37
  %_44 = and i32 %m, 2
  %24 = icmp eq i32 %_44, 0
  br i1 %24, label %bb43, label %bb44

bb39:                                             ; preds = %bb37
  %_40 = and i32 %m, 1
  %25 = icmp eq i32 %_40, 0
  br i1 %25, label %bb41, label %bb40

bb41:                                             ; preds = %bb39
  store float 0x3FF921FB60000000, float* %0, align 4
  br label %bb55

bb40:                                             ; preds = %bb39
  store float 0xBFF921FB60000000, float* %0, align 4
  br label %bb55

bb43:                                             ; preds = %bb42
  store i8 0, i8* %_43, align 1
  br label %bb45

bb44:                                             ; preds = %bb42
  %_48 = load i32, i32* %iy, align 4
  %26 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_48, i32 218103808)
  %_50.0 = extractvalue { i32, i1 } %26, 0
  %_50.1 = extractvalue { i32, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false)
  br i1 %27, label %panic1, label %bb46

bb46:                                             ; preds = %bb44
  %_51 = load i32, i32* %ix, align 4
  %_46 = icmp ult i32 %_50.0, %_51
  %28 = zext i1 %_46 to i8
  store i8 %28, i8* %_43, align 1
  br label %bb45

panic1:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1762 to %"core::panic::location::Location"*)) #11
  unreachable

bb45:                                             ; preds = %bb43, %bb46
  %29 = load i8, i8* %_43, align 1, !range !3
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb47, label %bb48

bb48:                                             ; preds = %bb45
  %_53 = fdiv float %y, %x
; call libm::math::fabsf::fabsf
  %_52 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_53)
  br label %bb49

bb47:                                             ; preds = %bb45
  store float 0.000000e+00, float* %z, align 4
  br label %bb50

bb50:                                             ; preds = %bb49, %bb47
  switch i32 %m, label %bb51 [
    i32 0, label %bb52
    i32 1, label %bb53
    i32 2, label %bb54
  ]

bb49:                                             ; preds = %bb48
; call libm::math::atanf::atanf
  %31 = call float @_ZN4libm4math5atanf5atanf17hd8585166827d2936E(float %_52)
  store float %31, float* %z, align 4
  br label %bb50

bb51:                                             ; preds = %bb50
  %_60 = load float, float* %z, align 4
  %_59 = fsub float %_60, 0xBE7777A5C0000000
  %32 = fsub float %_59, 0x400921FB60000000
  store float %32, float* %0, align 4
  br label %bb55

bb52:                                             ; preds = %bb50
  %33 = load float, float* %z, align 4
  store float %33, float* %0, align 4
  br label %bb55

bb53:                                             ; preds = %bb50
  %_56 = load float, float* %z, align 4
  %34 = fneg float %_56
  store float %34, float* %0, align 4
  br label %bb55

bb54:                                             ; preds = %bb50
  %_58 = load float, float* %z, align 4
  %_57 = fsub float %_58, 0xBE7777A5C0000000
  %35 = fsub float 0x400921FB60000000, %_57
  store float %35, float* %0, align 4
  br label %bb55

bb25:                                             ; preds = %bb23
  switch i32 %m, label %bb29 [
    i32 0, label %bb26
    i32 1, label %bb27
    i32 2, label %bb28
    i32 3, label %bb29
  ]

bb30:                                             ; preds = %bb23
  switch i32 %m, label %bb34 [
    i32 0, label %bb31
    i32 1, label %bb32
    i32 2, label %bb33
    i32 3, label %bb34
  ]

bb34:                                             ; preds = %bb30, %bb30
  store float 0xC00921FB60000000, float* %0, align 4
  br label %bb55

bb31:                                             ; preds = %bb30
  store float 0.000000e+00, float* %0, align 4
  br label %bb55

bb32:                                             ; preds = %bb30
  store float -0.000000e+00, float* %0, align 4
  br label %bb55

bb33:                                             ; preds = %bb30
  store float 0x400921FB60000000, float* %0, align 4
  br label %bb55

bb29:                                             ; preds = %bb25, %bb25
  store float 0xC002D97C80000000, float* %0, align 4
  br label %bb55

bb26:                                             ; preds = %bb25
  store float 0x3FE921FB60000000, float* %0, align 4
  br label %bb55

bb27:                                             ; preds = %bb25
  store float 0xBFE921FB60000000, float* %0, align 4
  br label %bb55

bb28:                                             ; preds = %bb25
  store float 0x4002D97C80000000, float* %0, align 4
  br label %bb55

bb22:                                             ; preds = %bb19
  store float 0x3FF921FB60000000, float* %0, align 4
  br label %bb55

bb21:                                             ; preds = %bb19
  store float 0xBFF921FB60000000, float* %0, align 4
  br label %bb55

bb17:                                             ; preds = %bb14, %bb14
  store float 0xC00921FB60000000, float* %0, align 4
  br label %bb55

bb15:                                             ; preds = %bb14, %bb14
  store float %y, float* %0, align 4
  br label %bb55

bb16:                                             ; preds = %bb14
  store float 0x400921FB60000000, float* %0, align 4
  br label %bb55
}

; libm::math::atanf::atanf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5atanf5atanf17hd8585166827d2936E(float %0) unnamed_addr #1 {
start:
  %_32 = alloca float, align 4
  %id = alloca i32, align 4
  %ix = alloca i32, align 4
  %z = alloca float, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p_120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 58720256)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_5)
  store i32 %2, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i32, i32* %ix, align 4
  %_9.0 = lshr i32 %_8, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i32 %_9.0, 0
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1283457024
  br i1 %_10, label %bb4, label %bb12

bb12:                                             ; preds = %bb3
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp ult i32 %_24, 1054867456
  br i1 %_23, label %bb13, label %bb14

bb4:                                              ; preds = %bb3
  %_13 = load float, float* %x, align 4
; call core::f32::<impl f32>::is_nan
  %_12 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %_13)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_12, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; call core::slice::<impl [T]>::get
  %_16 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [16 x i8] }>* @alloc915 to [0 x float]*), i64 4, i64 3)
  br label %bb8

bb6:                                              ; preds = %bb5
  %5 = load float, float* %x, align 4
  store float %5, float* %1, align 4
  br label %bb45

bb45:                                             ; preds = %bb44, %bb43, %bb37, %bb17, %bb11, %bb10, %bb6
  %6 = load float, float* %1, align 4
  ret float %6

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::unwrap
  %_15 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1764 to %"core::panic::location::Location"*))
  br label %bb9

bb9:                                              ; preds = %bb8
  %_14 = load float, float* %_15, align 4
  %7 = fadd float %_14, %x1p_120
  store float %7, float* %z, align 4
  br i1 %sign, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %8 = load float, float* %z, align 4
  store float %8, float* %1, align 4
  br label %bb45

bb10:                                             ; preds = %bb9
  %_21 = load float, float* %z, align 4
  %9 = fneg float %_21
  store float %9, float* %1, align 4
  br label %bb45

bb14:                                             ; preds = %bb12
  %_36 = load float, float* %x, align 4
; call libm::math::fabsf::fabsf
  %_35 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_36)
  br label %bb19

bb13:                                             ; preds = %bb12
  %_26 = load i32, i32* %ix, align 4
  %_25 = icmp ult i32 %_26, 964689920
  br i1 %_25, label %bb15, label %bb18

bb18:                                             ; preds = %bb13
  store i32 -1, i32* %id, align 4
  br label %bb26

bb15:                                             ; preds = %bb13
  %_28 = load i32, i32* %ix, align 4
  %_27 = icmp ult i32 %_28, 8388608
  br i1 %_27, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %10 = load float, float* %x, align 4
  store float %10, float* %1, align 4
  br label %bb45

bb16:                                             ; preds = %bb15
  %_33 = load float, float* %x, align 4
  %_34 = load float, float* %x, align 4
  %11 = fmul float %_33, %_34
  store float %11, float* %_32, align 4
; call core::ptr::read_volatile
  %_29 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_32)
  br label %bb17

bb26:                                             ; preds = %bb25, %bb24, %bb22, %bb21, %bb18
  %_58 = load float, float* %x, align 4
  %_59 = load float, float* %x, align 4
  %12 = fmul float %_58, %_59
  store float %12, float* %z, align 4
  %_61 = load float, float* %z, align 4
  %_62 = load float, float* %z, align 4
  %w = fmul float %_61, %_62
  %_64 = load float, float* %z, align 4
; call core::slice::<impl [T]>::get
  %_68 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [20 x i8] }>* @alloc912 to [0 x float]*), i64 5, i64 0)
  br label %bb27

bb19:                                             ; preds = %bb14
  store float %_35, float* %x, align 4
  %_38 = load i32, i32* %ix, align 4
  %_37 = icmp ult i32 %_38, 1066926080
  br i1 %_37, label %bb20, label %bb23

bb23:                                             ; preds = %bb19
  %_51 = load i32, i32* %ix, align 4
  %_50 = icmp ult i32 %_51, 1075576832
  br i1 %_50, label %bb24, label %bb25

bb20:                                             ; preds = %bb19
  %_40 = load i32, i32* %ix, align 4
  %_39 = icmp ult i32 %_40, 1060110336
  br i1 %_39, label %bb21, label %bb22

bb22:                                             ; preds = %bb20
  %_47 = load float, float* %x, align 4
  %_46 = fsub float %_47, 1.000000e+00
  %_49 = load float, float* %x, align 4
  %_48 = fadd float %_49, 1.000000e+00
  %13 = fdiv float %_46, %_48
  store float %13, float* %x, align 4
  store i32 1, i32* %id, align 4
  br label %bb26

bb21:                                             ; preds = %bb20
  %_43 = load float, float* %x, align 4
  %_42 = fmul float 2.000000e+00, %_43
  %_41 = fsub float %_42, 1.000000e+00
  %_45 = load float, float* %x, align 4
  %_44 = fadd float 2.000000e+00, %_45
  %14 = fdiv float %_41, %_44
  store float %14, float* %x, align 4
  store i32 0, i32* %id, align 4
  br label %bb26

bb25:                                             ; preds = %bb23
  %_57 = load float, float* %x, align 4
  %15 = fdiv float -1.000000e+00, %_57
  store float %15, float* %x, align 4
  store i32 3, i32* %id, align 4
  br label %bb26

bb24:                                             ; preds = %bb23
  %_53 = load float, float* %x, align 4
  %_52 = fsub float %_53, 1.500000e+00
  %_56 = load float, float* %x, align 4
  %_55 = fmul float 1.500000e+00, %_56
  %_54 = fadd float 1.000000e+00, %_55
  %16 = fdiv float %_52, %_54
  store float %16, float* %x, align 4
  store i32 2, i32* %id, align 4
  br label %bb26

bb27:                                             ; preds = %bb26
; call core::option::Option<T>::unwrap
  %_67 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1766 to %"core::panic::location::Location"*))
  br label %bb28

bb28:                                             ; preds = %bb27
  %_66 = load float, float* %_67, align 4
; call core::slice::<impl [T]>::get
  %_76 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [20 x i8] }>* @alloc912 to [0 x float]*), i64 5, i64 2)
  br label %bb29

bb29:                                             ; preds = %bb28
; call core::option::Option<T>::unwrap
  %_75 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_76, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1768 to %"core::panic::location::Location"*))
  br label %bb30

bb30:                                             ; preds = %bb29
  %_74 = load float, float* %_75, align 4
; call core::slice::<impl [T]>::get
  %_83 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [20 x i8] }>* @alloc912 to [0 x float]*), i64 5, i64 4)
  br label %bb31

bb31:                                             ; preds = %bb30
; call core::option::Option<T>::unwrap
  %_82 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_83, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1770 to %"core::panic::location::Location"*))
  br label %bb32

bb32:                                             ; preds = %bb31
  %_81 = load float, float* %_82, align 4
  %_79 = fmul float %w, %_81
  %_73 = fadd float %_74, %_79
  %_71 = fmul float %w, %_73
  %_65 = fadd float %_66, %_71
  %s1 = fmul float %_64, %_65
; call core::slice::<impl [T]>::get
  %_91 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [20 x i8] }>* @alloc912 to [0 x float]*), i64 5, i64 1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::option::Option<T>::unwrap
  %_90 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_91, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1772 to %"core::panic::location::Location"*))
  br label %bb34

bb34:                                             ; preds = %bb33
  %_89 = load float, float* %_90, align 4
; call core::slice::<impl [T]>::get
  %_98 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [20 x i8] }>* @alloc912 to [0 x float]*), i64 5, i64 3)
  br label %bb35

bb35:                                             ; preds = %bb34
; call core::option::Option<T>::unwrap
  %_97 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_98, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1774 to %"core::panic::location::Location"*))
  br label %bb36

bb36:                                             ; preds = %bb35
  %_96 = load float, float* %_97, align 4
  %_94 = fmul float %w, %_96
  %_88 = fadd float %_89, %_94
  %s2 = fmul float %w, %_88
  %_102 = load i32, i32* %id, align 4
  %_101 = icmp slt i32 %_102, 0
  br i1 %_101, label %bb37, label %bb38

bb38:                                             ; preds = %bb36
  %_110 = load i32, i32* %id, align 4
  %id1 = sext i32 %_110 to i64
; call core::slice::<impl [T]>::get
  %_114 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [16 x i8] }>* @alloc915 to [0 x float]*), i64 4, i64 %id1)
  br label %bb39

bb37:                                             ; preds = %bb36
  %_103 = load float, float* %x, align 4
  %_105 = load float, float* %x, align 4
  %_106 = fadd float %s1, %s2
  %_104 = fmul float %_105, %_106
  %17 = fsub float %_103, %_104
  store float %17, float* %1, align 4
  br label %bb45

bb39:                                             ; preds = %bb38
; call core::option::Option<T>::unwrap
  %_113 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_114, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1776 to %"core::panic::location::Location"*))
  br label %bb40

bb40:                                             ; preds = %bb39
  %_112 = load float, float* %_113, align 4
  %_121 = load float, float* %x, align 4
  %_122 = fadd float %s1, %s2
  %_120 = fmul float %_121, %_122
; call core::slice::<impl [T]>::get
  %_127 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [16 x i8] }>* @alloc918 to [0 x float]*), i64 4, i64 %id1)
  br label %bb41

bb41:                                             ; preds = %bb40
; call core::option::Option<T>::unwrap
  %_126 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_127, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1778 to %"core::panic::location::Location"*))
  br label %bb42

bb42:                                             ; preds = %bb41
  %_125 = load float, float* %_126, align 4
  %_119 = fsub float %_120, %_125
  %_131 = load float, float* %x, align 4
  %_118 = fsub float %_119, %_131
  %z2 = fsub float %_112, %_118
  br i1 %sign, label %bb43, label %bb44

bb44:                                             ; preds = %bb42
  store float %z2, float* %1, align 4
  br label %bb45

bb43:                                             ; preds = %bb42
  %18 = fneg float %z2
  store float %18, float* %1, align 4
  br label %bb45
}

; libm::math::atanh::atanh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5atanh5atanh17h6771b1887190df5dE(double %x) unnamed_addr #1 {
start:
  %_26 = alloca float, align 4
  %y = alloca double, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8.0 = lshr i64 %u, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %e = and i64 %_8.0, 2047
  %_12.0 = lshr i64 %u, 63
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i64 %_12.0, 0
  %_14 = and i64 %u, 9223372036854775807
; call core::f64::<impl f64>::from_bits
  %1 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_14)
  store double %1, double* %y, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_16 = icmp ult i64 %e, 1022
  br i1 %_16, label %bb5, label %bb10

bb10:                                             ; preds = %bb4
  %_42 = load double, double* %y, align 8
  %_44 = load double, double* %y, align 8
  %_43 = fsub double 1.000000e+00, %_44
  %_41 = fdiv double %_42, %_43
  %_40 = fmul double 2.000000e+00, %_41
; call libm::math::log1p::log1p
  %_39 = call double @_ZN4libm4math5log1p5log1p17ha55fac024960e744E(double %_40)
  br label %bb11

bb5:                                              ; preds = %bb4
  %_19 = icmp ult i64 %e, 991
  br i1 %_19, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
  %_31 = load double, double* %y, align 8
  %_30 = fmul double 2.000000e+00, %_31
  %_35 = load double, double* %y, align 8
  %_34 = fmul double 2.000000e+00, %_35
  %_36 = load double, double* %y, align 8
  %_33 = fmul double %_34, %_36
  %_38 = load double, double* %y, align 8
  %_37 = fsub double 1.000000e+00, %_38
  %_32 = fdiv double %_33, %_37
  %_29 = fadd double %_30, %_32
; call libm::math::log1p::log1p
  %_28 = call double @_ZN4libm4math5log1p5log1p17ha55fac024960e744E(double %_29)
  br label %bb9

bb6:                                              ; preds = %bb5
  %2 = icmp eq i64 %e, 0
  br i1 %2, label %bb7, label %bb12

bb7:                                              ; preds = %bb6
  %_27 = load double, double* %y, align 8
  %3 = fptrunc double %_27 to float
  store float %3, float* %_26, align 4
; call core::ptr::read_volatile
  %_23 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_26)
  br label %bb12

bb12:                                             ; preds = %bb11, %bb9, %bb7, %bb6
  br i1 %sign, label %bb13, label %bb14

bb9:                                              ; preds = %bb8
  %4 = fmul double 5.000000e-01, %_28
  store double %4, double* %y, align 8
  br label %bb12

bb11:                                             ; preds = %bb10
  %5 = fmul double 5.000000e-01, %_39
  store double %5, double* %y, align 8
  br label %bb12

bb14:                                             ; preds = %bb12
  %6 = load double, double* %y, align 8
  store double %6, double* %0, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  %_46 = load double, double* %y, align 8
  %7 = fneg double %_46
  store double %7, double* %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %8 = load double, double* %0, align 8
  ret double %8
}

; libm::math::atanhf::atanhf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6atanhf6atanhf17haa570e7fc555c4b7E(float %0) unnamed_addr #1 {
start:
  %_22 = alloca float, align 4
  %u = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_3 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_3)
  store i32 %2, i32* %u, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = load i32, i32* %u, align 4
  %_7.0 = lshr i32 %_6, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_7.0, 0
  %3 = load i32, i32* %u, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %u, align 4
  %_9 = load i32, i32* %u, align 4
; call core::f32::<impl f32>::from_bits
  %_8 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  store float %_8, float* %x, align 4
  %_11 = load i32, i32* %u, align 4
  %_10 = icmp ult i32 %_11, 1056964608
  br i1 %_10, label %bb4, label %bb9

bb9:                                              ; preds = %bb3
  %_39 = load float, float* %x, align 4
  %_41 = load float, float* %x, align 4
  %_40 = fsub float 1.000000e+00, %_41
  %_38 = fdiv float %_39, %_40
  %_37 = fmul float 2.000000e+00, %_38
; call libm::math::log1pf::log1pf
  %_36 = call float @_ZN4libm4math6log1pf6log1pf17hc0f7e233528d6ae3E(float %_37)
  br label %bb10

bb4:                                              ; preds = %bb3
  %_14 = load i32, i32* %u, align 4
  %_13 = icmp ult i32 %_14, 796917760
  br i1 %_13, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  %_28 = load float, float* %x, align 4
  %_27 = fmul float 2.000000e+00, %_28
  %_32 = load float, float* %x, align 4
  %_31 = fmul float 2.000000e+00, %_32
  %_33 = load float, float* %x, align 4
  %_30 = fmul float %_31, %_33
  %_35 = load float, float* %x, align 4
  %_34 = fsub float 1.000000e+00, %_35
  %_29 = fdiv float %_30, %_34
  %_26 = fadd float %_27, %_29
; call libm::math::log1pf::log1pf
  %_25 = call float @_ZN4libm4math6log1pf6log1pf17hc0f7e233528d6ae3E(float %_26)
  br label %bb8

bb5:                                              ; preds = %bb4
  %_17 = load i32, i32* %u, align 4
  %_16 = icmp ult i32 %_17, 8388608
  br i1 %_16, label %bb6, label %bb11

bb11:                                             ; preds = %bb10, %bb8, %bb6, %bb5
  br i1 %sign, label %bb12, label %bb13

bb6:                                              ; preds = %bb5
  %_23 = load float, float* %x, align 4
  %_24 = load float, float* %x, align 4
  %5 = fmul float %_23, %_24
  store float %5, float* %_22, align 4
; call core::ptr::read_volatile
  %_19 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_22)
  br label %bb11

bb8:                                              ; preds = %bb7
  %6 = fmul float 5.000000e-01, %_25
  store float %6, float* %x, align 4
  br label %bb11

bb10:                                             ; preds = %bb9
  %7 = fmul float 5.000000e-01, %_36
  store float %7, float* %x, align 4
  br label %bb11

bb13:                                             ; preds = %bb11
  %8 = load float, float* %x, align 4
  store float %8, float* %1, align 4
  br label %bb14

bb12:                                             ; preds = %bb11
  %_43 = load float, float* %x, align 4
  %9 = fneg float %_43
  store float %9, float* %1, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %10 = load float, float* %1, align 4
  ret float %10
}

; libm::math::cbrt::cbrt
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4cbrt4cbrt17h23442b5d87a628abE(double %x) unnamed_addr #1 {
start:
  %hx = alloca i32, align 4
  %t = alloca double, align 8
  %r = alloca double, align 8
  %ui = alloca i64, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p54 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4850376798678024192)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %ui, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12 = load i64, i64* %ui, align 8
  %_13.0 = lshr i64 %_12, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = trunc i64 %_13.0 to i32
  %2 = and i32 %_10, 2147483647
  store i32 %2, i32* %hx, align 4
  %_15 = load i32, i32* %hx, align 4
  %_14 = icmp uge i32 %_15, 2146435072
  br i1 %_14, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_19 = load i32, i32* %hx, align 4
  %_18 = icmp ult i32 %_19, 1048576
  br i1 %_18, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  %3 = fadd double %x, %x
  store double %3, double* %0, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb10, %bb4
  %4 = load double, double* %0, align 8
  ret double %4

bb7:                                              ; preds = %bb5
  %_33 = load i32, i32* %hx, align 4
  %_32 = udiv i32 %_33, 3
  %5 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_32, i32 715094163)
  %_34.0 = extractvalue { i32, i1 } %5, 0
  %_34.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %6, label %panic1, label %bb13

bb6:                                              ; preds = %bb5
  %_21 = fmul double %x, %x1p54
; call core::f64::<impl f64>::to_bits
  %_20 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_21)
  br label %bb8

bb8:                                              ; preds = %bb6
  store i64 %_20, i64* %ui, align 8
  %_26 = load i64, i64* %ui, align 8
  %_27.0 = lshr i64 %_26, 32
  br label %bb9

bb9:                                              ; preds = %bb8
  %_24 = trunc i64 %_27.0 to i32
  %7 = and i32 %_24, 2147483647
  store i32 %7, i32* %hx, align 4
  %_28 = load i32, i32* %hx, align 4
  %8 = icmp eq i32 %_28, 0
  br i1 %8, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store double %x, double* %0, align 8
  br label %bb20

bb11:                                             ; preds = %bb9
  %_30 = load i32, i32* %hx, align 4
  %_29 = udiv i32 %_30, 3
  %9 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_29, i32 696219795)
  %_31.0 = extractvalue { i32, i1 } %9, 0
  %_31.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %10, label %panic, label %bb12

bb12:                                             ; preds = %bb11
  store i32 %_31.0, i32* %hx, align 4
  br label %bb14

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1780 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13, %bb12
  %11 = load i64, i64* %ui, align 8
  %12 = and i64 %11, -9223372036854775808
  store i64 %12, i64* %ui, align 8
  %_38 = load i32, i32* %hx, align 4
  %_37 = zext i32 %_38 to i64
  %_39.0 = shl i64 %_37, 32
  br label %bb15

bb13:                                             ; preds = %bb7
  store i32 %_34.0, i32* %hx, align 4
  br label %bb14

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1782 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14
  %13 = load i64, i64* %ui, align 8
  %14 = or i64 %13, %_39.0
  store i64 %14, i64* %ui, align 8
  %_41 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_40 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_41)
  br label %bb16

bb16:                                             ; preds = %bb15
  store double %_40, double* %t, align 8
  %_43 = load double, double* %t, align 8
  %_44 = load double, double* %t, align 8
  %_42 = fmul double %_43, %_44
  %_46 = load double, double* %t, align 8
  %_45 = fdiv double %_46, %x
  %15 = fmul double %_42, %_45
  store double %15, double* %r, align 8
  %_48 = load double, double* %t, align 8
  %_52 = load double, double* %r, align 8
  %_55 = load double, double* %r, align 8
  %_54 = fmul double %_55, 0x3FF9F1604A49D6C2
  %_53 = fadd double 0xBFFE28E092F02420, %_54
  %_51 = fmul double %_52, %_53
  %_50 = fadd double 0x3FFE03E60F61E692, %_51
  %_59 = load double, double* %r, align 8
  %_60 = load double, double* %r, align 8
  %_58 = fmul double %_59, %_60
  %_61 = load double, double* %r, align 8
  %_57 = fmul double %_58, %_61
  %_64 = load double, double* %r, align 8
  %_63 = fmul double %_64, 0x3FC2B000D4E4EDD7
  %_62 = fadd double 0xBFE844CBBEE751D9, %_63
  %_56 = fmul double %_57, %_62
  %_49 = fadd double %_50, %_56
  %16 = fmul double %_48, %_49
  store double %16, double* %t, align 8
  %_66 = load double, double* %t, align 8
; call core::f64::<impl f64>::to_bits
  %_65 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_66)
  br label %bb17

bb17:                                             ; preds = %bb16
  store i64 %_65, i64* %ui, align 8
  %_68 = load i64, i64* %ui, align 8
  %17 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_68, i64 2147483648)
  %_69.0 = extractvalue { i64, i1 } %17, 0
  %_69.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_69.1, i1 false)
  br i1 %18, label %panic2, label %bb18

bb18:                                             ; preds = %bb17
  %19 = and i64 %_69.0, -1073741824
  store i64 %19, i64* %ui, align 8
  %_71 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_70 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_71)
  br label %bb19

panic2:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1784 to %"core::panic::location::Location"*)) #11
  unreachable

bb19:                                             ; preds = %bb18
  store double %_70, double* %t, align 8
  %_72 = load double, double* %t, align 8
  %_73 = load double, double* %t, align 8
  %s = fmul double %_72, %_73
  %20 = fdiv double %x, %s
  store double %20, double* %r, align 8
  %_76 = load double, double* %t, align 8
  %_77 = load double, double* %t, align 8
  %w = fadd double %_76, %_77
  %_79 = load double, double* %r, align 8
  %_80 = load double, double* %t, align 8
  %_78 = fsub double %_79, %_80
  %_83 = load double, double* %r, align 8
  %_81 = fadd double %w, %_83
  %21 = fdiv double %_78, %_81
  store double %21, double* %r, align 8
  %_84 = load double, double* %t, align 8
  %_86 = load double, double* %t, align 8
  %_87 = load double, double* %r, align 8
  %_85 = fmul double %_86, %_87
  %22 = fadd double %_84, %_85
  store double %22, double* %t, align 8
  %23 = load double, double* %t, align 8
  store double %23, double* %0, align 8
  br label %bb20
}

; libm::math::cbrtf::cbrtf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5cbrtf5cbrtf17hd021340de063c5adE(float %x) unnamed_addr #1 {
start:
  %hx = alloca i32, align 4
  %ui = alloca i32, align 4
  %t = alloca double, align 8
  %r = alloca double, align 8
  %0 = alloca float, align 4
; call core::f32::<impl f32>::from_bits
  %x1p24 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1266679808)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ui, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i32, i32* %ui, align 4
  %2 = and i32 %_8, 2147483647
  store i32 %2, i32* %hx, align 4
  %_10 = load i32, i32* %hx, align 4
  %_9 = icmp uge i32 %_10, 2139095040
  br i1 %_9, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_14 = load i32, i32* %hx, align 4
  %_13 = icmp ult i32 %_14, 8388608
  br i1 %_13, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %3 = fadd float %x, %x
  store float %3, float* %0, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb7, %bb3
  %4 = load float, float* %0, align 4
  ret float %4

bb6:                                              ; preds = %bb4
  %_25 = load i32, i32* %hx, align 4
  %_24 = udiv i32 %_25, 3
  %5 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_24, i32 709958130)
  %_26.0 = extractvalue { i32, i1 } %5, 0
  %_26.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %6, label %panic1, label %bb11

bb5:                                              ; preds = %bb4
  %_15 = load i32, i32* %hx, align 4
  %7 = icmp eq i32 %_15, 0
  br i1 %7, label %bb7, label %bb8

bb7:                                              ; preds = %bb5
  store float %x, float* %0, align 4
  br label %bb14

bb8:                                              ; preds = %bb5
  %_17 = fmul float %x, %x1p24
; call core::f32::<impl f32>::to_bits
  %_16 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_17)
  br label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_16, i32* %ui, align 4
  %_20 = load i32, i32* %ui, align 4
  %8 = and i32 %_20, 2147483647
  store i32 %8, i32* %hx, align 4
  %_22 = load i32, i32* %hx, align 4
  %_21 = udiv i32 %_22, 3
  %9 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_21, i32 642849266)
  %_23.0 = extractvalue { i32, i1 } %9, 0
  %_23.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %10, label %panic, label %bb10

bb10:                                             ; preds = %bb9
  store i32 %_23.0, i32* %hx, align 4
  br label %bb12

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1786 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11, %bb10
  %11 = load i32, i32* %ui, align 4
  %12 = and i32 %11, -2147483648
  store i32 %12, i32* %ui, align 4
  %_27 = load i32, i32* %hx, align 4
  %13 = load i32, i32* %ui, align 4
  %14 = or i32 %13, %_27
  store i32 %14, i32* %ui, align 4
  %_29 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_28 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_29)
  br label %bb13

bb11:                                             ; preds = %bb6
  store i32 %_26.0, i32* %hx, align 4
  br label %bb12

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1788 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %15 = fpext float %_28 to double
  store double %15, double* %t, align 8
  %_31 = load double, double* %t, align 8
  %_32 = load double, double* %t, align 8
  %_30 = fmul double %_31, %_32
  %_33 = load double, double* %t, align 8
  %16 = fmul double %_30, %_33
  store double %16, double* %r, align 8
  %_35 = load double, double* %t, align 8
  %_38 = fpext float %x to double
  %_40 = fpext float %x to double
  %_37 = fadd double %_38, %_40
  %_42 = load double, double* %r, align 8
  %_36 = fadd double %_37, %_42
  %_34 = fmul double %_35, %_36
  %_45 = fpext float %x to double
  %_47 = load double, double* %r, align 8
  %_44 = fadd double %_45, %_47
  %_48 = load double, double* %r, align 8
  %_43 = fadd double %_44, %_48
  %17 = fdiv double %_34, %_43
  store double %17, double* %t, align 8
  %_50 = load double, double* %t, align 8
  %_51 = load double, double* %t, align 8
  %_49 = fmul double %_50, %_51
  %_52 = load double, double* %t, align 8
  %18 = fmul double %_49, %_52
  store double %18, double* %r, align 8
  %_54 = load double, double* %t, align 8
  %_57 = fpext float %x to double
  %_59 = fpext float %x to double
  %_56 = fadd double %_57, %_59
  %_61 = load double, double* %r, align 8
  %_55 = fadd double %_56, %_61
  %_53 = fmul double %_54, %_55
  %_64 = fpext float %x to double
  %_66 = load double, double* %r, align 8
  %_63 = fadd double %_64, %_66
  %_67 = load double, double* %r, align 8
  %_62 = fadd double %_63, %_67
  %19 = fdiv double %_53, %_62
  store double %19, double* %t, align 8
  %_68 = load double, double* %t, align 8
  %20 = fptrunc double %_68 to float
  store float %20, float* %0, align 4
  br label %bb14
}

; libm::math::ceil::ceil
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4ceil4ceil17haa1d90c714c09391E(double %x) unnamed_addr #1 {
start:
  %_16 = alloca double, align 8
  %_10 = alloca i8, align 1
  %y = alloca double, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8.0 = lshr i64 %u, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i64 %_8.0, 2047
  %_11 = icmp sge i64 %_5, 1075
  br i1 %_11, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_14 = fcmp oeq double %x, 0.000000e+00
  %1 = zext i1 %_14 to i8
  store i8 %1, i8* %_10, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_10, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, i8* %_10, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_19.0 = lshr i64 %u, 63
  br label %bb8

bb6:                                              ; preds = %bb5
  store double %x, double* %0, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18, %bb16, %bb15, %bb6
  %4 = load double, double* %0, align 8
  ret double %4

bb8:                                              ; preds = %bb7
  %5 = icmp eq i64 %_19.0, 0
  br i1 %5, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %_25 = fadd double %x, 0x4330000000000000
  %_24 = fsub double %_25, 0x4330000000000000
  %6 = fsub double %_24, %x
  store double %6, double* %_16, align 8
  br label %bb11

bb9:                                              ; preds = %bb8
  %_21 = fsub double %x, 0x4330000000000000
  %_20 = fadd double %_21, 0x4330000000000000
  %7 = fsub double %_20, %x
  store double %7, double* %_16, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %8 = load double, double* %_16, align 8
  store double %8, double* %y, align 8
  %_28 = icmp slt i64 %_5, 1023
  br i1 %_28, label %bb12, label %bb17

bb17:                                             ; preds = %bb11
  %_37 = load double, double* %y, align 8
  %_36 = fcmp olt double %_37, 0.000000e+00
  br i1 %_36, label %bb18, label %bb19

bb12:                                             ; preds = %bb11
; call core::ptr::read_volatile
  %_30 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %y)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_35.0 = lshr i64 %u, 63
  br label %bb14

bb14:                                             ; preds = %bb13
  %9 = icmp eq i64 %_35.0, 0
  br i1 %9, label %bb16, label %bb15

bb16:                                             ; preds = %bb14
  store double 1.000000e+00, double* %0, align 8
  br label %bb20

bb15:                                             ; preds = %bb14
  store double -0.000000e+00, double* %0, align 8
  br label %bb20

bb19:                                             ; preds = %bb17
  %_42 = load double, double* %y, align 8
  %10 = fadd double %x, %_42
  store double %10, double* %0, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  %_40 = load double, double* %y, align 8
  %_38 = fadd double %x, %_40
  %11 = fadd double %_38, 1.000000e+00
  store double %11, double* %0, align 8
  br label %bb20
}

; libm::math::ceilf::ceilf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5ceilf5ceilf17haf55279a0ac73d68E(float %x) unnamed_addr #1 {
start:
  %_36 = alloca float, align 4
  %_23 = alloca float, align 4
  %ui = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ui, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = load i32, i32* %ui, align 4
  %_9.0 = lshr i32 %_8, 23
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = and i32 %_9.0, 255
  %2 = sub i32 %_6, 127
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp sge i32 %2, 23
  br i1 %_10, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_12 = icmp sge i32 %2, 0
  br i1 %_12, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store float %x, float* %0, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23, %bb20, %bb9, %bb4
  %3 = load float, float* %0, align 4
  ret float %3

bb7:                                              ; preds = %bb5
; call core::f32::<impl f32>::from_bits
  %_38 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb17

bb6:                                              ; preds = %bb5
  %4 = and i32 %2, -32
  %_16.1 = icmp ne i32 %4, 0
  %5 = and i32 %2, 31
  %_16.0 = lshr i32 8388607, %5
  %6 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %6, label %panic, label %bb8

bb8:                                              ; preds = %bb6
  %_18 = load i32, i32* %ui, align 4
  %_17 = and i32 %_18, %_16.0
  %7 = icmp eq i32 %_17, 0
  br i1 %7, label %bb9, label %bb10

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1790 to %"core::panic::location::Location"*)) #11
  unreachable

bb9:                                              ; preds = %bb8
  store float %x, float* %0, align 4
  br label %bb25

bb10:                                             ; preds = %bb8
; call core::f32::<impl f32>::from_bits
  %_25 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb11

bb11:                                             ; preds = %bb10
  %8 = fadd float %x, %_25
  store float %8, float* %_23, align 4
; call core::ptr::read_volatile
  %_20 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_23)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_27 = load i32, i32* %ui, align 4
  %_28.0 = lshr i32 %_27, 31
  br label %bb13

bb13:                                             ; preds = %bb12
  %9 = icmp eq i32 %_28.0, 0
  br i1 %9, label %bb14, label %bb16

bb14:                                             ; preds = %bb13
  %10 = load i32, i32* %ui, align 4
  %11 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %10, i32 %_16.0)
  %_30.0 = extractvalue { i32, i1 } %11, 0
  %_30.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %12, label %panic1, label %bb15

bb16:                                             ; preds = %bb15, %bb13
  %_31 = xor i32 %_16.0, -1
  %13 = load i32, i32* %ui, align 4
  %14 = and i32 %13, %_31
  store i32 %14, i32* %ui, align 4
  br label %bb24

bb15:                                             ; preds = %bb14
  store i32 %_30.0, i32* %ui, align 4
  br label %bb16

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1792 to %"core::panic::location::Location"*)) #11
  unreachable

bb24:                                             ; preds = %bb22, %bb16
  %_45 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %15 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_45)
  store float %15, float* %0, align 4
  br label %bb25

bb17:                                             ; preds = %bb7
  %16 = fadd float %x, %_38
  store float %16, float* %_36, align 4
; call core::ptr::read_volatile
  %_33 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_36)
  br label %bb18

bb18:                                             ; preds = %bb17
  %_40 = load i32, i32* %ui, align 4
  %_41.0 = lshr i32 %_40, 31
  br label %bb19

bb19:                                             ; preds = %bb18
  %17 = icmp eq i32 %_41.0, 0
  br i1 %17, label %bb21, label %bb20

bb21:                                             ; preds = %bb19
  %_43 = load i32, i32* %ui, align 4
  %_44.0 = shl i32 %_43, 1
  br label %bb22

bb20:                                             ; preds = %bb19
  store float -0.000000e+00, float* %0, align 4
  br label %bb25

bb22:                                             ; preds = %bb21
  %18 = icmp eq i32 %_44.0, 0
  br i1 %18, label %bb24, label %bb23

bb23:                                             ; preds = %bb22
  store float 1.000000e+00, float* %0, align 4
  br label %bb25
}

; libm::math::copysign::copysign
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math8copysign8copysign17hee0505a60840bb82E(double %x, double %y) unnamed_addr #1 {
start:
  %ux = alloca i64, align 8
; call core::f64::<impl f64>::to_bits
  %0 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %0, i64* %ux, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %uy = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = load i64, i64* %ux, align 8
  %2 = and i64 %1, 9223372036854775807
  store i64 %2, i64* %ux, align 8
  %_8 = and i64 %uy, -9223372036854775808
  %3 = load i64, i64* %ux, align 8
  %4 = or i64 %3, %_8
  store i64 %4, i64* %ux, align 8
  %_11 = load i64, i64* %ux, align 8
; call core::f64::<impl f64>::from_bits
  %5 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_11)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret double %5
}

; libm::math::copysignf::copysignf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math9copysignf9copysignf17h9477326a08759cf7E(float %x, float %y) unnamed_addr #1 {
start:
  %ux = alloca i32, align 4
; call core::f32::<impl f32>::to_bits
  %0 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %0, i32* %ux, align 4
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %uy = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = load i32, i32* %ux, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ux, align 4
  %_7 = and i32 %uy, -2147483648
  %3 = load i32, i32* %ux, align 4
  %4 = or i32 %3, %_7
  store i32 %4, i32* %ux, align 4
  %_9 = load i32, i32* %ux, align 4
; call core::f32::<impl f32>::from_bits
  %5 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret float %5
}

; libm::math::cos::cos
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x) unnamed_addr #1 {
start:
  %_22 = alloca { double, i32, [1 x i32], double }, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %_5 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_7.0 = lshr i64 %_5, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = trunc i64 %_7.0 to i32
  %ix = and i32 %_3, 2147483647
  %_8 = icmp ule i32 %ix, 1072243195
  br i1 %_8, label %bb3, label %bb7

bb7:                                              ; preds = %bb2
  %_15 = icmp uge i32 %ix, 2146435072
  br i1 %_15, label %bb8, label %bb9

bb3:                                              ; preds = %bb2
  %_10 = icmp ult i32 %ix, 1044816030
  br i1 %_10, label %bb4, label %bb6

bb6:                                              ; preds = %bb4, %bb3
; call libm::math::k_cos::k_cos
  %1 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %x, double 0.000000e+00)
  store double %1, double* %0, align 8
  br label %bb17

bb4:                                              ; preds = %bb3
  %_12 = call i32 @llvm.fptosi.sat.i32.f64(double %x)
  %2 = icmp eq i32 %_12, 0
  br i1 %2, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store double 1.000000e+00, double* %0, align 8
  br label %bb17

bb17:                                             ; preds = %bb12, %bb14, %bb16, %bb11, %bb8, %bb6, %bb5
  %3 = load double, double* %0, align 8
  ret double %3

bb9:                                              ; preds = %bb7
; call libm::math::rem_pio2::rem_pio2
  call void @_ZN4libm4math8rem_pio28rem_pio217h9d712b10bce41dc7E({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %_22, double %x)
  br label %bb10

bb8:                                              ; preds = %bb7
  %4 = fsub double %x, %x
  store double %4, double* %0, align 8
  br label %bb17

bb10:                                             ; preds = %bb9
  %5 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_22, i32 0, i32 1
  %n = load i32, i32* %5, align 8
  %6 = bitcast { double, i32, [1 x i32], double }* %_22 to double*
  %y0 = load double, double* %6, align 8
  %7 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_22, i32 0, i32 3
  %y1 = load double, double* %7, align 8
  %_24 = and i32 %n, 3
  switch i32 %_24, label %bb11 [
    i32 0, label %bb12
    i32 1, label %bb13
    i32 2, label %bb15
  ]

bb11:                                             ; preds = %bb10
; call libm::math::k_sin::k_sin
  %8 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %y0, double %y1, i32 1)
  store double %8, double* %0, align 8
  br label %bb17

bb12:                                             ; preds = %bb10
; call libm::math::k_cos::k_cos
  %9 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %y0, double %y1)
  store double %9, double* %0, align 8
  br label %bb17

bb13:                                             ; preds = %bb10
; call libm::math::k_sin::k_sin
  %_28 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %y0, double %y1, i32 1)
  br label %bb14

bb15:                                             ; preds = %bb10
; call libm::math::k_cos::k_cos
  %_31 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %y0, double %y1)
  br label %bb16

bb16:                                             ; preds = %bb15
  %10 = fneg double %_31
  store double %10, double* %0, align 8
  br label %bb17

bb14:                                             ; preds = %bb13
  %11 = fneg double %_28
  store double %11, double* %0, align 8
  br label %bb17
}

; libm::math::cosf::cosf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4cosf4cosf17h2f3b18ee77688ea2E(float %x) unnamed_addr #1 {
start:
  %_40 = alloca double, align 8
  %_27 = alloca double, align 8
  %_18 = alloca float, align 4
  %ix = alloca i32, align 4
  %0 = alloca float, align 4
  %x64 = fpext float %x to double
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_9 = load i32, i32* %ix, align 4
  %_10.0 = lshr i32 %_9, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i32 %_10.0, 0
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_12 = load i32, i32* %ix, align 4
  %_11 = icmp ule i32 %_12, 1061752794
  br i1 %_11, label %bb4, label %bb8

bb8:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp ule i32 %_23, 1081824209
  br i1 %_22, label %bb9, label %bb10

bb4:                                              ; preds = %bb3
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp ult i32 %_14, 964689920
  br i1 %_13, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
; call libm::math::k_cosf::k_cosf
  %4 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %x64)
  store float %4, float* %0, align 4
  br label %bb36

bb5:                                              ; preds = %bb4
  %5 = fadd float %x, %x1p120
  store float %5, float* %_18, align 4
; call core::ptr::read_volatile
  %_15 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_18)
  br label %bb6

bb6:                                              ; preds = %bb5
  store float 1.000000e+00, float* %0, align 4
  br label %bb36

bb36:                                             ; preds = %bb32, %bb33, %bb35, %bb31, %bb28, %bb27, %bb26, %bb24, %bb18, %bb17, %bb15, %bb7, %bb6
  %6 = load float, float* %0, align 4
  ret float %6

bb10:                                             ; preds = %bb8
  %_37 = load i32, i32* %ix, align 4
  %_36 = icmp ule i32 %_37, 1088565717
  br i1 %_36, label %bb19, label %bb20

bb9:                                              ; preds = %bb8
  %_25 = load i32, i32* %ix, align 4
  %_24 = icmp ugt i32 %_25, 1075235811
  br i1 %_24, label %bb11, label %bb16

bb16:                                             ; preds = %bb9
  br i1 %sign, label %bb17, label %bb18

bb11:                                             ; preds = %bb9
  br i1 %sign, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %7 = fsub double %x64, 0x400921FB54442D18
  store double %7, double* %_27, align 8
  br label %bb14

bb12:                                             ; preds = %bb11
  %8 = fadd double %x64, 0x400921FB54442D18
  store double %8, double* %_27, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %9 = load double, double* %_27, align 8
; call libm::math::k_cosf::k_cosf
  %_26 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %9)
  br label %bb15

bb15:                                             ; preds = %bb14
  %10 = fneg float %_26
  store float %10, float* %0, align 4
  br label %bb36

bb18:                                             ; preds = %bb16
  %_34 = fsub double 0x3FF921FB54442D18, %x64
; call libm::math::k_sinf::k_sinf
  %11 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_34)
  store float %11, float* %0, align 4
  br label %bb36

bb17:                                             ; preds = %bb16
  %_32 = fadd double %x64, 0x3FF921FB54442D18
; call libm::math::k_sinf::k_sinf
  %12 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_32)
  store float %12, float* %0, align 4
  br label %bb36

bb20:                                             ; preds = %bb10
  %_51 = load i32, i32* %ix, align 4
  %_50 = icmp uge i32 %_51, 2139095040
  br i1 %_50, label %bb28, label %bb29

bb19:                                             ; preds = %bb10
  %_39 = load i32, i32* %ix, align 4
  %_38 = icmp ugt i32 %_39, 1085271519
  br i1 %_38, label %bb21, label %bb25

bb25:                                             ; preds = %bb19
  br i1 %sign, label %bb26, label %bb27

bb21:                                             ; preds = %bb19
  br i1 %sign, label %bb22, label %bb23

bb23:                                             ; preds = %bb21
  %13 = fsub double %x64, 0x401921FB54442D18
  store double %13, double* %_40, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  %14 = fadd double %x64, 0x401921FB54442D18
  store double %14, double* %_40, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %15 = load double, double* %_40, align 8
; call libm::math::k_cosf::k_cosf
  %16 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %15)
  store float %16, float* %0, align 4
  br label %bb36

bb27:                                             ; preds = %bb25
  %_48 = fsub double %x64, 0x4012D97C7F3321D2
; call libm::math::k_sinf::k_sinf
  %17 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_48)
  store float %17, float* %0, align 4
  br label %bb36

bb26:                                             ; preds = %bb25
  %_46 = fneg double %x64
  %_45 = fsub double %_46, 0x4012D97C7F3321D2
; call libm::math::k_sinf::k_sinf
  %18 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_45)
  store float %18, float* %0, align 4
  br label %bb36

bb29:                                             ; preds = %bb20
; call libm::math::rem_pio2f::rem_pio2f
  %19 = call { i32, double } @_ZN4libm4math9rem_pio2f9rem_pio2f17h97dc6e4f6f64a42cE(float %x)
  %_56.0 = extractvalue { i32, double } %19, 0
  %_56.1 = extractvalue { i32, double } %19, 1
  br label %bb30

bb28:                                             ; preds = %bb20
  %20 = fsub float %x, %x
  store float %20, float* %0, align 4
  br label %bb36

bb30:                                             ; preds = %bb29
  %_58 = and i32 %_56.0, 3
  switch i32 %_58, label %bb31 [
    i32 0, label %bb32
    i32 1, label %bb33
    i32 2, label %bb34
  ]

bb31:                                             ; preds = %bb30
; call libm::math::k_sinf::k_sinf
  %21 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_56.1)
  store float %21, float* %0, align 4
  br label %bb36

bb32:                                             ; preds = %bb30
; call libm::math::k_cosf::k_cosf
  %22 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_56.1)
  store float %22, float* %0, align 4
  br label %bb36

bb33:                                             ; preds = %bb30
  %_61 = fneg double %_56.1
; call libm::math::k_sinf::k_sinf
  %23 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_61)
  store float %23, float* %0, align 4
  br label %bb36

bb34:                                             ; preds = %bb30
; call libm::math::k_cosf::k_cosf
  %_63 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_56.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %24 = fneg float %_63
  store float %24, float* %0, align 4
  br label %bb36
}

; libm::math::cosh::cosh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4cosh4cosh17h620a60366f63048eE(double %0) unnamed_addr #1 {
start:
  %_18 = alloca double, align 8
  %ix = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_3 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_3)
  store i64 %2, i64* %ix, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = load i64, i64* %ix, align 8
  %4 = and i64 %3, 9223372036854775807
  store i64 %4, i64* %ix, align 8
  %_5 = load i64, i64* %ix, align 8
; call core::f64::<impl f64>::from_bits
  %_4 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  store double %_4, double* %x, align 8
  %_7 = load i64, i64* %ix, align 8
  %_8.0 = lshr i64 %_7, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = icmp ult i64 %_8.0, 1072049730
  br i1 %_9, label %bb4, label %bb10

bb10:                                             ; preds = %bb3
  %_30 = icmp ult i64 %_8.0, 1082535490
  br i1 %_30, label %bb11, label %bb12

bb4:                                              ; preds = %bb3
  %_11 = icmp ult i64 %_8.0, 1045430272
  br i1 %_11, label %bb5, label %bb8

bb8:                                              ; preds = %bb4
  %_22 = load double, double* %x, align 8
; call libm::math::expm1::expm1
  %t = call double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %_22)
  br label %bb9

bb5:                                              ; preds = %bb4
; call core::f64::<impl f64>::from_bits
  %x1p120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 5147614374084476928)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_19 = load double, double* %x, align 8
  %5 = fadd double %_19, %x1p120
  store double %5, double* %_18, align 8
; call core::ptr::read_volatile
  %_15 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_18)
  br label %bb7

bb7:                                              ; preds = %bb6
  store double 1.000000e+00, double* %1, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13, %bb9, %bb7
  %6 = load double, double* %1, align 8
  ret double %6

bb9:                                              ; preds = %bb8
  %_24 = fmul double %t, %t
  %_28 = fadd double 1.000000e+00, %t
  %_27 = fmul double 2.000000e+00, %_28
  %_23 = fdiv double %_24, %_27
  %7 = fadd double 1.000000e+00, %_23
  store double %7, double* %1, align 8
  br label %bb14

bb12:                                             ; preds = %bb10
  %_38 = load double, double* %x, align 8
; call libm::math::k_expo2::k_expo2
  %8 = call double @_ZN4libm4math7k_expo27k_expo217hee527fb0aa9df415E(double %_38)
  store double %8, double* %1, align 8
  br label %bb14

bb11:                                             ; preds = %bb10
  %_33 = load double, double* %x, align 8
; call libm::math::exp::exp
  %t1 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_33)
  br label %bb13

bb13:                                             ; preds = %bb11
  %_36 = fdiv double 1.000000e+00, %t1
  %_34 = fadd double %t1, %_36
  %9 = fmul double 5.000000e-01, %_34
  store double %9, double* %1, align 8
  br label %bb14
}

; libm::math::coshf::coshf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5coshf5coshf17hf0cb7d23059a18d5E(float %0) unnamed_addr #1 {
start:
  %_16 = alloca float, align 4
  %ix = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  store i32 %2, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_6 = load i32, i32* %ix, align 4
; call core::f32::<impl f32>::from_bits
  %_5 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  store float %_5, float* %x, align 4
  %w = load i32, i32* %ix, align 4
  %_8 = icmp ult i32 %w, 1060205079
  br i1 %_8, label %bb4, label %bb9

bb9:                                              ; preds = %bb3
  %_28 = icmp ult i32 %w, 1118925335
  br i1 %_28, label %bb10, label %bb11

bb4:                                              ; preds = %bb3
  %_10 = icmp ult i32 %w, 964689920
  br i1 %_10, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  %_20 = load float, float* %x, align 4
; call libm::math::expm1f::expm1f
  %t = call float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %_20)
  br label %bb8

bb5:                                              ; preds = %bb4
  %_17 = load float, float* %x, align 4
  %5 = fadd float %_17, %x1p120
  store float %5, float* %_16, align 4
; call core::ptr::read_volatile
  %_13 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_16)
  br label %bb6

bb6:                                              ; preds = %bb5
  store float 1.000000e+00, float* %1, align 4
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12, %bb8, %bb6
  %6 = load float, float* %1, align 4
  ret float %6

bb8:                                              ; preds = %bb7
  %_22 = fmul float %t, %t
  %_26 = fadd float 1.000000e+00, %t
  %_25 = fmul float 2.000000e+00, %_26
  %_21 = fdiv float %_22, %_25
  %7 = fadd float 1.000000e+00, %_21
  store float %7, float* %1, align 4
  br label %bb13

bb11:                                             ; preds = %bb9
  %_36 = load float, float* %x, align 4
; call libm::math::k_expo2f::k_expo2f
  %8 = call float @_ZN4libm4math8k_expo2f8k_expo2f17h52ccc5750a47ab79E(float %_36)
  store float %8, float* %1, align 4
  br label %bb13

bb10:                                             ; preds = %bb9
  %_31 = load float, float* %x, align 4
; call libm::math::expf::expf
  %t1 = call float @_ZN4libm4math4expf4expf17h08ae0fc239dada56E(float %_31)
  br label %bb12

bb12:                                             ; preds = %bb10
  %_34 = fdiv float 1.000000e+00, %t1
  %_32 = fadd float %t1, %_34
  %9 = fmul float 5.000000e-01, %_32
  store float %9, float* %1, align 4
  br label %bb13
}

; libm::math::erf::erfc1
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math3erf5erfc117h7821bf9c7bccca87E(double %x) unnamed_addr #1 {
start:
; call libm::math::fabs::fabs
  %_5 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %s = fsub double %_5, 1.000000e+00
  %_22 = fmul double %s, 0xBF61BF380A96073F
  %_21 = fadd double 0x3FA22A36599795EB, %_22
  %_19 = fmul double %s, %_21
  %_18 = fadd double 0xBFBC63983D3E28EC, %_19
  %_16 = fmul double %s, %_18
  %_15 = fadd double 0x3FD45FCA805120E4, %_16
  %_13 = fmul double %s, %_15
  %_12 = fadd double 0xBFD7D240FBB8C3F1, %_13
  %_10 = fmul double %s, %_12
  %_9 = fadd double 0x3FDA8D00AD92B34D, %_10
  %_7 = fmul double %s, %_9
  %p = fadd double 0xBF6359B8BEF77538, %_7
  %_39 = fmul double %s, 0x3F888B545735151D
  %_38 = fadd double 0x3F8BEDC26B51DD1C, %_39
  %_36 = fmul double %s, %_38
  %_35 = fadd double 0x3FC02660E763351F, %_36
  %_33 = fmul double %s, %_35
  %_32 = fadd double 0x3FB2635CD99FE9A7, %_33
  %_30 = fmul double %s, %_32
  %_29 = fadd double 0x3FE14AF092EB6F33, %_30
  %_27 = fmul double %s, %_29
  %_26 = fadd double 0x3FBB3E6618EEE323, %_27
  %_24 = fmul double %s, %_26
  %q = fadd double 1.000000e+00, %_24
  %_42 = fdiv double %p, %q
  %0 = fsub double 0x3FC3D4FA80000000, %_42
  ret double %0
}

; libm::math::erf::erfc2
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math3erf5erfc217he5f378bb436212caE(i32 %ix, double %0) unnamed_addr #1 {
start:
  %big_s = alloca double, align 8
  %r = alloca double, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_7 = icmp ult i32 %ix, 1072955392
  br i1 %_7, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_11 = load double, double* %x, align 8
; call libm::math::fabs::fabs
  %_10 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_11)
  br label %bb3

bb1:                                              ; preds = %start
  %_9 = load double, double* %x, align 8
; call libm::math::erf::erfc1
  %2 = call double @_ZN4libm4math3erf5erfc117h7821bf9c7bccca87E(double %_9)
  store double %2, double* %1, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb1
  %3 = load double, double* %1, align 8
  ret double %3

bb3:                                              ; preds = %bb2
  store double %_10, double* %x, align 8
  %_13 = load double, double* %x, align 8
  %_14 = load double, double* %x, align 8
  %_12 = fmul double %_13, %_14
  %s = fdiv double 1.000000e+00, %_12
  %_15 = icmp ult i32 %ix, 1074191213
  br i1 %_15, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_75 = fmul double %s, 0xC07E384E9BDC383F
  %_74 = fadd double 0xC09004616A2E5992, %_75
  %_72 = fmul double %s, %_74
  %_71 = fadd double 0xC083EC881375F228, %_72
  %_69 = fmul double %s, %_71
  %_68 = fadd double 0xC064145D43C5ED98, %_69
  %_66 = fmul double %s, %_68
  %_65 = fadd double 0xC031C209555F995A, %_66
  %_63 = fmul double %s, %_65
  %_62 = fadd double 0xBFE993BA70C285DE, %_63
  %_60 = fmul double %s, %_62
  %4 = fadd double 0xBF84341239E86F4A, %_60
  store double %4, double* %r, align 8
  %_95 = fmul double %s, 0xC03670E242712D62
  %_94 = fadd double 0x407DA874E79FE763, %_95
  %_92 = fmul double %s, %_94
  %_91 = fadd double 0x40A3F219CEDF3BE6, %_92
  %_89 = fmul double %s, %_91
  %_88 = fadd double 0x40A8FFB7688C246A, %_89
  %_86 = fmul double %s, %_88
  %_85 = fadd double 0x409802EB189D5118, %_86
  %_83 = fmul double %s, %_85
  %_82 = fadd double 0x40745CAE221B9F0A, %_83
  %_80 = fmul double %s, %_82
  %_79 = fadd double 0x403E568B261D5190, %_80
  %_77 = fmul double %s, %_79
  %5 = fadd double 1.000000e+00, %_77
  store double %5, double* %big_s, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  %_35 = fmul double %s, 0xC023A0EFC69AC25C
  %_34 = fadd double 0xC054526557E4D2F2, %_35
  %_32 = fmul double %s, %_34
  %_31 = fadd double 0xC067135CEBCCABB2, %_32
  %_29 = fmul double %s, %_31
  %_28 = fadd double 0xC0644CB184282266, %_29
  %_26 = fmul double %s, %_28
  %_25 = fadd double 0xC04F300AE4CBA38D, %_26
  %_23 = fmul double %s, %_25
  %_22 = fadd double 0xC0251E0441B0E726, %_23
  %_20 = fmul double %s, %_22
  %_19 = fadd double 0xBFE63416E4BA7360, %_20
  %_17 = fmul double %s, %_19
  %6 = fadd double 0xBF843412600D6435, %_17
  store double %6, double* %r, align 8
  %_58 = fmul double %s, 0xBFAEEFF2EE749A62
  %_57 = fadd double 0x401A47EF8E484A93, %_58
  %_55 = fmul double %s, %_57
  %_54 = fadd double 0x405B28A3EE48AE2C, %_55
  %_52 = fmul double %s, %_54
  %_51 = fadd double 0x407AD02157700314, %_52
  %_49 = fmul double %s, %_51
  %_48 = fadd double 0x40842B1921EC2868, %_49
  %_46 = fmul double %s, %_48
  %_45 = fadd double 0x407B290DD58A1A71, %_46
  %_43 = fmul double %s, %_45
  %_42 = fadd double 0x4061350C526AE721, %_43
  %_40 = fmul double %s, %_42
  %_39 = fadd double 0x4033A6B9BD707687, %_40
  %_37 = fmul double %s, %_39
  %7 = fadd double 1.000000e+00, %_37
  store double %7, double* %big_s, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %_98 = load double, double* %x, align 8
; call libm::math::with_set_low_word
  %_97 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_98, i32 0)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_103 = fneg double %_97
  %_102 = fmul double %_103, %_97
  %_101 = fsub double %_102, 5.625000e-01
; call libm::math::exp::exp
  %_100 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_101)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_111 = load double, double* %x, align 8
  %_109 = fsub double %_97, %_111
  %_114 = load double, double* %x, align 8
  %_112 = fadd double %_97, %_114
  %_108 = fmul double %_109, %_112
  %_116 = load double, double* %r, align 8
  %_117 = load double, double* %big_s, align 8
  %_115 = fdiv double %_116, %_117
  %_107 = fadd double %_108, %_115
; call libm::math::exp::exp
  %_106 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_107)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_99 = fmul double %_100, %_106
  %_118 = load double, double* %x, align 8
  %8 = fdiv double %_99, %_118
  store double %8, double* %1, align 8
  br label %bb10
}

; libm::math::erf::erf
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3erf3erf17hdc7e13d2575e05f3E(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %y = alloca double, align 8
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_12.0 = lshr i32 %_11, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = zext i32 %_12.0 to i64
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp uge i32 %_14, 2146435072
  br i1 %_13, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_22 = load i32, i32* %ix, align 4
  %_21 = icmp ult i32 %_22, 1072365568
  br i1 %_21, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_17 = uitofp i64 %sign to double
  %_16 = fmul double 2.000000e+00, %_17
  %_15 = fsub double 1.000000e+00, %_16
  %_19 = fdiv double 1.000000e+00, %x
  %3 = fadd double %_15, %_19
  store double %3, double* %0, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14, %bb8, %bb7, %bb3
  %4 = load double, double* %0, align 8
  ret double %4

bb6:                                              ; preds = %bb4
  %_64 = load i32, i32* %ix, align 4
  %_63 = icmp ult i32 %_64, 1075314688
  br i1 %_63, label %bb9, label %bb10

bb5:                                              ; preds = %bb4
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp ult i32 %_24, 1043333120
  br i1 %_23, label %bb7, label %bb8

bb8:                                              ; preds = %bb5
  %z = fmul double %x, %x
  %_41 = fmul double %z, 0xBEF8EAD6120016AC
  %_40 = fadd double 0xBF77A291236668E4, %_41
  %_38 = fmul double %z, %_40
  %_37 = fadd double 0xBF9D2A51DBD7194F, %_38
  %_35 = fmul double %z, %_37
  %_34 = fadd double 0xBFD4CD7D691CB913, %_35
  %_32 = fmul double %z, %_34
  %r = fadd double 0x3FC06EBA8214DB68, %_32
  %_55 = fmul double %z, 0xBED09C4342A26120
  %_54 = fadd double 0x3F215DC9221C1A10, %_55
  %_52 = fmul double %z, %_54
  %_51 = fadd double 0x3F74D022C4D36B0F, %_52
  %_49 = fmul double %z, %_51
  %_48 = fadd double 0x3FB0A54C5536CEBA, %_49
  %_46 = fmul double %z, %_48
  %_45 = fadd double 0x3FD97779CDDADC09, %_46
  %_43 = fmul double %z, %_45
  %s = fadd double 1.000000e+00, %_43
  %5 = fdiv double %r, %s
  store double %5, double* %y, align 8
  %_62 = load double, double* %y, align 8
  %_60 = fmul double %x, %_62
  %6 = fadd double %x, %_60
  store double %6, double* %0, align 8
  br label %bb16

bb7:                                              ; preds = %bb5
  %_26 = fmul double 8.000000e+00, %x
  %_28 = fmul double 0x3FF06EBA8214DB69, %x
  %_25 = fadd double %_26, %_28
  %7 = fmul double 1.250000e-01, %_25
  store double %7, double* %0, align 8
  br label %bb16

bb10:                                             ; preds = %bb6
; call core::f64::<impl f64>::from_bits
  %x1p_1022 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4503599627370496)
  br label %bb12

bb9:                                              ; preds = %bb6
  %_66 = load i32, i32* %ix, align 4
; call libm::math::erf::erfc2
  %_65 = call double @_ZN4libm4math3erf5erfc217he5f378bb436212caE(i32 %_66, double %x)
  br label %bb11

bb11:                                             ; preds = %bb9
  %8 = fsub double 1.000000e+00, %_65
  store double %8, double* %y, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %9 = icmp eq i64 %sign, 0
  br i1 %9, label %bb15, label %bb14

bb12:                                             ; preds = %bb10
  %10 = fsub double 1.000000e+00, %x1p_1022
  store double %10, double* %y, align 8
  br label %bb13

bb15:                                             ; preds = %bb13
  %11 = load double, double* %y, align 8
  store double %11, double* %0, align 8
  br label %bb16

bb14:                                             ; preds = %bb13
  %_71 = load double, double* %y, align 8
  %12 = fneg double %_71
  store double %12, double* %0, align 8
  br label %bb16
}

; libm::math::erf::erfc
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3erf4erfc17h3d402525135e6f83E(double %x) unnamed_addr #1 {
start:
  %_54 = alloca i8, align 1
  %ix = alloca i32, align 4
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_12.0 = lshr i32 %_11, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = zext i32 %_12.0 to i64
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp uge i32 %_14, 2146435072
  br i1 %_13, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_21 = load i32, i32* %ix, align 4
  %_20 = icmp ult i32 %_21, 1072365568
  br i1 %_20, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_16 = uitofp i64 %sign to double
  %_15 = fmul double 2.000000e+00, %_16
  %_18 = fdiv double 1.000000e+00, %x
  %3 = fadd double %_15, %_18
  store double %3, double* %0, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20, %bb18, %bb17, %bb13, %bb12, %bb7, %bb3
  %4 = load double, double* %0, align 8
  ret double %4

bb6:                                              ; preds = %bb4
  %_70 = load i32, i32* %ix, align 4
  %_69 = icmp ult i32 %_70, 1077673984
  br i1 %_69, label %bb14, label %bb15

bb5:                                              ; preds = %bb4
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp ult i32 %_23, 1013972992
  br i1 %_22, label %bb7, label %bb8

bb8:                                              ; preds = %bb5
  %z = fmul double %x, %x
  %_36 = fmul double %z, 0xBEF8EAD6120016AC
  %_35 = fadd double 0xBF77A291236668E4, %_36
  %_33 = fmul double %z, %_35
  %_32 = fadd double 0xBF9D2A51DBD7194F, %_33
  %_30 = fmul double %z, %_32
  %_29 = fadd double 0xBFD4CD7D691CB913, %_30
  %_27 = fmul double %z, %_29
  %r = fadd double 0x3FC06EBA8214DB68, %_27
  %_50 = fmul double %z, 0xBED09C4342A26120
  %_49 = fadd double 0x3F215DC9221C1A10, %_50
  %_47 = fmul double %z, %_49
  %_46 = fadd double 0x3F74D022C4D36B0F, %_47
  %_44 = fmul double %z, %_46
  %_43 = fadd double 0x3FB0A54C5536CEBA, %_44
  %_41 = fmul double %z, %_43
  %_40 = fadd double 0x3FD97779CDDADC09, %_41
  %_38 = fmul double %z, %_40
  %s = fadd double 1.000000e+00, %_38
  %y = fdiv double %r, %s
  %5 = icmp eq i64 %sign, 0
  br i1 %5, label %bb10, label %bb9

bb7:                                              ; preds = %bb5
  %6 = fsub double 1.000000e+00, %x
  store double %6, double* %0, align 8
  br label %bb22

bb10:                                             ; preds = %bb8
  %_57 = load i32, i32* %ix, align 4
  %_56 = icmp ult i32 %_57, 1070596096
  %7 = zext i1 %_56 to i8
  store i8 %7, i8* %_54, align 1
  br label %bb11

bb9:                                              ; preds = %bb8
  store i8 1, i8* %_54, align 1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %8 = load i8, i8* %_54, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %_64 = fsub double %x, 5.000000e-01
  %_66 = fmul double %x, %y
  %_63 = fadd double %_64, %_66
  %10 = fsub double 5.000000e-01, %_63
  store double %10, double* %0, align 8
  br label %bb22

bb12:                                             ; preds = %bb11
  %_60 = fmul double %x, %y
  %_58 = fadd double %x, %_60
  %11 = fsub double 1.000000e+00, %_58
  store double %11, double* %0, align 8
  br label %bb22

bb15:                                             ; preds = %bb6
; call core::f64::<impl f64>::from_bits
  %x1p_1022 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4503599627370496)
  br label %bb19

bb14:                                             ; preds = %bb6
  %12 = icmp eq i64 %sign, 0
  br i1 %12, label %bb18, label %bb16

bb18:                                             ; preds = %bb14
  %_75 = load i32, i32* %ix, align 4
; call libm::math::erf::erfc2
  %13 = call double @_ZN4libm4math3erf5erfc217he5f378bb436212caE(i32 %_75, double %x)
  store double %13, double* %0, align 8
  br label %bb22

bb16:                                             ; preds = %bb14
  %_73 = load i32, i32* %ix, align 4
; call libm::math::erf::erfc2
  %_72 = call double @_ZN4libm4math3erf5erfc217he5f378bb436212caE(i32 %_73, double %x)
  br label %bb17

bb17:                                             ; preds = %bb16
  %14 = fsub double 2.000000e+00, %_72
  store double %14, double* %0, align 8
  br label %bb22

bb19:                                             ; preds = %bb15
  %15 = icmp eq i64 %sign, 0
  br i1 %15, label %bb21, label %bb20

bb21:                                             ; preds = %bb19
  %16 = fmul double %x1p_1022, %x1p_1022
  store double %16, double* %0, align 8
  br label %bb22

bb20:                                             ; preds = %bb19
  %17 = fsub double 2.000000e+00, %x1p_1022
  store double %17, double* %0, align 8
  br label %bb22
}

; libm::math::erff::erfc1
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math4erff5erfc117h9791929ca26ddfb5E(float %x) unnamed_addr #1 {
start:
; call libm::math::fabsf::fabsf
  %_5 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %s = fsub float %_5, 1.000000e+00
  %_22 = fmul float %s, 0xBF61BF3800000000
  %_21 = fadd float 0x3FA22A3660000000, %_22
  %_19 = fmul float %s, %_21
  %_18 = fadd float 0xBFBC639840000000, %_19
  %_16 = fmul float %s, %_18
  %_15 = fadd float 0x3FD45FCA80000000, %_16
  %_13 = fmul float %s, %_15
  %_12 = fadd float 0xBFD7D24100000000, %_13
  %_10 = fmul float %s, %_12
  %_9 = fadd float 0x3FDA8D00A0000000, %_10
  %_7 = fmul float %s, %_9
  %p = fadd float 0xBF6359B8C0000000, %_7
  %_39 = fmul float %s, 0x3F888B5460000000
  %_38 = fadd float 0x3F8BEDC260000000, %_39
  %_36 = fmul float %s, %_38
  %_35 = fadd float 0x3FC02660E0000000, %_36
  %_33 = fmul float %s, %_35
  %_32 = fadd float 0x3FB2635CE0000000, %_33
  %_30 = fmul float %s, %_32
  %_29 = fadd float 0x3FE14AF0A0000000, %_30
  %_27 = fmul float %s, %_29
  %_26 = fadd float 0x3FBB3E6620000000, %_27
  %_24 = fmul float %s, %_26
  %q = fadd float 1.000000e+00, %_24
  %_42 = fdiv float %p, %q
  %0 = fsub float 0x3FC3D4FA80000000, %_42
  ret float %0
}

; libm::math::erff::erfc2
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math4erff5erfc217h0f3e8ff13853ba02E(i32 %0, float %1) unnamed_addr #1 {
start:
  %big_s = alloca float, align 4
  %r = alloca float, align 4
  %2 = alloca float, align 4
  %x = alloca float, align 4
  %ix = alloca i32, align 4
  store i32 %0, i32* %ix, align 4
  store float %1, float* %x, align 4
  %_8 = load i32, i32* %ix, align 4
  %_7 = icmp ult i32 %_8, 1067450368
  br i1 %_7, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_11 = load float, float* %x, align 4
; call libm::math::fabsf::fabsf
  %_10 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_11)
  br label %bb3

bb1:                                              ; preds = %start
  %_9 = load float, float* %x, align 4
; call libm::math::erff::erfc1
  %3 = call float @_ZN4libm4math4erff5erfc117h9791929ca26ddfb5E(float %_9)
  store float %3, float* %2, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %4 = load float, float* %2, align 4
  ret float %4

bb3:                                              ; preds = %bb2
  store float %_10, float* %x, align 4
  %_13 = load float, float* %x, align 4
  %_14 = load float, float* %x, align 4
  %_12 = fmul float %_13, %_14
  %s = fdiv float 1.000000e+00, %_12
  %_16 = load i32, i32* %ix, align 4
  %_15 = icmp ult i32 %_16, 1077336941
  br i1 %_15, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_75 = fmul float %s, 0xC07E384EA0000000
  %_74 = fadd float 0xC090046160000000, %_75
  %_72 = fmul float %s, %_74
  %_71 = fadd float 0xC083EC8820000000, %_72
  %_69 = fmul float %s, %_71
  %_68 = fadd float 0xC064145D40000000, %_69
  %_66 = fmul float %s, %_68
  %_65 = fadd float 0xC031C20960000000, %_66
  %_63 = fmul float %s, %_65
  %_62 = fadd float 0xBFE993BA80000000, %_63
  %_60 = fmul float %s, %_62
  %5 = fadd float 0xBF84341240000000, %_60
  store float %5, float* %r, align 4
  %_95 = fmul float %s, 0xC03670E240000000
  %_94 = fadd float 0x407DA874E0000000, %_95
  %_92 = fmul float %s, %_94
  %_91 = fadd float 0x40A3F219C0000000, %_92
  %_89 = fmul float %s, %_91
  %_88 = fadd float 0x40A8FFB760000000, %_89
  %_86 = fmul float %s, %_88
  %_85 = fadd float 0x409802EB20000000, %_86
  %_83 = fmul float %s, %_85
  %_82 = fadd float 0x40745CAE20000000, %_83
  %_80 = fmul float %s, %_82
  %_79 = fadd float 0x403E568B20000000, %_80
  %_77 = fmul float %s, %_79
  %6 = fadd float 1.000000e+00, %_77
  store float %6, float* %big_s, align 4
  br label %bb6

bb4:                                              ; preds = %bb3
  %_35 = fmul float %s, 0xC023A0EFC0000000
  %_34 = fadd float 0xC054526560000000, %_35
  %_32 = fmul float %s, %_34
  %_31 = fadd float 0xC067135CE0000000, %_32
  %_29 = fmul float %s, %_31
  %_28 = fadd float 0xC0644CB180000000, %_29
  %_26 = fmul float %s, %_28
  %_25 = fadd float 0xC04F300AE0000000, %_26
  %_23 = fmul float %s, %_25
  %_22 = fadd float 0xC0251E0440000000, %_23
  %_20 = fmul float %s, %_22
  %_19 = fadd float 0xBFE63416E0000000, %_20
  %_17 = fmul float %s, %_19
  %7 = fadd float 0xBF84341260000000, %_17
  store float %7, float* %r, align 4
  %_58 = fmul float %s, 0xBFAEEFF2E0000000
  %_57 = fadd float 0x401A47EF80000000, %_58
  %_55 = fmul float %s, %_57
  %_54 = fadd float 0x405B28A3E0000000, %_55
  %_52 = fmul float %s, %_54
  %_51 = fadd float 0x407AD02160000000, %_52
  %_49 = fmul float %s, %_51
  %_48 = fadd float 0x40842B1920000000, %_49
  %_46 = fmul float %s, %_48
  %_45 = fadd float 0x407B290DE0000000, %_46
  %_43 = fmul float %s, %_45
  %_42 = fadd float 0x4061350C60000000, %_43
  %_40 = fmul float %s, %_42
  %_39 = fadd float 0x4033A6B9C0000000, %_40
  %_37 = fmul float %s, %_39
  %8 = fadd float 1.000000e+00, %_37
  store float %8, float* %big_s, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %_98 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_97 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_98)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_97, i32* %ix, align 4
  %_101 = load i32, i32* %ix, align 4
  %_100 = and i32 %_101, -8192
; call core::f32::<impl f32>::from_bits
  %_99 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_100)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_106 = fneg float %_99
  %_105 = fmul float %_106, %_99
  %_104 = fsub float %_105, 5.625000e-01
; call libm::math::expf::expf
  %_103 = call float @_ZN4libm4math4expf4expf17h08ae0fc239dada56E(float %_104)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_114 = load float, float* %x, align 4
  %_112 = fsub float %_99, %_114
  %_117 = load float, float* %x, align 4
  %_115 = fadd float %_99, %_117
  %_111 = fmul float %_112, %_115
  %_119 = load float, float* %r, align 4
  %_120 = load float, float* %big_s, align 4
  %_118 = fdiv float %_119, %_120
  %_110 = fadd float %_111, %_118
; call libm::math::expf::expf
  %_109 = call float @_ZN4libm4math4expf4expf17h08ae0fc239dada56E(float %_110)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_102 = fmul float %_103, %_109
  %_121 = load float, float* %x, align 4
  %9 = fdiv float %_102, %_121
  store float %9, float* %2, align 4
  br label %bb11
}

; libm::math::erff::erff
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4erff4erff17h753567b7f5629a74E(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %y = alloca float, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_12.0 = lshr i32 %_11, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = zext i32 %_12.0 to i64
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp uge i32 %_14, 2139095040
  br i1 %_13, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_22 = load i32, i32* %ix, align 4
  %_21 = icmp ult i32 %_22, 1062731776
  br i1 %_21, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_17 = uitofp i64 %sign to float
  %_16 = fmul float 2.000000e+00, %_17
  %_15 = fsub float 1.000000e+00, %_16
  %_19 = fdiv float 1.000000e+00, %x
  %3 = fadd float %_15, %_19
  store float %3, float* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14, %bb8, %bb7, %bb3
  %4 = load float, float* %0, align 4
  ret float %4

bb6:                                              ; preds = %bb4
  %_64 = load i32, i32* %ix, align 4
  %_63 = icmp ult i32 %_64, 1086324736
  br i1 %_63, label %bb9, label %bb10

bb5:                                              ; preds = %bb4
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp ult i32 %_24, 830472192
  br i1 %_23, label %bb7, label %bb8

bb8:                                              ; preds = %bb5
  %z = fmul float %x, %x
  %_41 = fmul float %z, 0xBEF8EAD620000000
  %_40 = fadd float 0xBF77A29120000000, %_41
  %_38 = fmul float %z, %_40
  %_37 = fadd float 0xBF9D2A51E0000000, %_38
  %_35 = fmul float %z, %_37
  %_34 = fadd float 0xBFD4CD7D60000000, %_35
  %_32 = fmul float %z, %_34
  %r = fadd float 0x3FC06EBA80000000, %_32
  %_55 = fmul float %z, 0xBED09C4340000000
  %_54 = fadd float 0x3F215DC920000000, %_55
  %_52 = fmul float %z, %_54
  %_51 = fadd float 0x3F74D022C0000000, %_52
  %_49 = fmul float %z, %_51
  %_48 = fadd float 0x3FB0A54C60000000, %_49
  %_46 = fmul float %z, %_48
  %_45 = fadd float 0x3FD97779C0000000, %_46
  %_43 = fmul float %z, %_45
  %s = fadd float 1.000000e+00, %_43
  %5 = fdiv float %r, %s
  store float %5, float* %y, align 4
  %_62 = load float, float* %y, align 4
  %_60 = fmul float %x, %_62
  %6 = fadd float %x, %_60
  store float %6, float* %0, align 4
  br label %bb16

bb7:                                              ; preds = %bb5
  %_26 = fmul float 8.000000e+00, %x
  %_28 = fmul float 0x3FF06EBA80000000, %x
  %_25 = fadd float %_26, %_28
  %7 = fmul float 1.250000e-01, %_25
  store float %7, float* %0, align 4
  br label %bb16

bb10:                                             ; preds = %bb6
; call core::f32::<impl f32>::from_bits
  %x1p_120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 58720256)
  br label %bb12

bb9:                                              ; preds = %bb6
  %_66 = load i32, i32* %ix, align 4
; call libm::math::erff::erfc2
  %_65 = call float @_ZN4libm4math4erff5erfc217h0f3e8ff13853ba02E(i32 %_66, float %x)
  br label %bb11

bb11:                                             ; preds = %bb9
  %8 = fsub float 1.000000e+00, %_65
  store float %8, float* %y, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %9 = icmp eq i64 %sign, 0
  br i1 %9, label %bb15, label %bb14

bb12:                                             ; preds = %bb10
  %10 = fsub float 1.000000e+00, %x1p_120
  store float %10, float* %y, align 4
  br label %bb13

bb15:                                             ; preds = %bb13
  %11 = load float, float* %y, align 4
  store float %11, float* %0, align 4
  br label %bb16

bb14:                                             ; preds = %bb13
  %_71 = load float, float* %y, align 4
  %12 = fneg float %_71
  store float %12, float* %0, align 4
  br label %bb16
}

; libm::math::erff::erfcf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4erff5erfcf17hb275de63cfe5042cE(float %x) unnamed_addr #1 {
start:
  %_54 = alloca i8, align 1
  %ix = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_12.0 = lshr i32 %_11, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = zext i32 %_12.0 to i64
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp uge i32 %_14, 2139095040
  br i1 %_13, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_21 = load i32, i32* %ix, align 4
  %_20 = icmp ult i32 %_21, 1062731776
  br i1 %_20, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_16 = uitofp i64 %sign to float
  %_15 = fmul float 2.000000e+00, %_16
  %_18 = fdiv float 1.000000e+00, %x
  %3 = fadd float %_15, %_18
  store float %3, float* %0, align 4
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20, %bb18, %bb17, %bb13, %bb12, %bb7, %bb3
  %4 = load float, float* %0, align 4
  ret float %4

bb6:                                              ; preds = %bb4
  %_70 = load i32, i32* %ix, align 4
  %_69 = icmp ult i32 %_70, 1105199104
  br i1 %_69, label %bb14, label %bb15

bb5:                                              ; preds = %bb4
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp ult i32 %_23, 595591168
  br i1 %_22, label %bb7, label %bb8

bb8:                                              ; preds = %bb5
  %z = fmul float %x, %x
  %_36 = fmul float %z, 0xBEF8EAD620000000
  %_35 = fadd float 0xBF77A29120000000, %_36
  %_33 = fmul float %z, %_35
  %_32 = fadd float 0xBF9D2A51E0000000, %_33
  %_30 = fmul float %z, %_32
  %_29 = fadd float 0xBFD4CD7D60000000, %_30
  %_27 = fmul float %z, %_29
  %r = fadd float 0x3FC06EBA80000000, %_27
  %_50 = fmul float %z, 0xBED09C4340000000
  %_49 = fadd float 0x3F215DC920000000, %_50
  %_47 = fmul float %z, %_49
  %_46 = fadd float 0x3F74D022C0000000, %_47
  %_44 = fmul float %z, %_46
  %_43 = fadd float 0x3FB0A54C60000000, %_44
  %_41 = fmul float %z, %_43
  %_40 = fadd float 0x3FD97779C0000000, %_41
  %_38 = fmul float %z, %_40
  %s = fadd float 1.000000e+00, %_38
  %y = fdiv float %r, %s
  %5 = icmp eq i64 %sign, 0
  br i1 %5, label %bb10, label %bb9

bb7:                                              ; preds = %bb5
  %6 = fsub float 1.000000e+00, %x
  store float %6, float* %0, align 4
  br label %bb22

bb10:                                             ; preds = %bb8
  %_57 = load i32, i32* %ix, align 4
  %_56 = icmp ult i32 %_57, 1048576000
  %7 = zext i1 %_56 to i8
  store i8 %7, i8* %_54, align 1
  br label %bb11

bb9:                                              ; preds = %bb8
  store i8 1, i8* %_54, align 1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %8 = load i8, i8* %_54, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %_64 = fsub float %x, 5.000000e-01
  %_66 = fmul float %x, %y
  %_63 = fadd float %_64, %_66
  %10 = fsub float 5.000000e-01, %_63
  store float %10, float* %0, align 4
  br label %bb22

bb12:                                             ; preds = %bb11
  %_60 = fmul float %x, %y
  %_58 = fadd float %x, %_60
  %11 = fsub float 1.000000e+00, %_58
  store float %11, float* %0, align 4
  br label %bb22

bb15:                                             ; preds = %bb6
; call core::f32::<impl f32>::from_bits
  %x1p_120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 58720256)
  br label %bb19

bb14:                                             ; preds = %bb6
  %12 = icmp eq i64 %sign, 0
  br i1 %12, label %bb18, label %bb16

bb18:                                             ; preds = %bb14
  %_75 = load i32, i32* %ix, align 4
; call libm::math::erff::erfc2
  %13 = call float @_ZN4libm4math4erff5erfc217h0f3e8ff13853ba02E(i32 %_75, float %x)
  store float %13, float* %0, align 4
  br label %bb22

bb16:                                             ; preds = %bb14
  %_73 = load i32, i32* %ix, align 4
; call libm::math::erff::erfc2
  %_72 = call float @_ZN4libm4math4erff5erfc217h0f3e8ff13853ba02E(i32 %_73, float %x)
  br label %bb17

bb17:                                             ; preds = %bb16
  %14 = fsub float 2.000000e+00, %_72
  store float %14, float* %0, align 4
  br label %bb22

bb19:                                             ; preds = %bb15
  %15 = icmp eq i64 %sign, 0
  br i1 %15, label %bb21, label %bb20

bb21:                                             ; preds = %bb19
  %16 = fmul float %x1p_120, %x1p_120
  store float %16, float* %0, align 4
  br label %bb22

bb20:                                             ; preds = %bb19
  %17 = fsub float 2.000000e+00, %x1p_120
  store float %17, float* %0, align 4
  br label %bb22
}

; libm::math::exp::exp
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %0) unnamed_addr #1 {
start:
  %_71 = alloca double, align 8
  %_31 = alloca float, align 4
  %hx = alloca i32, align 4
  %k = alloca i32, align 4
  %lo = alloca double, align 8
  %hi = alloca double, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
; call core::f64::<impl f64>::from_bits
  %x1p1023 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %x1p_149 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 3936146074321813504)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_14 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %_13 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_14)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_15.0 = lshr i64 %_13, 32
  br label %bb4

bb4:                                              ; preds = %bb3
  %2 = trunc i64 %_15.0 to i32
  store i32 %2, i32* %hx, align 4
  %_17 = load i32, i32* %hx, align 4
  %_18.0 = lshr i32 %_17, 31
  br label %bb5

bb5:                                              ; preds = %bb4
  %3 = load i32, i32* %hx, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %hx, align 4
  %_20 = load i32, i32* %hx, align 4
  %_19 = icmp uge i32 %_20, 1082532651
  br i1 %_19, label %bb6, label %bb15

bb15:                                             ; preds = %bb13, %bb11, %bb5
  %_39 = load i32, i32* %hx, align 4
  %_38 = icmp ugt i32 %_39, 1071001154
  br i1 %_38, label %bb16, label %bb24

bb6:                                              ; preds = %bb5
  %_22 = load double, double* %x, align 8
; call core::f64::<impl f64>::is_nan
  %_21 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %_22)
  br label %bb7

bb7:                                              ; preds = %bb6
  br i1 %_21, label %bb8, label %bb9

bb9:                                              ; preds = %bb7
  %_24 = load double, double* %x, align 8
  %_23 = fcmp ogt double %_24, 0x40862E42FEFA39EF
  br i1 %_23, label %bb10, label %bb11

bb8:                                              ; preds = %bb7
  %5 = load double, double* %x, align 8
  store double %5, double* %1, align 8
  br label %bb31

bb31:                                             ; preds = %bb27, %bb29, %bb30, %bb14, %bb10, %bb8
  %6 = load double, double* %1, align 8
  ret double %6

bb11:                                             ; preds = %bb9
  %_27 = load double, double* %x, align 8
  %_26 = fcmp olt double %_27, 0xC086232BDD7ABCD2
  br i1 %_26, label %bb12, label %bb15

bb10:                                             ; preds = %bb9
  %7 = load double, double* %x, align 8
  %8 = fmul double %7, %x1p1023
  store double %8, double* %x, align 8
  %9 = load double, double* %x, align 8
  store double %9, double* %1, align 8
  br label %bb31

bb12:                                             ; preds = %bb11
  %_33 = fneg double %x1p_149
  %_35 = load double, double* %x, align 8
  %_32 = fdiv double %_33, %_35
  %10 = fptrunc double %_32 to float
  store float %10, float* %_31, align 4
; call core::ptr::read_volatile
  %_28 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_31)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_37 = load double, double* %x, align 8
  %_36 = fcmp olt double %_37, 0xC0874910D52D3051
  br i1 %_36, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store double 0.000000e+00, double* %1, align 8
  br label %bb31

bb24:                                             ; preds = %bb15
  %_66 = load i32, i32* %hx, align 4
  %_65 = icmp ugt i32 %_66, 1043333120
  br i1 %_65, label %bb25, label %bb26

bb16:                                             ; preds = %bb15
  %_41 = load i32, i32* %hx, align 4
  %_40 = icmp uge i32 %_41, 1072734898
  br i1 %_40, label %bb17, label %bb20

bb20:                                             ; preds = %bb16
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1, i32 %_18.0)
  %_54.0 = extractvalue { i32, i1 } %11, 0
  %_54.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %12, label %panic, label %bb21

bb17:                                             ; preds = %bb16
  %_44 = load double, double* %x, align 8
  %_43 = fmul double 0x3FF71547652B82FE, %_44
  %_50 = sext i32 %_18.0 to i64
; call core::slice::<impl [T]>::get
  %_47 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1037 to [0 x double]*), i64 2, i64 %_50)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::option::Option<T>::unwrap
  %_46 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_47, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1794 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %_45 = load double, double* %_46, align 8
  %_42 = fadd double %_43, %_45
  %13 = call i32 @llvm.fptosi.sat.i32.f64(double %_42)
  store i32 %13, i32* %k, align 4
  br label %bb23

bb23:                                             ; preds = %bb22, %bb19
  %_57 = load double, double* %x, align 8
  %_60 = load i32, i32* %k, align 4
  %_59 = sitofp i32 %_60 to double
  %_58 = fmul double %_59, 0x3FE62E42FEE00000
  %14 = fsub double %_57, %_58
  store double %14, double* %hi, align 8
  %_62 = load i32, i32* %k, align 4
  %_61 = sitofp i32 %_62 to double
  %15 = fmul double %_61, 0x3DEA39EF35793C76
  store double %15, double* %lo, align 8
  %_63 = load double, double* %hi, align 8
  %_64 = load double, double* %lo, align 8
  %16 = fsub double %_63, %_64
  store double %16, double* %x, align 8
  br label %bb28

bb21:                                             ; preds = %bb20
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_54.0, i32 %_18.0)
  %_56.0 = extractvalue { i32, i1 } %17, 0
  %_56.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false)
  br i1 %18, label %panic1, label %bb22

panic:                                            ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1796 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  store i32 %_56.0, i32* %k, align 4
  br label %bb23

panic1:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1796 to %"core::panic::location::Location"*)) #11
  unreachable

bb28:                                             ; preds = %bb25, %bb23
  %_75 = load double, double* %x, align 8
  %_76 = load double, double* %x, align 8
  %xx = fmul double %_75, %_76
  %_77 = load double, double* %x, align 8
  %_90 = fmul double %xx, 0x3E66376972BEA4D0
  %_89 = fadd double 0xBEBBBD41C5D26BF1, %_90
  %_87 = fmul double %xx, %_89
  %_86 = fadd double 0x3F11566AAF25DE2C, %_87
  %_84 = fmul double %xx, %_86
  %_83 = fadd double 0xBF66C16C16BEBD93, %_84
  %_81 = fmul double %xx, %_83
  %_80 = fadd double 0x3FC555555555553E, %_81
  %_78 = fmul double %xx, %_80
  %c = fsub double %_77, %_78
  %_96 = load double, double* %x, align 8
  %_95 = fmul double %_96, %c
  %_98 = fsub double 2.000000e+00, %c
  %_94 = fdiv double %_95, %_98
  %_100 = load double, double* %lo, align 8
  %_93 = fsub double %_94, %_100
  %_101 = load double, double* %hi, align 8
  %_92 = fadd double %_93, %_101
  %y = fadd double 1.000000e+00, %_92
  %_102 = load i32, i32* %k, align 4
  %19 = icmp eq i32 %_102, 0
  br i1 %19, label %bb29, label %bb30

bb26:                                             ; preds = %bb24
  %_73 = load double, double* %x, align 8
  %20 = fadd double %x1p1023, %_73
  store double %20, double* %_71, align 8
; call core::ptr::read_volatile
  %_68 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_71)
  br label %bb27

bb25:                                             ; preds = %bb24
  store i32 0, i32* %k, align 4
  %_67 = load double, double* %x, align 8
  store double %_67, double* %hi, align 8
  store double 0.000000e+00, double* %lo, align 8
  br label %bb28

bb29:                                             ; preds = %bb28
  store double %y, double* %1, align 8
  br label %bb31

bb30:                                             ; preds = %bb28
  %_104 = load i32, i32* %k, align 4
; call libm::math::scalbn::scalbn
  %21 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %y, i32 %_104)
  store double %21, double* %1, align 8
  br label %bb31

bb27:                                             ; preds = %bb26
  %_74 = load double, double* %x, align 8
  %22 = fadd double 1.000000e+00, %_74
  store double %22, double* %1, align 8
  br label %bb31
}

; libm::math::exp10::exp10
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5exp105exp1017h7efef15c623ca56cE(double %x) unnamed_addr #1 {
start:
  %y = alloca double, align 8
  %0 = alloca double, align 8
; call libm::math::modf::modf
  %1 = call { double, double } @_ZN4libm4math4modf4modf17ha9f5e42c1468be19E(double %x)
  %_4.0 = extractvalue { double, double } %1, 0
  %_4.1 = extractvalue { double, double } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store double %_4.0, double* %y, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12.0 = lshr i64 %u, 52
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = and i64 %_12.0, 2047
  %_8 = icmp ult i64 %_9, 1027
  br i1 %_8, label %bb4, label %bb12

bb12:                                             ; preds = %bb3
; call libm::math::pow::pow
  %2 = call double @_ZN4libm4math3pow3pow17haa9e7388182ede4dE(double 1.000000e+01, double %x)
  store double %2, double* %0, align 8
  br label %bb13

bb4:                                              ; preds = %bb3
  %_15 = load double, double* %y, align 8
  %_14 = fcmp oeq double %_15, 0.000000e+00
  br i1 %_14, label %bb5, label %bb8

bb8:                                              ; preds = %bb4
  %_26 = load double, double* %y, align 8
  %_25 = fmul double 0x400A934F0979A371, %_26
; call libm::math::exp2::exp2
  %_24 = call double @_ZN4libm4math4exp24exp217h45917a322df4e0d0E(double %_25)
  br label %bb9

bb5:                                              ; preds = %bb4
  %_16.0 = load [0 x double]*, [0 x double]** getelementptr inbounds ({ [0 x double]*, i64 }, { [0 x double]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @0 to { [0 x double]*, i64 }*), i32 0, i32 0), align 8, !nonnull !4
  %_16.1 = load i64, i64* getelementptr inbounds ({ [0 x double]*, i64 }, { [0 x double]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @0 to { [0 x double]*, i64 }*), i32 0, i32 1), align 8
  %_19 = call i64 @llvm.fptosi.sat.i64.f64(double %_4.1)
  %3 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_19, i64 15)
  %_21.0 = extractvalue { i64, i1 } %3, 0
  %_21.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %4, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  %_23 = icmp ult i64 %_21.0, 31
  %5 = call i1 @llvm.expect.i1(i1 %_23, i1 true)
  br i1 %5, label %bb7, label %panic1

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1798 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb6
  %6 = getelementptr inbounds [0 x double], [0 x double]* %_16.0, i64 0, i64 %_21.0
  %7 = load double, double* %6, align 8
  store double %7, double* %0, align 8
  br label %bb13

panic1:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_21.0, i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1800 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12, %bb11, %bb7
  %8 = load double, double* %0, align 8
  ret double %8

bb9:                                              ; preds = %bb8
  store double %_24, double* %y, align 8
  %_27 = load double, double* %y, align 8
  %_29.0 = load [0 x double]*, [0 x double]** getelementptr inbounds ({ [0 x double]*, i64 }, { [0 x double]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @0 to { [0 x double]*, i64 }*), i32 0, i32 0), align 8, !nonnull !4
  %_29.1 = load i64, i64* getelementptr inbounds ({ [0 x double]*, i64 }, { [0 x double]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @0 to { [0 x double]*, i64 }*), i32 0, i32 1), align 8
  %_32 = call i64 @llvm.fptosi.sat.i64.f64(double %_4.1)
  %9 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_32, i64 15)
  %_34.0 = extractvalue { i64, i1 } %9, 0
  %_34.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %10, label %panic2, label %bb10

bb10:                                             ; preds = %bb9
  %_36 = icmp ult i64 %_34.0, 31
  %11 = call i1 @llvm.expect.i1(i1 %_36, i1 true)
  br i1 %11, label %bb11, label %panic3

panic2:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1802 to %"core::panic::location::Location"*)) #11
  unreachable

bb11:                                             ; preds = %bb10
  %12 = getelementptr inbounds [0 x double], [0 x double]* %_29.0, i64 0, i64 %_34.0
  %_28 = load double, double* %12, align 8
  %13 = fmul double %_27, %_28
  store double %13, double* %0, align 8
  br label %bb13

panic3:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_34.0, i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1804 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::exp10f::exp10f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6exp10f6exp10f17hb1107b5fbdb2b497E(float %x) unnamed_addr #1 {
start:
  %y = alloca float, align 4
  %0 = alloca float, align 4
; call libm::math::modff::modff
  %1 = call { float, float } @_ZN4libm4math5modff5modff17hee02bcd47adda105E(float %x)
  %_4.0 = extractvalue { float, float } %1, 0
  %_4.1 = extractvalue { float, float } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store float %_4.0, float* %y, align 4
; call core::f32::<impl f32>::to_bits
  %u = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12.0 = lshr i32 %u, 23
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9 = and i32 %_12.0, 255
  %_8 = icmp ult i32 %_9, 130
  br i1 %_8, label %bb4, label %bb12

bb12:                                             ; preds = %bb3
  %_39 = fpext float %x to double
  %_38 = fmul double 0x400A934F0979A371, %_39
; call libm::math::exp2::exp2
  %_37 = call double @_ZN4libm4math4exp24exp217h45917a322df4e0d0E(double %_38)
  br label %bb13

bb4:                                              ; preds = %bb3
  %_15 = load float, float* %y, align 4
  %_14 = fcmp oeq float %_15, 0.000000e+00
  br i1 %_14, label %bb5, label %bb8

bb8:                                              ; preds = %bb4
  %_26 = load float, float* %y, align 4
  %_25 = fmul float 0x400A934F00000000, %_26
; call libm::math::exp2f::exp2f
  %_24 = call float @_ZN4libm4math5exp2f5exp2f17ha81cc02b3a0ca05dE(float %_25)
  br label %bb9

bb5:                                              ; preds = %bb4
  %_16.0 = load [0 x float]*, [0 x float]** getelementptr inbounds ({ [0 x float]*, i64 }, { [0 x float]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x float]*, i64 }*), i32 0, i32 0), align 8, !nonnull !4
  %_16.1 = load i64, i64* getelementptr inbounds ({ [0 x float]*, i64 }, { [0 x float]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x float]*, i64 }*), i32 0, i32 1), align 8
  %_19 = call i64 @llvm.fptosi.sat.i64.f32(float %_4.1)
  %2 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_19, i64 7)
  %_21.0 = extractvalue { i64, i1 } %2, 0
  %_21.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %3, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  %_23 = icmp ult i64 %_21.0, 15
  %4 = call i1 @llvm.expect.i1(i1 %_23, i1 true)
  br i1 %4, label %bb7, label %panic1

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1806 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb6
  %5 = getelementptr inbounds [0 x float], [0 x float]* %_16.0, i64 0, i64 %_21.0
  %6 = load float, float* %5, align 4
  store float %6, float* %0, align 4
  br label %bb14

panic1:                                           ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_21.0, i64 15, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1808 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13, %bb11, %bb7
  %7 = load float, float* %0, align 4
  ret float %7

bb9:                                              ; preds = %bb8
  store float %_24, float* %y, align 4
  %_27 = load float, float* %y, align 4
  %_29.0 = load [0 x float]*, [0 x float]** getelementptr inbounds ({ [0 x float]*, i64 }, { [0 x float]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x float]*, i64 }*), i32 0, i32 0), align 8, !nonnull !4
  %_29.1 = load i64, i64* getelementptr inbounds ({ [0 x float]*, i64 }, { [0 x float]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x float]*, i64 }*), i32 0, i32 1), align 8
  %_32 = call i64 @llvm.fptosi.sat.i64.f32(float %_4.1)
  %8 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_32, i64 7)
  %_34.0 = extractvalue { i64, i1 } %8, 0
  %_34.1 = extractvalue { i64, i1 } %8, 1
  %9 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %9, label %panic2, label %bb10

bb10:                                             ; preds = %bb9
  %_36 = icmp ult i64 %_34.0, 15
  %10 = call i1 @llvm.expect.i1(i1 %_36, i1 true)
  br i1 %10, label %bb11, label %panic3

panic2:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1810 to %"core::panic::location::Location"*)) #11
  unreachable

bb11:                                             ; preds = %bb10
  %11 = getelementptr inbounds [0 x float], [0 x float]* %_29.0, i64 0, i64 %_34.0
  %_28 = load float, float* %11, align 4
  %12 = fmul float %_27, %_28
  store float %12, float* %0, align 4
  br label %bb14

panic3:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_34.0, i64 15, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1812 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %13 = fptrunc double %_37 to float
  store float %13, float* %0, align 4
  br label %bb14
}

; libm::math::exp2::exp2
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4exp24exp217h45917a322df4e0d0E(double %0) unnamed_addr #1 {
start:
  %z = alloca double, align 8
  %i0 = alloca i32, align 4
  %_48 = alloca float, align 4
  %_35 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
; call core::f64::<impl f64>::from_bits
  %_3 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4843621399236968448)
  br label %bb1

bb1:                                              ; preds = %start
  %redux = fdiv double %_3, 2.560000e+02
; call core::f64::<impl f64>::from_bits
  %p1 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4604418534313441775)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::f64::<impl f64>::from_bits
  %p2 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4597823092348339573)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::f64::<impl f64>::from_bits
  %p3 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4588159806095007910)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::f64::<impl f64>::from_bits
  %p4 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4576698096145597440)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::f64::<impl f64>::from_bits
  %p5 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4563791841736481908)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::f64::<impl f64>::from_bits
  %x1p1023 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::f64::<impl f64>::from_bits
  %x1p52 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4841369599423283200)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::f64::<impl f64>::from_bits
  %_0x1p_149 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 -5287225962532962304)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_14 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %ui = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_14)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_18.0 = lshr i64 %ui, 32
  br label %bb11

bb11:                                             ; preds = %bb10
  %ix = and i64 %_18.0, 2147483647
  %_19 = icmp uge i64 %ix, 1083174912
  br i1 %_19, label %bb12, label %bb29

bb29:                                             ; preds = %bb11
  %_54 = icmp ult i64 %ix, 1016070144
  br i1 %_54, label %bb30, label %bb31

bb12:                                             ; preds = %bb11
  %_22 = icmp uge i64 %ix, 1083179008
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  store i8 0, i8* %_21, align 1
  br label %bb15

bb14:                                             ; preds = %bb12
  %_27.0 = lshr i64 %ui, 63
  br label %bb16

bb16:                                             ; preds = %bb14
  %_24 = icmp eq i64 %_27.0, 0
  %2 = zext i1 %_24 to i8
  store i8 %2, i8* %_21, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb16
  %3 = load i8, i8* %_21, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb17, label %bb18

bb18:                                             ; preds = %bb15
  %_29 = icmp uge i64 %ix, 2146435072
  br i1 %_29, label %bb19, label %bb20

bb17:                                             ; preds = %bb15
  %5 = load double, double* %x, align 8
  %6 = fmul double %5, %x1p1023
  store double %6, double* %x, align 8
  %7 = load double, double* %x, align 8
  store double %7, double* %1, align 8
  br label %bb46

bb46:                                             ; preds = %bb45, %bb30, %bb28, %bb19, %bb17
  %8 = load double, double* %1, align 8
  ret double %8

bb20:                                             ; preds = %bb18
  %_34.0 = lshr i64 %ui, 63
  br label %bb21

bb19:                                             ; preds = %bb18
  %_31 = load double, double* %x, align 8
  %9 = fdiv double -1.000000e+00, %_31
  store double %9, double* %1, align 8
  br label %bb46

bb21:                                             ; preds = %bb20
  %10 = icmp eq i64 %_34.0, 0
  br i1 %10, label %bb31, label %bb22

bb31:                                             ; preds = %bb29, %bb27, %bb21
  %_59 = load double, double* %x, align 8
  %_58 = fadd double %_59, %redux
; call core::f64::<impl f64>::to_bits
  %ui1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_58)
  br label %bb32

bb22:                                             ; preds = %bb21
  %_37 = load double, double* %x, align 8
  %_36 = fcmp ole double %_37, -1.075000e+03
  br i1 %_36, label %bb23, label %bb24

bb24:                                             ; preds = %bb22
  %_41 = load double, double* %x, align 8
  %_40 = fsub double %_41, %x1p52
  %_39 = fadd double %_40, %x1p52
  %_44 = load double, double* %x, align 8
  %_38 = fcmp une double %_39, %_44
  %11 = zext i1 %_38 to i8
  store i8 %11, i8* %_35, align 1
  br label %bb25

bb23:                                             ; preds = %bb22
  store i8 1, i8* %_35, align 1
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %12 = load i8, i8* %_35, align 1, !range !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb26, label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %_53 = load double, double* %x, align 8
  %_52 = fcmp ole double %_53, -1.075000e+03
  br i1 %_52, label %bb28, label %bb31

bb26:                                             ; preds = %bb25
  %_51 = load double, double* %x, align 8
  %_49 = fdiv double %_0x1p_149, %_51
  %14 = fptrunc double %_49 to float
  store float %14, float* %_48, align 4
; call core::ptr::read_volatile
  %_45 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_48)
  br label %bb27

bb28:                                             ; preds = %bb27
  store double 0.000000e+00, double* %1, align 8
  br label %bb46

bb30:                                             ; preds = %bb29
  %_56 = load double, double* %x, align 8
  %15 = fadd double 1.000000e+00, %_56
  store double %15, double* %1, align 8
  br label %bb46

bb32:                                             ; preds = %bb31
  %16 = trunc i64 %ui1 to i32
  store i32 %16, i32* %i0, align 4
  %_64 = load i32, i32* %i0, align 4
  %17 = add i32 %_64, 128
  br label %bb33

bb33:                                             ; preds = %bb32
  store i32 %17, i32* %i0, align 4
  %_68 = load i32, i32* %i0, align 4
  %_67 = udiv i32 %_68, 256
  %18 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_67, i32 256)
  %_71.0 = extractvalue { i32, i1 } %18, 0
  %_71.1 = extractvalue { i32, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_71.1, i1 false)
  br i1 %19, label %panic, label %bb34

bb34:                                             ; preds = %bb33
  %_77 = icmp eq i32 %_71.0, -2147483648
  %_78 = and i1 false, %_77
  %20 = call i1 @llvm.expect.i1(i1 %_78, i1 false)
  br i1 %20, label %panic2, label %bb35

panic:                                            ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1814 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb34
  %ki = sdiv i32 %_71.0, 256
  %21 = load i32, i32* %i0, align 4
  %22 = urem i32 %21, 256
  store i32 %22, i32* %i0, align 4
; call core::f64::<impl f64>::from_bits
  %_81 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %ui1)
  br label %bb36

panic2:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1816 to %"core::panic::location::Location"*)) #11
  unreachable

bb36:                                             ; preds = %bb35
  %uf = fsub double %_81, %redux
  %_85 = load double, double* %x, align 8
  %23 = fsub double %_85, %uf
  store double %23, double* %z, align 8
  %_96 = load i32, i32* %i0, align 4
  %_95 = zext i32 %_96 to i64
  %24 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_95)
  %_97.0 = extractvalue { i64, i1 } %24, 0
  %_97.1 = extractvalue { i64, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_97.1, i1 false)
  br i1 %25, label %panic3, label %bb37

bb37:                                             ; preds = %bb36
; call core::slice::<impl [T]>::get
  %_90 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7b14170dcefc9181E"([0 x i64]* nonnull align 8 bitcast (<{ [4096 x i8] }>* @_ZN4libm4math4exp23TBL17hcbfd84bbe9a734d0E to [0 x i64]*), i64 512, i64 %_97.0)
  br label %bb38

panic3:                                           ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1818 to %"core::panic::location::Location"*)) #11
  unreachable

bb38:                                             ; preds = %bb37
; call core::option::Option<T>::unwrap
  %_89 = call align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6f09c6a4e0a3de23E"(i64* align 8 dereferenceable_or_null(8) %_90, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1820 to %"core::panic::location::Location"*))
  br label %bb39

bb39:                                             ; preds = %bb38
  %_88 = load i64, i64* %_89, align 8
; call core::f64::<impl f64>::from_bits
  %t = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_88)
  br label %bb40

bb40:                                             ; preds = %bb39
  %_108 = load i32, i32* %i0, align 4
  %_107 = zext i32 %_108 to i64
  %26 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 %_107)
  %_109.0 = extractvalue { i64, i1 } %26, 0
  %_109.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_109.1, i1 false)
  br i1 %27, label %panic4, label %bb41

bb41:                                             ; preds = %bb40
  %28 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_109.0, i64 1)
  %_110.0 = extractvalue { i64, i1 } %28, 0
  %_110.1 = extractvalue { i64, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_110.1, i1 false)
  br i1 %29, label %panic5, label %bb42

panic4:                                           ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1822 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
; call core::slice::<impl [T]>::get
  %_101 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7b14170dcefc9181E"([0 x i64]* nonnull align 8 bitcast (<{ [4096 x i8] }>* @_ZN4libm4math4exp23TBL17hcbfd84bbe9a734d0E to [0 x i64]*), i64 512, i64 %_110.0)
  br label %bb43

panic5:                                           ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1822 to %"core::panic::location::Location"*)) #11
  unreachable

bb43:                                             ; preds = %bb42
; call core::option::Option<T>::unwrap
  %_100 = call align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6f09c6a4e0a3de23E"(i64* align 8 dereferenceable_or_null(8) %_101, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1824 to %"core::panic::location::Location"*))
  br label %bb44

bb44:                                             ; preds = %bb43
  %_99 = load i64, i64* %_100, align 8
; call core::f64::<impl f64>::from_bits
  %_98 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_99)
  br label %bb45

bb45:                                             ; preds = %bb44
  %30 = load double, double* %z, align 8
  %31 = fsub double %30, %_98
  store double %31, double* %z, align 8
  %_116 = load double, double* %z, align 8
  %_114 = fmul double %t, %_116
  %_120 = load double, double* %z, align 8
  %_124 = load double, double* %z, align 8
  %_128 = load double, double* %z, align 8
  %_132 = load double, double* %z, align 8
  %_131 = fmul double %_132, %p5
  %_129 = fadd double %p4, %_131
  %_127 = fmul double %_128, %_129
  %_125 = fadd double %p3, %_127
  %_123 = fmul double %_124, %_125
  %_121 = fadd double %p2, %_123
  %_119 = fmul double %_120, %_121
  %_117 = fadd double %p1, %_119
  %_113 = fmul double %_114, %_117
  %r = fadd double %t, %_113
; call libm::math::scalbn::scalbn
  %32 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %r, i32 %ki)
  store double %32, double* %1, align 8
  br label %bb46
}

; libm::math::exp2f::exp2f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5exp2f5exp2f17ha81cc02b3a0ca05dE(float %0) unnamed_addr #1 {
start:
  %uf = alloca float, align 4
  %i0 = alloca i32, align 4
  %_35 = alloca float, align 4
  %_26 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %_3 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1262485504)
  br label %bb1

bb1:                                              ; preds = %start
  %redux = fdiv float %_3, 1.600000e+01
; call core::f32::<impl f32>::from_bits
  %p1 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1060205080)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::f32::<impl f32>::from_bits
  %p2 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1047920112)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::f32::<impl f32>::from_bits
  %p3 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1029921188)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::f32::<impl f32>::from_bits
  %p4 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1008571982)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::f32::<impl f32>::from_bits
  %x1p127 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2130706432)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_11 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %ui = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_11)
  br label %bb7

bb7:                                              ; preds = %bb6
  %ix = and i32 %ui, 2147483647
  %_14 = icmp ugt i32 %ix, 1123811328
  br i1 %_14, label %bb8, label %bb24

bb24:                                             ; preds = %bb7
  %_40 = icmp ule i32 %ix, 855638016
  br i1 %_40, label %bb25, label %bb26

bb8:                                              ; preds = %bb7
  %_16 = icmp ugt i32 %ix, 2139095040
  br i1 %_16, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %_19 = icmp uge i32 %ui, 1124073472
  br i1 %_19, label %bb12, label %bb11

bb9:                                              ; preds = %bb8
  %2 = load float, float* %x, align 4
  store float %2, float* %1, align 4
  br label %bb36

bb36:                                             ; preds = %bb35, %bb25, %bb23, %bb14, %bb9
  %3 = load float, float* %1, align 4
  ret float %3

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_18, align 1
  br label %bb13

bb12:                                             ; preds = %bb10
  %_21 = icmp ult i32 %ui, -2147483648
  %4 = zext i1 %_21 to i8
  store i8 %4, i8* %_18, align 1
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %5 = load i8, i8* %_18, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %_24 = icmp uge i32 %ui, -2147483648
  br i1 %_24, label %bb16, label %bb26

bb14:                                             ; preds = %bb13
  %7 = load float, float* %x, align 4
  %8 = fmul float %7, %x1p127
  store float %8, float* %x, align 4
  %9 = load float, float* %x, align 4
  store float %9, float* %1, align 4
  br label %bb36

bb26:                                             ; preds = %bb24, %bb22, %bb15
  %_45 = load float, float* %x, align 4
  %_44 = fadd float %_45, %redux
; call core::f32::<impl f32>::to_bits
  %ui1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_44)
  br label %bb27

bb16:                                             ; preds = %bb15
  %_27 = icmp uge i32 %ui, -1021968384
  br i1 %_27, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %_30 = and i32 %ui, 65535
  %_29 = icmp ne i32 %_30, 0
  %10 = zext i1 %_29 to i8
  store i8 %10, i8* %_26, align 1
  br label %bb19

bb17:                                             ; preds = %bb16
  store i8 1, i8* %_26, align 1
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %11 = load i8, i8* %_26, align 1, !range !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb20, label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_38 = icmp uge i32 %ui, -1021968384
  br i1 %_38, label %bb23, label %bb26

bb20:                                             ; preds = %bb19
; call core::f32::<impl f32>::from_bits
  %_36 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 -2147483647)
  br label %bb21

bb21:                                             ; preds = %bb20
  %_37 = load float, float* %x, align 4
  %13 = fdiv float %_36, %_37
  store float %13, float* %_35, align 4
; call core::ptr::read_volatile
  %_32 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_35)
  br label %bb22

bb23:                                             ; preds = %bb22
  store float 0.000000e+00, float* %1, align 4
  br label %bb36

bb25:                                             ; preds = %bb24
  %_42 = load float, float* %x, align 4
  %14 = fadd float 1.000000e+00, %_42
  store float %14, float* %1, align 4
  br label %bb36

bb27:                                             ; preds = %bb26
  store i32 %ui1, i32* %i0, align 4
  %15 = load i32, i32* %i0, align 4
  %16 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %15, i32 8)
  %_49.0 = extractvalue { i32, i1 } %16, 0
  %_49.1 = extractvalue { i32, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %17, label %panic, label %bb28

bb28:                                             ; preds = %bb27
  store i32 %_49.0, i32* %i0, align 4
  %_51 = load i32, i32* %i0, align 4
  %k = udiv i32 %_51, 16
  %18 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 1023, i32 %k)
  %_58.0 = extractvalue { i32, i1 } %18, 0
  %_58.1 = extractvalue { i32, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %19, label %panic2, label %bb29

panic:                                            ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1826 to %"core::panic::location::Location"*)) #11
  unreachable

bb29:                                             ; preds = %bb28
  %_55 = zext i32 %_58.0 to i64
  %_59.0 = shl i64 %_55, 52
  br label %bb30

panic2:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1828 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
; call core::f64::<impl f64>::from_bits
  %ukf = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_59.0)
  br label %bb31

bb31:                                             ; preds = %bb30
  %20 = load i32, i32* %i0, align 4
  %21 = and i32 %20, 15
  store i32 %21, i32* %i0, align 4
; call core::f32::<impl f32>::from_bits
  %22 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %ui1)
  store float %22, float* %uf, align 4
  br label %bb32

bb32:                                             ; preds = %bb31
  %23 = load float, float* %uf, align 4
  %24 = fsub float %23, %redux
  store float %24, float* %uf, align 4
  %_66 = load float, float* %x, align 4
  %_67 = load float, float* %uf, align 4
  %_65 = fsub float %_66, %_67
  %z = fpext float %_65 to double
  %_76 = load i32, i32* %i0, align 4
  %_75 = zext i32 %_76 to i64
; call core::slice::<impl [T]>::get
  %_71 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7b14170dcefc9181E"([0 x i64]* nonnull align 8 bitcast (<{ [128 x i8] }>* @_ZN4libm4math5exp2f6EXP2FT17h6e9901433b232025E to [0 x i64]*), i64 16, i64 %_75)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::option::Option<T>::unwrap
  %_70 = call align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6f09c6a4e0a3de23E"(i64* align 8 dereferenceable_or_null(8) %_71, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1830 to %"core::panic::location::Location"*))
  br label %bb34

bb34:                                             ; preds = %bb33
  %_69 = load i64, i64* %_70, align 8
; call core::f64::<impl f64>::from_bits
  %r = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_69)
  br label %bb35

bb35:                                             ; preds = %bb34
  %t = fmul double %r, %z
  %_86 = fpext float %p1 to double
  %_90 = fpext float %p2 to double
  %_88 = fmul double %z, %_90
  %_85 = fadd double %_86, %_88
  %_83 = fmul double %t, %_85
  %_81 = fadd double %r, %_83
  %_95 = fmul double %z, %z
  %_93 = fmul double %t, %_95
  %_99 = fpext float %p3 to double
  %_103 = fpext float %p4 to double
  %_101 = fmul double %z, %_103
  %_98 = fadd double %_99, %_101
  %_92 = fmul double %_93, %_98
  %r3 = fadd double %_81, %_92
  %_105 = fmul double %r3, %ukf
  %25 = fptrunc double %_105 to float
  store float %25, float* %1, align 4
  br label %bb36
}

; libm::math::expf::expf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4expf4expf17h08ae0fc239dada56E(float %0) unnamed_addr #1 {
start:
  %_68 = alloca float, align 4
  %lo = alloca float, align 4
  %hi = alloca float, align 4
  %k = alloca i32, align 4
  %_26 = alloca float, align 4
  %_16 = alloca i8, align 1
  %hx = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p127 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2130706432)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::from_bits
  %x1p_126 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 8388608)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_5)
  store i32 %2, i32* %hx, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = load i32, i32* %hx, align 4
  %_9.0 = lshr i32 %_8, 31
  br label %bb4

bb4:                                              ; preds = %bb3
  %signb = icmp ne i32 %_9.0, 0
  %3 = load i32, i32* %hx, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %hx, align 4
  %_13 = load i32, i32* %hx, align 4
  %_12 = icmp uge i32 %_13, 1118743632
  br i1 %_12, label %bb5, label %bb16

bb16:                                             ; preds = %bb14, %bb12, %bb4
  %_36 = load i32, i32* %hx, align 4
  %_35 = icmp ugt i32 %_36, 1051816472
  br i1 %_35, label %bb17, label %bb25

bb5:                                              ; preds = %bb4
  %_15 = load i32, i32* %hx, align 4
  %_14 = icmp ugt i32 %_15, 2139095040
  br i1 %_14, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_18 = load i32, i32* %hx, align 4
  %_17 = icmp uge i32 %_18, 1118925336
  br i1 %_17, label %bb9, label %bb8

bb6:                                              ; preds = %bb5
  %5 = load float, float* %x, align 4
  store float %5, float* %1, align 4
  br label %bb32

bb32:                                             ; preds = %bb28, %bb30, %bb31, %bb15, %bb11, %bb6
  %6 = load float, float* %1, align 4
  ret float %6

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_16, align 1
  br label %bb10

bb9:                                              ; preds = %bb7
  %_19 = xor i1 %signb, true
  %7 = zext i1 %_19 to i8
  store i8 %7, i8* %_16, align 1
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %8 = load i8, i8* %_16, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br i1 %signb, label %bb13, label %bb16

bb11:                                             ; preds = %bb10
  %10 = load float, float* %x, align 4
  %11 = fmul float %10, %x1p127
  store float %11, float* %x, align 4
  %12 = load float, float* %x, align 4
  store float %12, float* %1, align 4
  br label %bb32

bb13:                                             ; preds = %bb12
  %_27 = fneg float %x1p_126
  %_29 = load float, float* %x, align 4
  %13 = fdiv float %_27, %_29
  store float %13, float* %_26, align 4
; call core::ptr::read_volatile
  %_23 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_26)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_31 = load i32, i32* %hx, align 4
  %_30 = icmp uge i32 %_31, 1120924085
  br i1 %_30, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  store float 0.000000e+00, float* %1, align 4
  br label %bb32

bb25:                                             ; preds = %bb16
  %_63 = load i32, i32* %hx, align 4
  %_62 = icmp ugt i32 %_63, 956301312
  br i1 %_62, label %bb26, label %bb27

bb17:                                             ; preds = %bb16
  %_38 = load i32, i32* %hx, align 4
  %_37 = icmp ugt i32 %_38, 1065686418
  br i1 %_37, label %bb18, label %bb21

bb21:                                             ; preds = %bb17
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1, i32 %_9.0)
  %_51.0 = extractvalue { i32, i1 } %14, 0
  %_51.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false)
  br i1 %15, label %panic, label %bb22

bb18:                                             ; preds = %bb17
  %_41 = load float, float* %x, align 4
  %_40 = fmul float 0x3FF7154760000000, %_41
  %_47 = sext i32 %_9.0 to i64
; call core::slice::<impl [T]>::get
  %_44 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1054 to [0 x float]*), i64 2, i64 %_47)
  br label %bb19

bb19:                                             ; preds = %bb18
; call core::option::Option<T>::unwrap
  %_43 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_44, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1832 to %"core::panic::location::Location"*))
  br label %bb20

bb20:                                             ; preds = %bb19
  %_42 = load float, float* %_43, align 4
  %_39 = fadd float %_40, %_42
  %16 = call i32 @llvm.fptosi.sat.i32.f32(float %_39)
  store i32 %16, i32* %k, align 4
  br label %bb24

bb24:                                             ; preds = %bb23, %bb20
  %_55 = load i32, i32* %k, align 4
  %kf = sitofp i32 %_55 to float
  %_56 = load float, float* %x, align 4
  %_57 = fmul float %kf, 0x3FE62E4000000000
  %17 = fsub float %_56, %_57
  store float %17, float* %hi, align 4
  %18 = fmul float %kf, 0x3EB7F7D1C0000000
  store float %18, float* %lo, align 4
  %_60 = load float, float* %hi, align 4
  %_61 = load float, float* %lo, align 4
  %19 = fsub float %_60, %_61
  store float %19, float* %x, align 4
  br label %bb29

bb22:                                             ; preds = %bb21
  %20 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_51.0, i32 %_9.0)
  %_53.0 = extractvalue { i32, i1 } %20, 0
  %_53.1 = extractvalue { i32, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false)
  br i1 %21, label %panic1, label %bb23

panic:                                            ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1834 to %"core::panic::location::Location"*)) #11
  unreachable

bb23:                                             ; preds = %bb22
  store i32 %_53.0, i32* %k, align 4
  br label %bb24

panic1:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1834 to %"core::panic::location::Location"*)) #11
  unreachable

bb29:                                             ; preds = %bb26, %bb24
  %_73 = load float, float* %x, align 4
  %_74 = load float, float* %x, align 4
  %xx = fmul float %_73, %_74
  %_76 = load float, float* %x, align 4
  %_80 = fmul float %xx, 0xBF66AA42A0000000
  %_79 = fadd float 0x3FC55551E0000000, %_80
  %_77 = fmul float %xx, %_79
  %c = fsub float %_76, %_77
  %_87 = load float, float* %x, align 4
  %_86 = fmul float %_87, %c
  %_89 = fsub float 2.000000e+00, %c
  %_85 = fdiv float %_86, %_89
  %_91 = load float, float* %lo, align 4
  %_84 = fsub float %_85, %_91
  %_92 = load float, float* %hi, align 4
  %_83 = fadd float %_84, %_92
  %y = fadd float 1.000000e+00, %_83
  %_93 = load i32, i32* %k, align 4
  %22 = icmp eq i32 %_93, 0
  br i1 %22, label %bb30, label %bb31

bb27:                                             ; preds = %bb25
  %_70 = load float, float* %x, align 4
  %23 = fadd float %x1p127, %_70
  store float %23, float* %_68, align 4
; call core::ptr::read_volatile
  %_65 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_68)
  br label %bb28

bb26:                                             ; preds = %bb25
  store i32 0, i32* %k, align 4
  %_64 = load float, float* %x, align 4
  store float %_64, float* %hi, align 4
  store float 0.000000e+00, float* %lo, align 4
  br label %bb29

bb30:                                             ; preds = %bb29
  store float %y, float* %1, align 4
  br label %bb32

bb31:                                             ; preds = %bb29
  %_95 = load i32, i32* %k, align 4
; call libm::math::scalbnf::scalbnf
  %24 = call float @_ZN4libm4math7scalbnf7scalbnf17h465599e40fffdd16E(float %y, i32 %_95)
  store float %24, float* %1, align 4
  br label %bb32

bb28:                                             ; preds = %bb27
  %_71 = load float, float* %x, align 4
  %25 = fadd float 1.000000e+00, %_71
  store float %25, float* %1, align 4
  br label %bb32
}

; libm::math::expm1::expm1
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %0) unnamed_addr #1 {
start:
  %_127 = alloca i8, align 1
  %e = alloca double, align 8
  %_37 = alloca double, align 8
  %ui = alloca i64, align 8
  %y = alloca double, align 8
  %t = alloca double, align 8
  %c = alloca double, align 8
  %k = alloca i32, align 4
  %lo = alloca double, align 8
  %hi = alloca double, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_9 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_9)
  store i64 %2, i64* %ui, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_13 = load i64, i64* %ui, align 8
  %_14.0 = lshr i64 %_13, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = and i64 %_14.0, 2147483647
  %hx = trunc i64 %_11 to i32
  %_17 = load i64, i64* %ui, align 8
  %_18.0 = lshr i64 %_17, 63
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = trunc i64 %_18.0 to i32
  %_19 = icmp uge i32 %hx, 1078159482
  br i1 %_19, label %bb4, label %bb12

bb12:                                             ; preds = %bb9, %bb3
  %_27 = icmp ugt i32 %hx, 1071001154
  br i1 %_27, label %bb13, label %bb22

bb4:                                              ; preds = %bb3
  %_22 = load double, double* %x, align 8
; call core::f64::<impl f64>::is_nan
  %_21 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %_22)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_21, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %3 = icmp eq i32 %sign, 0
  br i1 %3, label %bb9, label %bb8

bb6:                                              ; preds = %bb5
  %4 = load double, double* %x, align 8
  store double %4, double* %1, align 8
  br label %bb54

bb54:                                             ; preds = %bb28, %bb30, %bb35, %bb34, %bb53, %bb46, %bb25, %bb11, %bb8, %bb6
  %5 = load double, double* %1, align 8
  ret double %5

bb9:                                              ; preds = %bb7
  %_25 = load double, double* %x, align 8
  %_24 = fcmp ogt double %_25, 0x40862E42FEFA39EF
  br i1 %_24, label %bb10, label %bb12

bb8:                                              ; preds = %bb7
  store double -1.000000e+00, double* %1, align 8
  br label %bb54

bb10:                                             ; preds = %bb9
; call core::f64::<impl f64>::from_bits
  %_26 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb11

bb11:                                             ; preds = %bb10
  %6 = load double, double* %x, align 8
  %7 = fmul double %6, %_26
  store double %7, double* %x, align 8
  %8 = load double, double* %x, align 8
  store double %8, double* %1, align 8
  br label %bb54

bb22:                                             ; preds = %bb12
  %_50 = icmp ult i32 %hx, 1016070144
  br i1 %_50, label %bb23, label %bb26

bb13:                                             ; preds = %bb12
  %_29 = icmp ult i32 %hx, 1072734898
  br i1 %_29, label %bb14, label %bb17

bb17:                                             ; preds = %bb13
  %_36 = load double, double* %x, align 8
  %_35 = fmul double 0x3FF71547652B82FE, %_36
  %9 = icmp eq i32 %sign, 0
  br i1 %9, label %bb19, label %bb18

bb14:                                             ; preds = %bb13
  %10 = icmp eq i32 %sign, 0
  br i1 %10, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %_32 = load double, double* %x, align 8
  %11 = fsub double %_32, 0x3FE62E42FEE00000
  store double %11, double* %hi, align 8
  store double 0x3DEA39EF35793C76, double* %lo, align 8
  store i32 1, i32* %k, align 4
  br label %bb21

bb16:                                             ; preds = %bb14
  %_33 = load double, double* %x, align 8
  %12 = fadd double %_33, 0x3FE62E42FEE00000
  store double %12, double* %hi, align 8
  store double 0xBDEA39EF35793C76, double* %lo, align 8
  store i32 -1, i32* %k, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb15, %bb16
  %_44 = load double, double* %hi, align 8
  %_45 = load double, double* %lo, align 8
  %13 = fsub double %_44, %_45
  store double %13, double* %x, align 8
  %_47 = load double, double* %hi, align 8
  %_48 = load double, double* %x, align 8
  %_46 = fsub double %_47, %_48
  %_49 = load double, double* %lo, align 8
  %14 = fsub double %_46, %_49
  store double %14, double* %c, align 8
  br label %bb27

bb19:                                             ; preds = %bb17
  store double 5.000000e-01, double* %_37, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  store double -5.000000e-01, double* %_37, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %15 = load double, double* %_37, align 8
  %_34 = fadd double %_35, %15
  %16 = call i32 @llvm.fptosi.sat.i32.f64(double %_34)
  store i32 %16, i32* %k, align 4
  %_39 = load i32, i32* %k, align 4
  %17 = sitofp i32 %_39 to double
  store double %17, double* %t, align 8
  %_40 = load double, double* %x, align 8
  %_42 = load double, double* %t, align 8
  %_41 = fmul double %_42, 0x3FE62E42FEE00000
  %18 = fsub double %_40, %_41
  store double %18, double* %hi, align 8
  %_43 = load double, double* %t, align 8
  %19 = fmul double %_43, 0x3DEA39EF35793C76
  store double %19, double* %lo, align 8
  br label %bb21

bb27:                                             ; preds = %bb26, %bb21
  %_58 = load double, double* %x, align 8
  %hfx = fmul double 5.000000e-01, %_58
  %_60 = load double, double* %x, align 8
  %hxs = fmul double %_60, %hfx
  %_75 = fmul double %hxs, 0xBE8AFDB76E09C32D
  %_74 = fadd double 0x3ED0CFCA86E65239, %_75
  %_72 = fmul double %hxs, %_74
  %_71 = fadd double 0xBF14CE199EAADBB7, %_72
  %_69 = fmul double %hxs, %_71
  %_68 = fadd double 0x3F5A01A019FE5585, %_69
  %_66 = fmul double %hxs, %_68
  %_65 = fadd double 0xBFA11111111110F4, %_66
  %_63 = fmul double %hxs, %_65
  %r1 = fadd double 1.000000e+00, %_63
  %_77 = fmul double %r1, %hfx
  %20 = fsub double 3.000000e+00, %_77
  store double %20, double* %t, align 8
  %_85 = load double, double* %t, align 8
  %_83 = fsub double %r1, %_85
  %_88 = load double, double* %x, align 8
  %_89 = load double, double* %t, align 8
  %_87 = fmul double %_88, %_89
  %_86 = fsub double 6.000000e+00, %_87
  %_82 = fdiv double %_83, %_86
  %21 = fmul double %hxs, %_82
  store double %21, double* %e, align 8
  %_90 = load i32, i32* %k, align 4
  %22 = icmp eq i32 %_90, 0
  br i1 %22, label %bb28, label %bb29

bb26:                                             ; preds = %bb22
  store double 0.000000e+00, double* %c, align 8
  store i32 0, i32* %k, align 4
  br label %bb27

bb23:                                             ; preds = %bb22
  %_52 = icmp ult i32 %hx, 1048576
  br i1 %_52, label %bb24, label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %23 = load double, double* %x, align 8
  store double %23, double* %1, align 8
  br label %bb54

bb24:                                             ; preds = %bb23
; call core::ptr::read_volatile
  %_54 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %x)
  br label %bb25

bb28:                                             ; preds = %bb27
  %_91 = load double, double* %x, align 8
  %_94 = load double, double* %x, align 8
  %_95 = load double, double* %e, align 8
  %_93 = fmul double %_94, %_95
  %_92 = fsub double %_93, %hxs
  %24 = fsub double %_91, %_92
  store double %24, double* %1, align 8
  br label %bb54

bb29:                                             ; preds = %bb27
  %_98 = load double, double* %x, align 8
  %_100 = load double, double* %e, align 8
  %_101 = load double, double* %c, align 8
  %_99 = fsub double %_100, %_101
  %_97 = fmul double %_98, %_99
  %_102 = load double, double* %c, align 8
  %25 = fsub double %_97, %_102
  store double %25, double* %e, align 8
  %26 = load double, double* %e, align 8
  %27 = fsub double %26, %hxs
  store double %27, double* %e, align 8
  %_104 = load i32, i32* %k, align 4
  %28 = icmp eq i32 %_104, -1
  br i1 %28, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %_107 = load double, double* %x, align 8
  %_108 = load double, double* %e, align 8
  %_106 = fsub double %_107, %_108
  %_105 = fmul double 5.000000e-01, %_106
  %29 = fsub double %_105, 5.000000e-01
  store double %29, double* %1, align 8
  br label %bb54

bb31:                                             ; preds = %bb29
  %_109 = load i32, i32* %k, align 4
  %30 = icmp eq i32 %_109, 1
  br i1 %30, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %_111 = load double, double* %x, align 8
  %_110 = fcmp olt double %_111, -2.500000e-01
  br i1 %_110, label %bb34, label %bb35

bb33:                                             ; preds = %bb31
  %_122 = load i32, i32* %k, align 4
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 1023, i32 %_122)
  %_123.0 = extractvalue { i32, i1 } %31, 0
  %_123.1 = extractvalue { i32, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_123.1, i1 false)
  br i1 %32, label %panic, label %bb36

bb36:                                             ; preds = %bb33
  %_120 = sext i32 %_123.0 to i64
  %_124.0 = shl i64 %_120, 52
  br label %bb37

panic:                                            ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1836 to %"core::panic::location::Location"*)) #11
  unreachable

bb37:                                             ; preds = %bb36
  store i64 %_124.0, i64* %ui, align 8
  %_126 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %twopk = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_126)
  br label %bb38

bb38:                                             ; preds = %bb37
  %_129 = load i32, i32* %k, align 4
  %_128 = icmp slt i32 %_129, 0
  br i1 %_128, label %bb39, label %bb40

bb40:                                             ; preds = %bb38
  %_131 = load i32, i32* %k, align 4
  %_130 = icmp sgt i32 %_131, 56
  %33 = zext i1 %_130 to i8
  store i8 %33, i8* %_127, align 1
  br label %bb41

bb39:                                             ; preds = %bb38
  store i8 1, i8* %_127, align 1
  br label %bb41

bb41:                                             ; preds = %bb40, %bb39
  %34 = load i8, i8* %_127, align 1, !range !3
  %35 = trunc i8 %34 to i1
  br i1 %35, label %bb42, label %bb47

bb47:                                             ; preds = %bb41
  %_144 = load i32, i32* %k, align 4
  %36 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1023, i32 %_144)
  %_145.0 = extractvalue { i32, i1 } %36, 0
  %_145.1 = extractvalue { i32, i1 } %36, 1
  %37 = call i1 @llvm.expect.i1(i1 %_145.1, i1 false)
  br i1 %37, label %panic1, label %bb48

bb42:                                             ; preds = %bb41
  %_133 = load double, double* %x, align 8
  %_134 = load double, double* %e, align 8
  %_132 = fsub double %_133, %_134
  %38 = fadd double %_132, 1.000000e+00
  store double %38, double* %y, align 8
  %_135 = load i32, i32* %k, align 4
  %39 = icmp eq i32 %_135, 1024
  br i1 %39, label %bb43, label %bb45

bb43:                                             ; preds = %bb42
  %_137 = load double, double* %y, align 8
  %_136 = fmul double %_137, 2.000000e+00
; call core::f64::<impl f64>::from_bits
  %_138 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb44

bb45:                                             ; preds = %bb42
  %_139 = load double, double* %y, align 8
  %40 = fmul double %_139, %twopk
  store double %40, double* %y, align 8
  br label %bb46

bb46:                                             ; preds = %bb44, %bb45
  %_141 = load double, double* %y, align 8
  %41 = fsub double %_141, 1.000000e+00
  store double %41, double* %1, align 8
  br label %bb54

bb44:                                             ; preds = %bb43
  %42 = fmul double %_136, %_138
  store double %42, double* %y, align 8
  br label %bb46

bb48:                                             ; preds = %bb47
  %_142 = sext i32 %_145.0 to i64
  %_146.0 = shl i64 %_142, 52
  br label %bb49

panic1:                                           ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1838 to %"core::panic::location::Location"*)) #11
  unreachable

bb49:                                             ; preds = %bb48
  store i64 %_146.0, i64* %ui, align 8
  %_148 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %uf = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_148)
  br label %bb50

bb50:                                             ; preds = %bb49
  %_150 = load i32, i32* %k, align 4
  %_149 = icmp slt i32 %_150, 20
  br i1 %_149, label %bb51, label %bb52

bb52:                                             ; preds = %bb50
  %_160 = load double, double* %x, align 8
  %_162 = load double, double* %e, align 8
  %_161 = fadd double %_162, %uf
  %_159 = fsub double %_160, %_161
  %_158 = fadd double %_159, 1.000000e+00
  %43 = fmul double %_158, %twopk
  store double %43, double* %y, align 8
  br label %bb53

bb51:                                             ; preds = %bb50
  %_153 = load double, double* %x, align 8
  %_154 = load double, double* %e, align 8
  %_152 = fsub double %_153, %_154
  %_155 = fsub double 1.000000e+00, %uf
  %_151 = fadd double %_152, %_155
  %44 = fmul double %_151, %twopk
  store double %44, double* %y, align 8
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %45 = load double, double* %y, align 8
  store double %45, double* %1, align 8
  br label %bb54

bb35:                                             ; preds = %bb32
  %_118 = load double, double* %x, align 8
  %_119 = load double, double* %e, align 8
  %_117 = fsub double %_118, %_119
  %_116 = fmul double 2.000000e+00, %_117
  %46 = fadd double 1.000000e+00, %_116
  store double %46, double* %1, align 8
  br label %bb54

bb34:                                             ; preds = %bb32
  %_113 = load double, double* %e, align 8
  %_115 = load double, double* %x, align 8
  %_114 = fadd double %_115, 5.000000e-01
  %_112 = fsub double %_113, %_114
  %47 = fmul double -2.000000e+00, %_112
  store double %47, double* %1, align 8
  br label %bb54
}

; libm::math::expm1f::expm1f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %0) unnamed_addr #1 {
start:
  %y = alloca float, align 4
  %_118 = alloca i8, align 1
  %e = alloca float, align 4
  %_53 = alloca float, align 4
  %_32 = alloca float, align 4
  %c = alloca float, align 4
  %lo = alloca float, align 4
  %hi = alloca float, align 4
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p127 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2130706432)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  store i32 %2, i32* %hx, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = load i32, i32* %hx, align 4
  %_8.0 = lshr i32 %_7, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i32 %_8.0, 0
  %3 = load i32, i32* %hx, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %hx, align 4
  %_10 = load i32, i32* %hx, align 4
  %_9 = icmp uge i32 %_10, 1100331076
  br i1 %_9, label %bb4, label %bb10

bb10:                                             ; preds = %bb8, %bb3
  store float 0.000000e+00, float* %c, align 4
  %_22 = load i32, i32* %hx, align 4
  %_21 = icmp ugt i32 %_22, 1051816472
  br i1 %_21, label %bb11, label %bb20

bb4:                                              ; preds = %bb3
  %_12 = load i32, i32* %hx, align 4
  %_11 = icmp ugt i32 %_12, 2139095040
  br i1 %_11, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br i1 %sign, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %5 = load float, float* %x, align 4
  store float %5, float* %1, align 4
  br label %bb50

bb50:                                             ; preds = %bb26, %bb28, %bb33, %bb32, %bb49, %bb48, %bb43, %bb23, %bb9, %bb7, %bb5
  %6 = load float, float* %1, align 4
  ret float %6

bb8:                                              ; preds = %bb6
  %_15 = load float, float* %x, align 4
  %_14 = fcmp ogt float %_15, 0x40562E3000000000
  br i1 %_14, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  store float -1.000000e+00, float* %1, align 4
  br label %bb50

bb9:                                              ; preds = %bb8
  %7 = load float, float* %x, align 4
  %8 = fmul float %7, %x1p127
  store float %8, float* %x, align 4
  %9 = load float, float* %x, align 4
  store float %9, float* %1, align 4
  br label %bb50

bb20:                                             ; preds = %bb10
  %_47 = load i32, i32* %hx, align 4
  %_46 = icmp ult i32 %_47, 855638016
  br i1 %_46, label %bb21, label %bb24

bb11:                                             ; preds = %bb10
  %_24 = load i32, i32* %hx, align 4
  %_23 = icmp ult i32 %_24, 1065686418
  br i1 %_23, label %bb12, label %bb15

bb15:                                             ; preds = %bb11
  %_31 = load float, float* %x, align 4
  %_30 = fmul float 0x3FF7154760000000, %_31
  br i1 %sign, label %bb16, label %bb17

bb12:                                             ; preds = %bb11
  %_25 = xor i1 %sign, true
  br i1 %_25, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %_28 = load float, float* %x, align 4
  %10 = fadd float %_28, 0x3FE62E3000000000
  store float %10, float* %hi, align 4
  store float 0xBEE2FEFA20000000, float* %lo, align 4
  store i32 -1, i32* %k, align 4
  br label %bb19

bb13:                                             ; preds = %bb12
  %_27 = load float, float* %x, align 4
  %11 = fsub float %_27, 0x3FE62E3000000000
  store float %11, float* %hi, align 4
  store float 0x3EE2FEFA20000000, float* %lo, align 4
  store i32 1, i32* %k, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb14, %bb13
  %_40 = load float, float* %hi, align 4
  %_41 = load float, float* %lo, align 4
  %12 = fsub float %_40, %_41
  store float %12, float* %x, align 4
  %_43 = load float, float* %hi, align 4
  %_44 = load float, float* %x, align 4
  %_42 = fsub float %_43, %_44
  %_45 = load float, float* %lo, align 4
  %13 = fsub float %_42, %_45
  store float %13, float* %c, align 4
  br label %bb25

bb17:                                             ; preds = %bb15
  store float 5.000000e-01, float* %_32, align 4
  br label %bb18

bb16:                                             ; preds = %bb15
  store float -5.000000e-01, float* %_32, align 4
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16
  %14 = load float, float* %_32, align 4
  %_29 = fadd float %_30, %14
  %15 = call i32 @llvm.fptosi.sat.i32.f32(float %_29)
  store i32 %15, i32* %k, align 4
  %_35 = load i32, i32* %k, align 4
  %t = sitofp i32 %_35 to float
  %_36 = load float, float* %x, align 4
  %_37 = fmul float %t, 0x3FE62E3000000000
  %16 = fsub float %_36, %_37
  store float %16, float* %hi, align 4
  %17 = fmul float %t, 0x3EE2FEFA20000000
  store float %17, float* %lo, align 4
  br label %bb19

bb25:                                             ; preds = %bb24, %bb19
  %_57 = load float, float* %x, align 4
  %hfx = fmul float 5.000000e-01, %_57
  %_59 = load float, float* %x, align 4
  %hxs = fmul float %_59, %hfx
  %_65 = fmul float %hxs, 0x3F59E60200000000
  %_64 = fadd float 0xBFA1110D00000000, %_65
  %_62 = fmul float %hxs, %_64
  %r1 = fadd float 1.000000e+00, %_62
  %_68 = fmul float %r1, %hfx
  %t1 = fsub float 3.000000e+00, %_68
  %_74 = fsub float %r1, %t1
  %_79 = load float, float* %x, align 4
  %_78 = fmul float %_79, %t1
  %_77 = fsub float 6.000000e+00, %_78
  %_73 = fdiv float %_74, %_77
  %18 = fmul float %hxs, %_73
  store float %18, float* %e, align 4
  %_81 = load i32, i32* %k, align 4
  %19 = icmp eq i32 %_81, 0
  br i1 %19, label %bb26, label %bb27

bb24:                                             ; preds = %bb20
  store i32 0, i32* %k, align 4
  br label %bb25

bb21:                                             ; preds = %bb20
  %_49 = load i32, i32* %hx, align 4
  %_48 = icmp ult i32 %_49, 8388608
  br i1 %_48, label %bb22, label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %20 = load float, float* %x, align 4
  store float %20, float* %1, align 4
  br label %bb50

bb22:                                             ; preds = %bb21
  %_54 = load float, float* %x, align 4
  %_55 = load float, float* %x, align 4
  %21 = fmul float %_54, %_55
  store float %21, float* %_53, align 4
; call core::ptr::read_volatile
  %_50 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_53)
  br label %bb23

bb26:                                             ; preds = %bb25
  %_82 = load float, float* %x, align 4
  %_85 = load float, float* %x, align 4
  %_86 = load float, float* %e, align 4
  %_84 = fmul float %_85, %_86
  %_83 = fsub float %_84, %hxs
  %22 = fsub float %_82, %_83
  store float %22, float* %1, align 4
  br label %bb50

bb27:                                             ; preds = %bb25
  %_89 = load float, float* %x, align 4
  %_91 = load float, float* %e, align 4
  %_92 = load float, float* %c, align 4
  %_90 = fsub float %_91, %_92
  %_88 = fmul float %_89, %_90
  %_93 = load float, float* %c, align 4
  %23 = fsub float %_88, %_93
  store float %23, float* %e, align 4
  %24 = load float, float* %e, align 4
  %25 = fsub float %24, %hxs
  store float %25, float* %e, align 4
  %_95 = load i32, i32* %k, align 4
  %26 = icmp eq i32 %_95, -1
  br i1 %26, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %_98 = load float, float* %x, align 4
  %_99 = load float, float* %e, align 4
  %_97 = fsub float %_98, %_99
  %_96 = fmul float 5.000000e-01, %_97
  %27 = fsub float %_96, 5.000000e-01
  store float %27, float* %1, align 4
  br label %bb50

bb29:                                             ; preds = %bb27
  %_100 = load i32, i32* %k, align 4
  %28 = icmp eq i32 %_100, 1
  br i1 %28, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %_102 = load float, float* %x, align 4
  %_101 = fcmp olt float %_102, -2.500000e-01
  br i1 %_101, label %bb32, label %bb33

bb31:                                             ; preds = %bb29
  %_115 = load i32, i32* %k, align 4
  %29 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 127, i32 %_115)
  %_116.0 = extractvalue { i32, i1 } %29, 0
  %_116.1 = extractvalue { i32, i1 } %29, 1
  %30 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false)
  br i1 %30, label %panic, label %bb34

bb34:                                             ; preds = %bb31
  %_117.0 = shl i32 %_116.0, 23
  br label %bb35

panic:                                            ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1840 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb34
; call core::f32::<impl f32>::from_bits
  %twopk = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_117.0)
  br label %bb36

bb36:                                             ; preds = %bb35
  %_120 = load i32, i32* %k, align 4
  %_119 = icmp slt i32 %_120, 0
  br i1 %_119, label %bb37, label %bb38

bb38:                                             ; preds = %bb36
  %_122 = load i32, i32* %k, align 4
  %_121 = icmp sgt i32 %_122, 56
  %31 = zext i1 %_121 to i8
  store i8 %31, i8* %_118, align 1
  br label %bb39

bb37:                                             ; preds = %bb36
  store i8 1, i8* %_118, align 1
  br label %bb39

bb39:                                             ; preds = %bb38, %bb37
  %32 = load i8, i8* %_118, align 1, !range !3
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb40, label %bb44

bb44:                                             ; preds = %bb39
  %_138 = load i32, i32* %k, align 4
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 127, i32 %_138)
  %_139.0 = extractvalue { i32, i1 } %34, 0
  %_139.1 = extractvalue { i32, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_139.1, i1 false)
  br i1 %35, label %panic2, label %bb45

bb40:                                             ; preds = %bb39
  %_125 = load float, float* %x, align 4
  %_126 = load float, float* %e, align 4
  %_124 = fsub float %_125, %_126
  %36 = fadd float %_124, 1.000000e+00
  store float %36, float* %y, align 4
  %_127 = load i32, i32* %k, align 4
  %37 = icmp eq i32 %_127, 128
  br i1 %37, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  %_129 = load float, float* %y, align 4
  %_128 = fmul float %_129, 2.000000e+00
  %38 = fmul float %_128, %x1p127
  store float %38, float* %y, align 4
  br label %bb43

bb42:                                             ; preds = %bb40
  %_131 = load float, float* %y, align 4
  %39 = fmul float %_131, %twopk
  store float %39, float* %y, align 4
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42
  %_133 = load float, float* %y, align 4
  %40 = fsub float %_133, 1.000000e+00
  store float %40, float* %1, align 4
  br label %bb50

bb45:                                             ; preds = %bb44
  %_140.0 = shl i32 %_139.0, 23
  br label %bb46

panic2:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1842 to %"core::panic::location::Location"*)) #11
  unreachable

bb46:                                             ; preds = %bb45
; call core::f32::<impl f32>::from_bits
  %uf = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_140.0)
  br label %bb47

bb47:                                             ; preds = %bb46
  %_142 = load i32, i32* %k, align 4
  %_141 = icmp slt i32 %_142, 23
  br i1 %_141, label %bb48, label %bb49

bb49:                                             ; preds = %bb47
  %_152 = load float, float* %x, align 4
  %_154 = load float, float* %e, align 4
  %_153 = fadd float %_154, %uf
  %_151 = fsub float %_152, %_153
  %_150 = fadd float %_151, 1.000000e+00
  %41 = fmul float %_150, %twopk
  store float %41, float* %1, align 4
  br label %bb50

bb48:                                             ; preds = %bb47
  %_145 = load float, float* %x, align 4
  %_146 = load float, float* %e, align 4
  %_144 = fsub float %_145, %_146
  %_147 = fsub float 1.000000e+00, %uf
  %_143 = fadd float %_144, %_147
  %42 = fmul float %_143, %twopk
  store float %42, float* %1, align 4
  br label %bb50

bb33:                                             ; preds = %bb30
  %_109 = load float, float* %x, align 4
  %_110 = load float, float* %e, align 4
  %_108 = fsub float %_109, %_110
  %_107 = fmul float 2.000000e+00, %_108
  %43 = fadd float 1.000000e+00, %_107
  store float %43, float* %1, align 4
  br label %bb50

bb32:                                             ; preds = %bb30
  %_104 = load float, float* %e, align 4
  %_106 = load float, float* %x, align 4
  %_105 = fadd float %_106, 5.000000e-01
  %_103 = fsub float %_104, %_105
  %44 = fmul float -2.000000e+00, %_103
  store float %44, float* %1, align 4
  br label %bb50
}

; libm::math::fabs::fabs
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %x) unnamed_addr #1 {
start:
; call core::f64::<impl f64>::to_bits
  %_3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i64 %_3, 9223372036854775807
; call core::f64::<impl f64>::from_bits
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %0
}

; libm::math::fabsf::fabsf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %x) unnamed_addr #1 {
start:
; call core::f32::<impl f32>::to_bits
  %_3 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i32 %_3, 2147483647
; call core::f32::<impl f32>::from_bits
  %0 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret float %0
}

; libm::math::fdim::fdim
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4fdim4fdim17hf4fe28e29da5534eE(double %x, double %y) unnamed_addr #1 {
start:
  %0 = alloca double, align 8
; call core::f64::<impl f64>::is_nan
  %_3 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call core::f64::<impl f64>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %y)
  br label %bb4

bb2:                                              ; preds = %bb1
  store double %x, double* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb2
  %1 = load double, double* %0, align 8
  ret double %1

bb4:                                              ; preds = %bb3
  br i1 %_5, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %_7 = fcmp ogt double %x, %y
  br i1 %_7, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  store double %y, double* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  store double 0.000000e+00, double* %0, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  %2 = fsub double %x, %y
  store double %2, double* %0, align 8
  br label %bb9
}

; libm::math::fdimf::fdimf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5fdimf5fdimf17hd29a89fc6e663c22E(float %x, float %y) unnamed_addr #1 {
start:
  %0 = alloca float, align 4
; call core::f32::<impl f32>::is_nan
  %_3 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call core::f32::<impl f32>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %y)
  br label %bb4

bb2:                                              ; preds = %bb1
  store float %x, float* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb2
  %1 = load float, float* %0, align 4
  ret float %1

bb4:                                              ; preds = %bb3
  br i1 %_5, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %_7 = fcmp ogt float %x, %y
  br i1 %_7, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  store float %y, float* %0, align 4
  br label %bb9

bb8:                                              ; preds = %bb6
  store float 0.000000e+00, float* %0, align 4
  br label %bb9

bb7:                                              ; preds = %bb6
  %2 = fsub float %x, %y
  store float %2, float* %0, align 4
  br label %bb9
}

; libm::math::floor::floor
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %x) unnamed_addr #1 {
start:
  %y = alloca double, align 8
  %_9 = alloca i8, align 1
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %ui = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8.0 = lshr i64 %ui, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i64 %_8.0, 2047
  %e = trunc i64 %_5 to i32
  %_10 = icmp sge i32 %e, 1075
  br i1 %_10, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_13 = fcmp oeq double %x, 0.000000e+00
  %1 = zext i1 %_13 to i8
  store i8 %1, i8* %_9, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_9, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, i8* %_9, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_18.0 = lshr i64 %ui, 63
  br label %bb8

bb6:                                              ; preds = %bb5
  store double %x, double* %0, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18, %bb16, %bb15, %bb6
  %4 = load double, double* %0, align 8
  ret double %4

bb8:                                              ; preds = %bb7
  %5 = icmp eq i64 %_18.0, 0
  br i1 %5, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %_24 = fadd double %x, 0x4330000000000000
  %_23 = fsub double %_24, 0x4330000000000000
  %6 = fsub double %_23, %x
  store double %6, double* %y, align 8
  br label %bb11

bb9:                                              ; preds = %bb8
  %_20 = fsub double %x, 0x4330000000000000
  %_19 = fadd double %_20, 0x4330000000000000
  %7 = fsub double %_19, %x
  store double %7, double* %y, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %_27 = icmp slt i32 %e, 1023
  br i1 %_27, label %bb12, label %bb17

bb17:                                             ; preds = %bb11
  %_36 = load double, double* %y, align 8
  %_35 = fcmp ogt double %_36, 0.000000e+00
  br i1 %_35, label %bb18, label %bb19

bb12:                                             ; preds = %bb11
; call core::ptr::read_volatile
  %_29 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %y)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_34.0 = lshr i64 %ui, 63
  br label %bb14

bb14:                                             ; preds = %bb13
  %8 = icmp eq i64 %_34.0, 0
  br i1 %8, label %bb16, label %bb15

bb16:                                             ; preds = %bb14
  store double 0.000000e+00, double* %0, align 8
  br label %bb20

bb15:                                             ; preds = %bb14
  store double -1.000000e+00, double* %0, align 8
  br label %bb20

bb19:                                             ; preds = %bb17
  %_41 = load double, double* %y, align 8
  %9 = fadd double %x, %_41
  store double %9, double* %0, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  %_39 = load double, double* %y, align 8
  %_37 = fadd double %x, %_39
  %10 = fsub double %_37, 1.000000e+00
  store double %10, double* %0, align 8
  br label %bb20
}

; libm::math::floorf::floorf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6floorf6floorf17h6aac356f5f94488cE(float %x) unnamed_addr #1 {
start:
  %_37 = alloca float, align 4
  %_24 = alloca float, align 4
  %ui = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ui, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = load i32, i32* %ui, align 4
  %_9.0 = lshr i32 %_8, 23
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i32 %_9.0, 255
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_5, i32 127)
  %_10.0 = extractvalue { i32, i1 } %2, 0
  %_10.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %3, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %_11 = icmp sge i32 %_10.0, 23
  br i1 %_11, label %bb4, label %bb5

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1844 to %"core::panic::location::Location"*)) #11
  unreachable

bb5:                                              ; preds = %bb3
  %_13 = icmp sge i32 %_10.0, 0
  br i1 %_13, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store float %x, float* %0, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23, %bb9, %bb4
  %4 = load float, float* %0, align 4
  ret float %4

bb7:                                              ; preds = %bb5
; call core::f32::<impl f32>::from_bits
  %_39 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb17

bb6:                                              ; preds = %bb5
  %5 = and i32 %_10.0, -32
  %_17.1 = icmp ne i32 %5, 0
  %6 = and i32 %_10.0, 31
  %_17.0 = lshr i32 8388607, %6
  %7 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false)
  br i1 %7, label %panic1, label %bb8

bb8:                                              ; preds = %bb6
  %_19 = load i32, i32* %ui, align 4
  %_18 = and i32 %_19, %_17.0
  %8 = icmp eq i32 %_18, 0
  br i1 %8, label %bb9, label %bb10

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1846 to %"core::panic::location::Location"*)) #11
  unreachable

bb9:                                              ; preds = %bb8
  store float %x, float* %0, align 4
  br label %bb25

bb10:                                             ; preds = %bb8
; call core::f32::<impl f32>::from_bits
  %_26 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb11

bb11:                                             ; preds = %bb10
  %9 = fadd float %x, %_26
  store float %9, float* %_24, align 4
; call core::ptr::read_volatile
  %_21 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_24)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_28 = load i32, i32* %ui, align 4
  %_29.0 = lshr i32 %_28, 31
  br label %bb13

bb13:                                             ; preds = %bb12
  %10 = icmp eq i32 %_29.0, 0
  br i1 %10, label %bb16, label %bb14

bb16:                                             ; preds = %bb15, %bb13
  %_32 = xor i32 %_17.0, -1
  %11 = load i32, i32* %ui, align 4
  %12 = and i32 %11, %_32
  store i32 %12, i32* %ui, align 4
  br label %bb24

bb14:                                             ; preds = %bb13
  %13 = load i32, i32* %ui, align 4
  %14 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %13, i32 %_17.0)
  %_31.0 = extractvalue { i32, i1 } %14, 0
  %_31.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %15, label %panic2, label %bb15

bb15:                                             ; preds = %bb14
  store i32 %_31.0, i32* %ui, align 4
  br label %bb16

panic2:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1848 to %"core::panic::location::Location"*)) #11
  unreachable

bb24:                                             ; preds = %bb20, %bb22, %bb16
  %_46 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %16 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_46)
  store float %16, float* %0, align 4
  br label %bb25

bb17:                                             ; preds = %bb7
  %17 = fadd float %x, %_39
  store float %17, float* %_37, align 4
; call core::ptr::read_volatile
  %_34 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_37)
  br label %bb18

bb18:                                             ; preds = %bb17
  %_41 = load i32, i32* %ui, align 4
  %_42.0 = lshr i32 %_41, 31
  br label %bb19

bb19:                                             ; preds = %bb18
  %18 = icmp eq i32 %_42.0, 0
  br i1 %18, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  store i32 0, i32* %ui, align 4
  br label %bb24

bb21:                                             ; preds = %bb19
  %_44 = load i32, i32* %ui, align 4
  %_45.0 = shl i32 %_44, 1
  br label %bb22

bb22:                                             ; preds = %bb21
  %19 = icmp eq i32 %_45.0, 0
  br i1 %19, label %bb24, label %bb23

bb23:                                             ; preds = %bb22
  store float -1.000000e+00, float* %0, align 4
  br label %bb25
}

; libm::math::fma::normalize
; Function Attrs: nonlazybind uwtable
define internal i128 @_ZN4libm4math3fma9normalize17h85e85dbc620e85e9E(double %x) unnamed_addr #1 {
start:
  %_20 = alloca i32, align 4
  %e = alloca i32, align 4
  %ix = alloca i64, align 8
  %0 = alloca %"math::fma::Num", align 8
; call core::f64::<impl f64>::from_bits
  %x1p63 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4890909195324358656)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %ix, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = load i64, i64* %ix, align 8
  %_8.0 = lshr i64 %_7, 52
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = trunc i64 %_8.0 to i32
  store i32 %2, i32* %e, align 4
  %_10 = load i32, i32* %e, align 4
  %sign = and i32 %_10, 2048
  %3 = load i32, i32* %e, align 4
  %4 = and i32 %3, 2047
  store i32 %4, i32* %e, align 4
  %_11 = load i32, i32* %e, align 4
  %5 = icmp eq i32 %_11, 0
  br i1 %5, label %bb4, label %bb11

bb4:                                              ; preds = %bb3
  %_13 = fmul double %x, %x1p63
; call core::f64::<impl f64>::to_bits
  %_12 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_13)
  br label %bb5

bb11:                                             ; preds = %bb10, %bb3
  %6 = load i64, i64* %ix, align 8
  %7 = and i64 %6, 4503599627370495
  store i64 %7, i64* %ix, align 8
  %8 = load i64, i64* %ix, align 8
  %9 = or i64 %8, 4503599627370496
  store i64 %9, i64* %ix, align 8
  %10 = load i64, i64* %ix, align 8
  %_26.0 = shl i64 %10, 1
  br label %bb12

bb5:                                              ; preds = %bb4
  store i64 %_12, i64* %ix, align 8
  %_18 = load i64, i64* %ix, align 8
  %_19.0 = lshr i64 %_18, 52
  br label %bb6

bb6:                                              ; preds = %bb5
  %_16 = trunc i64 %_19.0 to i32
  %11 = and i32 %_16, 2047
  store i32 %11, i32* %e, align 4
  %_21 = load i32, i32* %e, align 4
  %12 = icmp eq i32 %_21, 0
  br i1 %12, label %bb9, label %bb7

bb9:                                              ; preds = %bb6
  store i32 2048, i32* %_20, align 4
  br label %bb10

bb7:                                              ; preds = %bb6
  %_22 = load i32, i32* %e, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_22, i32 63)
  %_23.0 = extractvalue { i32, i1 } %13, 0
  %_23.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %14, label %panic, label %bb8

bb8:                                              ; preds = %bb7
  store i32 %_23.0, i32* %_20, align 4
  br label %bb10

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1850 to %"core::panic::location::Location"*)) #11
  unreachable

bb10:                                             ; preds = %bb9, %bb8
  %15 = load i32, i32* %_20, align 4
  store i32 %15, i32* %e, align 4
  br label %bb11

bb12:                                             ; preds = %bb11
  store i64 %_26.0, i64* %ix, align 8
  %16 = load i32, i32* %e, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 1076)
  %_28.0 = extractvalue { i32, i1 } %17, 0
  %_28.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %18, label %panic1, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_28.0, i32* %e, align 4
  %_29 = load i64, i64* %ix, align 8
  %_30 = load i32, i32* %e, align 4
  %19 = bitcast %"math::fma::Num"* %0 to i64*
  store i64 %_29, i64* %19, align 8
  %20 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %0, i32 0, i32 1
  store i32 %_30, i32* %20, align 8
  %21 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %0, i32 0, i32 2
  store i32 %sign, i32* %21, align 4
  %22 = bitcast %"math::fma::Num"* %0 to i128*
  %23 = load i128, i128* %22, align 8
  ret i128 %23

panic1:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1852 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::fma::mul
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4libm4math3fma3mul17h3b9217b83589cae9E(i64 %x, i64 %y) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_7 = trunc i64 %x to i32
  %xlo = zext i32 %_7 to i64
  %_11.0 = lshr i64 %x, 32
  br label %bb1

bb1:                                              ; preds = %start
  %_13 = trunc i64 %y to i32
  %ylo = zext i32 %_13 to i64
  %_17.0 = lshr i64 %y, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %xlo, i64 %ylo)
  %_20.0 = extractvalue { i64, i1 } %1, 0
  %_20.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %2, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %xlo, i64 %_17.0)
  %_24.0 = extractvalue { i64, i1 } %3, 0
  %_24.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false)
  br i1 %4, label %panic1, label %bb4

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1854 to %"core::panic::location::Location"*)) #11
  unreachable

bb4:                                              ; preds = %bb3
  %5 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_11.0, i64 %ylo)
  %_28.0 = extractvalue { i64, i1 } %5, 0
  %_28.1 = extractvalue { i64, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %6, label %panic2, label %bb5

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1856 to %"core::panic::location::Location"*)) #11
  unreachable

bb5:                                              ; preds = %bb4
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_24.0, i64 %_28.0)
  %_29.0 = extractvalue { i64, i1 } %7, 0
  %_29.1 = extractvalue { i64, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %8, label %panic3, label %bb6

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1858 to %"core::panic::location::Location"*)) #11
  unreachable

bb6:                                              ; preds = %bb5
  %9 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_11.0, i64 %_17.0)
  %_32.0 = extractvalue { i64, i1 } %9, 0
  %_32.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false)
  br i1 %10, label %panic4, label %bb7

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1856 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb6
  %_37.0 = shl i64 %_29.0, 32
  br label %bb8

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1860 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb7
  %11 = add i64 %_20.0, %_37.0
  br label %bb9

bb9:                                              ; preds = %bb8
  %_43.0 = lshr i64 %_29.0, 32
  br label %bb10

bb10:                                             ; preds = %bb9
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %_43.0)
  %_44.0 = extractvalue { i64, i1 } %12, 0
  %_44.1 = extractvalue { i64, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %13, label %panic5, label %bb11

bb11:                                             ; preds = %bb10
  %_46 = icmp ugt i64 %_20.0, %11
  %14 = icmp ule i1 %_46, true
  call void @llvm.assume(i1 %14)
  %_45 = zext i1 %_46 to i64
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_44.0, i64 %_45)
  %_49.0 = extractvalue { i64, i1 } %15, 0
  %_49.1 = extractvalue { i64, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %16, label %panic6, label %bb12

panic5:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1862 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  %17 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_49.0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %11, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = insertvalue { i64, i64 } undef, i64 %20, 0
  %24 = insertvalue { i64, i64 } %23, i64 %22, 1
  ret { i64, i64 } %24

panic6:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1862 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::fma::fma
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3fma3fma17h10338374e666d6c1E(double %x, double %y, double %z) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i128, align 8
  %5 = alloca i128, align 8
  %6 = alloca i128, align 8
  %c = alloca double, align 8
  %r = alloca double, align 8
  %i = alloca i64, align 8
  %nonzero = alloca i32, align 4
  %sign = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %rlo = alloca i64, align 8
  %rhi = alloca i64, align 8
  %zlo = alloca i64, align 8
  %zhi = alloca i64, align 8
  %_12 = alloca i8, align 1
  %nz = alloca %"math::fma::Num", align 8
  %ny = alloca %"math::fma::Num", align 8
  %nx = alloca %"math::fma::Num", align 8
  %7 = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p63 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4890909195324358656)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %x0_ffffff8p_63 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4323455642007240704)
  br label %bb2

bb2:                                              ; preds = %bb1
; call libm::math::fma::normalize
  %8 = call i128 @_ZN4libm4math3fma9normalize17h85e85dbc620e85e9E(double %x)
  store i128 %8, i128* %6, align 8
  %9 = bitcast %"math::fma::Num"* %nx to i8*
  %10 = bitcast i128* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
; call libm::math::fma::normalize
  %11 = call i128 @_ZN4libm4math3fma9normalize17h85e85dbc620e85e9E(double %y)
  store i128 %11, i128* %5, align 8
  %12 = bitcast %"math::fma::Num"* %ny to i8*
  %13 = bitcast i128* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
; call libm::math::fma::normalize
  %14 = call i128 @_ZN4libm4math3fma9normalize17h85e85dbc620e85e9E(double %z)
  store i128 %14, i128* %4, align 8
  %15 = bitcast %"math::fma::Num"* %nz to i8*
  %16 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %17 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nx, i32 0, i32 1
  %_14 = load i32, i32* %17, align 8
  %_13 = icmp sge i32 %_14, 971
  br i1 %_13, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %18 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %ny, i32 0, i32 1
  %_16 = load i32, i32* %18, align 8
  %_15 = icmp sge i32 %_16, 971
  %19 = zext i1 %_15 to i8
  store i8 %19, i8* %_12, align 1
  br label %bb8

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_12, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %20 = load i8, i8* %_12, align 1, !range !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %22 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nz, i32 0, i32 1
  %_22 = load i32, i32* %22, align 8
  %_21 = icmp sge i32 %_22, 971
  br i1 %_21, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
  %_17 = fmul double %x, %y
  %23 = fadd double %_17, %z
  store double %23, double* %7, align 8
  br label %bb103

bb103:                                            ; preds = %bb76, %bb102, %bb86, %bb14, %bb13, %bb9
  %24 = load double, double* %7, align 8
  ret double %24

bb12:                                             ; preds = %bb10
  %25 = bitcast %"math::fma::Num"* %nx to i64*
  %_34 = load i64, i64* %25, align 8
  %26 = bitcast %"math::fma::Num"* %ny to i64*
  %_35 = load i64, i64* %26, align 8
; call libm::math::fma::mul
  %27 = call { i64, i64 } @_ZN4libm4math3fma3mul17h3b9217b83589cae9E(i64 %_34, i64 %_35)
  %_33.0 = extractvalue { i64, i64 } %27, 0
  %_33.1 = extractvalue { i64, i64 } %27, 1
  br label %bb15

bb11:                                             ; preds = %bb10
  %28 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nz, i32 0, i32 1
  %_24 = load i32, i32* %28, align 8
  %_23 = icmp sgt i32 %_24, 971
  br i1 %_23, label %bb13, label %bb14

bb14:                                             ; preds = %bb11
  store double %z, double* %7, align 8
  br label %bb103

bb13:                                             ; preds = %bb11
  %_25 = fmul double %x, %y
  %29 = fadd double %_25, %z
  store double %29, double* %7, align 8
  br label %bb103

bb15:                                             ; preds = %bb12
  store i64 %_33.0, i64* %rhi, align 8
  store i64 %_33.1, i64* %rlo, align 8
  %30 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nx, i32 0, i32 1
  %_37 = load i32, i32* %30, align 8
  %31 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %ny, i32 0, i32 1
  %_38 = load i32, i32* %31, align 8
  %32 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_37, i32 %_38)
  %_39.0 = extractvalue { i32, i1 } %32, 0
  %_39.1 = extractvalue { i32, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %33, label %panic, label %bb16

bb16:                                             ; preds = %bb15
  store i32 %_39.0, i32* %e, align 4
  %34 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nz, i32 0, i32 1
  %_41 = load i32, i32* %34, align 8
  %_42 = load i32, i32* %e, align 4
  %35 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_41, i32 %_42)
  %_43.0 = extractvalue { i32, i1 } %35, 0
  %_43.1 = extractvalue { i32, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %36, label %panic1, label %bb17

panic:                                            ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1864 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
  store i32 %_43.0, i32* %d, align 4
  %_45 = load i32, i32* %d, align 4
  %_44 = icmp sgt i32 %_45, 0
  br i1 %_44, label %bb18, label %bb35

panic1:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1866 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb17
  store i64 0, i64* %zhi, align 8
  %_85 = load i32, i32* %d, align 4
  %_86 = icmp eq i32 %_85, -2147483648
  %37 = call i1 @llvm.expect.i1(i1 %_86, i1 false)
  br i1 %37, label %panic13, label %bb36

bb18:                                             ; preds = %bb17
  %_47 = load i32, i32* %d, align 4
  %_46 = icmp slt i32 %_47, 64
  br i1 %_46, label %bb19, label %bb23

bb23:                                             ; preds = %bb18
  store i64 0, i64* %zlo, align 8
  %38 = bitcast %"math::fma::Num"* %nz to i64*
  %_56 = load i64, i64* %38, align 8
  store i64 %_56, i64* %zhi, align 8
  %39 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nz, i32 0, i32 1
  %_57 = load i32, i32* %39, align 8
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_57, i32 64)
  %_58.0 = extractvalue { i32, i1 } %40, 0
  %_58.1 = extractvalue { i32, i1 } %40, 1
  %41 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %41, label %panic5, label %bb24

bb19:                                             ; preds = %bb18
  %42 = bitcast %"math::fma::Num"* %nz to i64*
  %_48 = load i64, i64* %42, align 8
  %_49 = load i32, i32* %d, align 4
  %43 = and i32 %_49, -64
  %_50.1 = icmp ne i32 %43, 0
  %44 = zext i32 %_49 to i64
  %45 = and i64 %44, 63
  %_50.0 = shl i64 %_48, %45
  %46 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false)
  br i1 %46, label %panic2, label %bb20

bb20:                                             ; preds = %bb19
  store i64 %_50.0, i64* %zlo, align 8
  %47 = bitcast %"math::fma::Num"* %nz to i64*
  %_51 = load i64, i64* %47, align 8
  %_53 = load i32, i32* %d, align 4
  %48 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_53)
  %_54.0 = extractvalue { i32, i1 } %48, 0
  %_54.1 = extractvalue { i32, i1 } %48, 1
  %49 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %49, label %panic3, label %bb21

panic2:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1868 to %"core::panic::location::Location"*)) #11
  unreachable

bb21:                                             ; preds = %bb20
  %50 = and i32 %_54.0, -64
  %_55.1 = icmp ne i32 %50, 0
  %51 = zext i32 %_54.0 to i64
  %52 = and i64 %51, 63
  %_55.0 = lshr i64 %_51, %52
  %53 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %53, label %panic4, label %bb22

panic3:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1870 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  store i64 %_55.0, i64* %zhi, align 8
  br label %bb44

panic4:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1872 to %"core::panic::location::Location"*)) #11
  unreachable

bb44:                                             ; preds = %bb37, %bb43, %bb42, %bb34, %bb33, %bb25, %bb22
  %54 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nx, i32 0, i32 2
  %_104 = load i32, i32* %54, align 4
  %55 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %ny, i32 0, i32 2
  %_105 = load i32, i32* %55, align 4
  %56 = xor i32 %_104, %_105
  store i32 %56, i32* %sign, align 4
  %_108 = load i32, i32* %sign, align 4
  %57 = getelementptr inbounds %"math::fma::Num", %"math::fma::Num"* %nz, i32 0, i32 2
  %_109 = load i32, i32* %57, align 4
  %_107 = xor i32 %_108, %_109
  %samesign = icmp eq i32 %_107, 0
  store i32 1, i32* %nonzero, align 4
  br i1 %samesign, label %bb45, label %bb49

bb24:                                             ; preds = %bb23
  store i32 %_58.0, i32* %e, align 4
  %58 = load i32, i32* %d, align 4
  %59 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 64)
  %_59.0 = extractvalue { i32, i1 } %59, 0
  %_59.1 = extractvalue { i32, i1 } %59, 1
  %60 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false)
  br i1 %60, label %panic6, label %bb25

panic5:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1874 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  store i32 %_59.0, i32* %d, align 4
  %_60 = load i32, i32* %d, align 4
  %61 = icmp eq i32 %_60, 0
  br i1 %61, label %bb44, label %bb26

panic6:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1876 to %"core::panic::location::Location"*)) #11
  unreachable

bb26:                                             ; preds = %bb25
  %_62 = load i32, i32* %d, align 4
  %_61 = icmp slt i32 %_62, 64
  br i1 %_61, label %bb27, label %bb34

bb34:                                             ; preds = %bb26
  store i64 1, i64* %rlo, align 8
  store i64 0, i64* %rhi, align 8
  br label %bb44

bb27:                                             ; preds = %bb26
  %_65 = load i64, i64* %rhi, align 8
  %_67 = load i32, i32* %d, align 4
  %62 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_67)
  %_68.0 = extractvalue { i32, i1 } %62, 0
  %_68.1 = extractvalue { i32, i1 } %62, 1
  %63 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false)
  br i1 %63, label %panic7, label %bb28

bb28:                                             ; preds = %bb27
  %64 = and i32 %_68.0, -64
  %_69.1 = icmp ne i32 %64, 0
  %65 = zext i32 %_68.0 to i64
  %66 = and i64 %65, 63
  %_69.0 = shl i64 %_65, %66
  %67 = call i1 @llvm.expect.i1(i1 %_69.1, i1 false)
  br i1 %67, label %panic8, label %bb29

panic7:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1878 to %"core::panic::location::Location"*)) #11
  unreachable

bb29:                                             ; preds = %bb28
  %_71 = load i64, i64* %rlo, align 8
  %_72 = load i32, i32* %d, align 4
  %68 = and i32 %_72, -64
  %_73.1 = icmp ne i32 %68, 0
  %69 = zext i32 %_72 to i64
  %70 = and i64 %69, 63
  %_73.0 = lshr i64 %_71, %70
  %71 = call i1 @llvm.expect.i1(i1 %_73.1, i1 false)
  br i1 %71, label %panic9, label %bb30

panic8:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1880 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  %_63 = or i64 %_69.0, %_73.0
  %_77 = load i64, i64* %rlo, align 8
  %_79 = load i32, i32* %d, align 4
  %72 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_79)
  %_80.0 = extractvalue { i32, i1 } %72, 0
  %_80.1 = extractvalue { i32, i1 } %72, 1
  %73 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false)
  br i1 %73, label %panic10, label %bb31

panic9:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1882 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  %74 = and i32 %_80.0, -64
  %_81.1 = icmp ne i32 %74, 0
  %75 = zext i32 %_80.0 to i64
  %76 = and i64 %75, 63
  %_81.0 = shl i64 %_77, %76
  %77 = call i1 @llvm.expect.i1(i1 %_81.1, i1 false)
  br i1 %77, label %panic11, label %bb32

panic10:                                          ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1884 to %"core::panic::location::Location"*)) #11
  unreachable

bb32:                                             ; preds = %bb31
  %_75 = icmp ne i64 %_81.0, 0
  %78 = icmp ule i1 %_75, true
  call void @llvm.assume(i1 %78)
  %_74 = zext i1 %_75 to i64
  %79 = or i64 %_63, %_74
  store i64 %79, i64* %rlo, align 8
  %_82 = load i64, i64* %rhi, align 8
  %_83 = load i32, i32* %d, align 4
  %80 = and i32 %_83, -64
  %_84.1 = icmp ne i32 %80, 0
  %81 = zext i32 %_83 to i64
  %82 = and i64 %81, 63
  %_84.0 = lshr i64 %_82, %82
  %83 = call i1 @llvm.expect.i1(i1 %_84.1, i1 false)
  br i1 %83, label %panic12, label %bb33

panic11:                                          ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1886 to %"core::panic::location::Location"*)) #11
  unreachable

bb33:                                             ; preds = %bb32
  store i64 %_84.0, i64* %rhi, align 8
  br label %bb44

panic12:                                          ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1888 to %"core::panic::location::Location"*)) #11
  unreachable

bb36:                                             ; preds = %bb35
  %84 = sub i32 0, %_85
  store i32 %84, i32* %d, align 4
  %_87 = load i32, i32* %d, align 4
  %85 = icmp eq i32 %_87, 0
  br i1 %85, label %bb37, label %bb38

panic13:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1890 to %"core::panic::location::Location"*)) #11
  unreachable

bb37:                                             ; preds = %bb36
  %86 = bitcast %"math::fma::Num"* %nz to i64*
  %_88 = load i64, i64* %86, align 8
  store i64 %_88, i64* %zlo, align 8
  br label %bb44

bb38:                                             ; preds = %bb36
  %_90 = load i32, i32* %d, align 4
  %_89 = icmp slt i32 %_90, 64
  br i1 %_89, label %bb39, label %bb43

bb43:                                             ; preds = %bb38
  store i64 1, i64* %zlo, align 8
  br label %bb44

bb39:                                             ; preds = %bb38
  %87 = bitcast %"math::fma::Num"* %nz to i64*
  %_92 = load i64, i64* %87, align 8
  %_93 = load i32, i32* %d, align 4
  %88 = and i32 %_93, -64
  %_94.1 = icmp ne i32 %88, 0
  %89 = zext i32 %_93 to i64
  %90 = and i64 %89, 63
  %_94.0 = lshr i64 %_92, %90
  %91 = call i1 @llvm.expect.i1(i1 %_94.1, i1 false)
  br i1 %91, label %panic14, label %bb40

bb40:                                             ; preds = %bb39
  %92 = bitcast %"math::fma::Num"* %nz to i64*
  %_98 = load i64, i64* %92, align 8
  %_100 = load i32, i32* %d, align 4
  %93 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_100)
  %_101.0 = extractvalue { i32, i1 } %93, 0
  %_101.1 = extractvalue { i32, i1 } %93, 1
  %94 = call i1 @llvm.expect.i1(i1 %_101.1, i1 false)
  br i1 %94, label %panic15, label %bb41

panic14:                                          ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1892 to %"core::panic::location::Location"*)) #11
  unreachable

bb41:                                             ; preds = %bb40
  %95 = and i32 %_101.0, -64
  %_102.1 = icmp ne i32 %95, 0
  %96 = zext i32 %_101.0 to i64
  %97 = and i64 %96, 63
  %_102.0 = shl i64 %_98, %97
  %98 = call i1 @llvm.expect.i1(i1 %_102.1, i1 false)
  br i1 %98, label %panic16, label %bb42

panic15:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1894 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  %_96 = icmp ne i64 %_102.0, 0
  %99 = icmp ule i1 %_96, true
  call void @llvm.assume(i1 %99)
  %_95 = zext i1 %_96 to i64
  %100 = or i64 %_94.0, %_95
  store i64 %100, i64* %zlo, align 8
  br label %bb44

panic16:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1896 to %"core::panic::location::Location"*)) #11
  unreachable

bb49:                                             ; preds = %bb44
  %_126 = load i64, i64* %rlo, align 8
  %_127 = load i64, i64* %zlo, align 8
  %101 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_126, i64 %_127)
  %102 = extractvalue { i64, i1 } %101, 0
  %103 = extractvalue { i64, i1 } %101, 1
  %104 = zext i1 %103 to i8
  %105 = bitcast { i64, i8 }* %0 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %104, i8* %106, align 8
  %107 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %107, align 8
  %108 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %109 = load i8, i8* %108, align 8, !range !3
  %_5.1.i = trunc i8 %109 to i1
  %110 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %110, align 8
  %111 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %112 = zext i1 %_5.1.i to i8
  store i8 %112, i8* %111, align 8
  %113 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %116 = load i8, i8* %115, align 8, !range !3
  %117 = trunc i8 %116 to i1
  %118 = zext i1 %117 to i8
  %119 = insertvalue { i64, i8 } undef, i64 %114, 0
  %120 = insertvalue { i64, i8 } %119, i8 %118, 1
  %_125.0 = extractvalue { i64, i8 } %120, 0
  %121 = extractvalue { i64, i8 } %120, 1
  %_125.1 = trunc i8 %121 to i1
  br label %bb50

bb45:                                             ; preds = %bb44
  %_113 = load i64, i64* %rlo, align 8
  %_114 = load i64, i64* %zlo, align 8
  %122 = add i64 %_113, %_114
  br label %bb46

bb46:                                             ; preds = %bb45
  store i64 %122, i64* %rlo, align 8
  %_116 = load i64, i64* %zhi, align 8
  %_119 = load i64, i64* %rlo, align 8
  %_120 = load i64, i64* %zlo, align 8
  %_118 = icmp ult i64 %_119, %_120
  %123 = icmp ule i1 %_118, true
  call void @llvm.assume(i1 %123)
  %_117 = zext i1 %_118 to i64
  %124 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_116, i64 %_117)
  %_121.0 = extractvalue { i64, i1 } %124, 0
  %_121.1 = extractvalue { i64, i1 } %124, 1
  %125 = call i1 @llvm.expect.i1(i1 %_121.1, i1 false)
  br i1 %125, label %panic17, label %bb47

bb47:                                             ; preds = %bb46
  %126 = load i64, i64* %rhi, align 8
  %127 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 %_121.0)
  %_122.0 = extractvalue { i64, i1 } %127, 0
  %_122.1 = extractvalue { i64, i1 } %127, 1
  %128 = call i1 @llvm.expect.i1(i1 %_122.1, i1 false)
  br i1 %128, label %panic18, label %bb48

panic17:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1898 to %"core::panic::location::Location"*)) #11
  unreachable

bb48:                                             ; preds = %bb47
  store i64 %_122.0, i64* %rhi, align 8
  br label %bb59

panic18:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1900 to %"core::panic::location::Location"*)) #11
  unreachable

bb59:                                             ; preds = %bb58, %bb48
  %_155 = load i32, i32* %nonzero, align 4
  %129 = icmp eq i32 %_155, 0
  br i1 %129, label %bb68, label %bb60

bb50:                                             ; preds = %bb49
  store i64 %_125.0, i64* %rlo, align 8
  %_130 = load i64, i64* %rhi, align 8
  %_132 = load i64, i64* %zhi, align 8
  %130 = icmp ule i1 %_125.1, true
  call void @llvm.assume(i1 %130)
  %_133 = zext i1 %_125.1 to i64
  %131 = add i64 %_132, %_133
  br label %bb51

bb51:                                             ; preds = %bb50
  %132 = sub i64 %_130, %131
  br label %bb52

bb52:                                             ; preds = %bb51
  store i64 %132, i64* %rhi, align 8
  %_136 = load i64, i64* %rhi, align 8
  %_137.0 = lshr i64 %_136, 63
  br label %bb53

bb53:                                             ; preds = %bb52
  %133 = icmp eq i64 %_137.0, 0
  br i1 %133, label %bb58, label %bb54

bb58:                                             ; preds = %bb57, %bb53
  %_154 = load i64, i64* %rhi, align 8
  %_153 = icmp ne i64 %_154, 0
  %134 = icmp ule i1 %_153, true
  call void @llvm.assume(i1 %134)
  %135 = zext i1 %_153 to i32
  store i32 %135, i32* %nonzero, align 4
  br label %bb59

bb54:                                             ; preds = %bb53
  %_140 = load i64, i64* %rlo, align 8
  %_141 = icmp eq i64 %_140, -9223372036854775808
  %136 = call i1 @llvm.expect.i1(i1 %_141, i1 false)
  br i1 %136, label %panic19, label %bb55

bb55:                                             ; preds = %bb54
  %_138 = sub i64 0, %_140
  store i64 %_138, i64* %rlo, align 8
  %_145 = load i64, i64* %rhi, align 8
  %_146 = icmp eq i64 %_145, -9223372036854775808
  %137 = call i1 @llvm.expect.i1(i1 %_146, i1 false)
  br i1 %137, label %panic20, label %bb56

panic19:                                          ; preds = %bb54
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1902 to %"core::panic::location::Location"*)) #11
  unreachable

bb56:                                             ; preds = %bb55
  %_143 = sub i64 0, %_145
  %_149 = load i64, i64* %rlo, align 8
  %_148 = icmp ne i64 %_149, 0
  %138 = icmp ule i1 %_148, true
  call void @llvm.assume(i1 %138)
  %_147 = zext i1 %_148 to i64
  %139 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_143, i64 %_147)
  %_150.0 = extractvalue { i64, i1 } %139, 0
  %_150.1 = extractvalue { i64, i1 } %139, 1
  %140 = call i1 @llvm.expect.i1(i1 %_150.1, i1 false)
  br i1 %140, label %panic21, label %bb57

panic20:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1904 to %"core::panic::location::Location"*)) #11
  unreachable

bb57:                                             ; preds = %bb56
  store i64 %_150.0, i64* %rhi, align 8
  %_152 = load i32, i32* %sign, align 4
  %_151 = icmp eq i32 %_152, 0
  %141 = icmp ule i1 %_151, true
  call void @llvm.assume(i1 %141)
  %142 = zext i1 %_151 to i32
  store i32 %142, i32* %sign, align 4
  br label %bb58

panic21:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1904 to %"core::panic::location::Location"*)) #11
  unreachable

bb68:                                             ; preds = %bb59
  %_178 = load i64, i64* %rlo, align 8
  %143 = icmp eq i64 %_178, 0
  br i1 %143, label %bb76, label %bb69

bb60:                                             ; preds = %bb59
  %144 = load i32, i32* %e, align 4
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 64)
  %_156.0 = extractvalue { i32, i1 } %145, 0
  %_156.1 = extractvalue { i32, i1 } %145, 1
  %146 = call i1 @llvm.expect.i1(i1 %_156.1, i1 false)
  br i1 %146, label %panic22, label %bb61

bb61:                                             ; preds = %bb60
  store i32 %_156.0, i32* %e, align 4
  %_159 = load i64, i64* %rhi, align 8
  %147 = call i64 @llvm.ctlz.i64(i64 %_159, i1 false)
  store i64 %147, i64* %2, align 8
  %_2.i37 = load i64, i64* %2, align 8
  %148 = trunc i64 %_2.i37 to i32
  br label %bb62

panic22:                                          ; preds = %bb60
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1906 to %"core::panic::location::Location"*)) #11
  unreachable

bb62:                                             ; preds = %bb61
  %149 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 1)
  %_160.0 = extractvalue { i32, i1 } %149, 0
  %_160.1 = extractvalue { i32, i1 } %149, 1
  %150 = call i1 @llvm.expect.i1(i1 %_160.1, i1 false)
  br i1 %150, label %panic23, label %bb63

bb63:                                             ; preds = %bb62
  store i32 %_160.0, i32* %d, align 4
  %_163 = load i64, i64* %rhi, align 8
  %_164 = load i32, i32* %d, align 4
  %151 = and i32 %_164, -64
  %_165.1 = icmp ne i32 %151, 0
  %152 = zext i32 %_164 to i64
  %153 = and i64 %152, 63
  %_165.0 = shl i64 %_163, %153
  %154 = call i1 @llvm.expect.i1(i1 %_165.1, i1 false)
  br i1 %154, label %panic24, label %bb64

panic23:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1908 to %"core::panic::location::Location"*)) #11
  unreachable

bb64:                                             ; preds = %bb63
  %_167 = load i64, i64* %rlo, align 8
  %_169 = load i32, i32* %d, align 4
  %155 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_169)
  %_170.0 = extractvalue { i32, i1 } %155, 0
  %_170.1 = extractvalue { i32, i1 } %155, 1
  %156 = call i1 @llvm.expect.i1(i1 %_170.1, i1 false)
  br i1 %156, label %panic25, label %bb65

panic24:                                          ; preds = %bb63
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1910 to %"core::panic::location::Location"*)) #11
  unreachable

bb65:                                             ; preds = %bb64
  %157 = and i32 %_170.0, -64
  %_171.1 = icmp ne i32 %157, 0
  %158 = zext i32 %_170.0 to i64
  %159 = and i64 %158, 63
  %_171.0 = lshr i64 %_167, %159
  %160 = call i1 @llvm.expect.i1(i1 %_171.1, i1 false)
  br i1 %160, label %panic26, label %bb66

panic25:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1912 to %"core::panic::location::Location"*)) #11
  unreachable

bb66:                                             ; preds = %bb65
  %_161 = or i64 %_165.0, %_171.0
  %_175 = load i64, i64* %rlo, align 8
  %_176 = load i32, i32* %d, align 4
  %161 = and i32 %_176, -64
  %_177.1 = icmp ne i32 %161, 0
  %162 = zext i32 %_176 to i64
  %163 = and i64 %162, 63
  %_177.0 = shl i64 %_175, %163
  %164 = call i1 @llvm.expect.i1(i1 %_177.1, i1 false)
  br i1 %164, label %panic27, label %bb67

panic26:                                          ; preds = %bb65
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1914 to %"core::panic::location::Location"*)) #11
  unreachable

bb67:                                             ; preds = %bb66
  %_173 = icmp ne i64 %_177.0, 0
  %165 = icmp ule i1 %_173, true
  call void @llvm.assume(i1 %165)
  %_172 = zext i1 %_173 to i64
  %166 = or i64 %_161, %_172
  store i64 %166, i64* %rhi, align 8
  br label %bb77

panic27:                                          ; preds = %bb66
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1916 to %"core::panic::location::Location"*)) #11
  unreachable

bb77:                                             ; preds = %bb75, %bb73, %bb67
  %_197 = load i32, i32* %d, align 4
  %167 = load i32, i32* %e, align 4
  %168 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %167, i32 %_197)
  %_198.0 = extractvalue { i32, i1 } %168, 0
  %_198.1 = extractvalue { i32, i1 } %168, 1
  %169 = call i1 @llvm.expect.i1(i1 %_198.1, i1 false)
  br i1 %169, label %panic30, label %bb78

bb76:                                             ; preds = %bb68
  %_193 = fmul double %x, %y
  %170 = fadd double %_193, %z
  store double %170, double* %7, align 8
  br label %bb103

bb69:                                             ; preds = %bb68
  %_181 = load i64, i64* %rlo, align 8
  %171 = call i64 @llvm.ctlz.i64(i64 %_181, i1 false)
  store i64 %171, i64* %3, align 8
  %_2.i = load i64, i64* %3, align 8
  %172 = trunc i64 %_2.i to i32
  br label %bb70

bb70:                                             ; preds = %bb69
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %172, i32 1)
  %_182.0 = extractvalue { i32, i1 } %173, 0
  %_182.1 = extractvalue { i32, i1 } %173, 1
  %174 = call i1 @llvm.expect.i1(i1 %_182.1, i1 false)
  br i1 %174, label %panic28, label %bb71

bb71:                                             ; preds = %bb70
  store i32 %_182.0, i32* %d, align 4
  %_184 = load i32, i32* %d, align 4
  %_183 = icmp slt i32 %_184, 0
  br i1 %_183, label %bb72, label %bb74

panic28:                                          ; preds = %bb70
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1918 to %"core::panic::location::Location"*)) #11
  unreachable

bb74:                                             ; preds = %bb71
  %_190 = load i64, i64* %rlo, align 8
  %_191 = load i32, i32* %d, align 4
  %175 = and i32 %_191, -64
  %_192.1 = icmp ne i32 %175, 0
  %176 = zext i32 %_191 to i64
  %177 = and i64 %176, 63
  %_192.0 = shl i64 %_190, %177
  %178 = call i1 @llvm.expect.i1(i1 %_192.1, i1 false)
  br i1 %178, label %panic29, label %bb75

bb72:                                             ; preds = %bb71
  %_186 = load i64, i64* %rlo, align 8
  %_187.0 = lshr i64 %_186, 1
  br label %bb73

bb73:                                             ; preds = %bb72
  %_189 = load i64, i64* %rlo, align 8
  %_188 = and i64 %_189, 1
  %179 = or i64 %_187.0, %_188
  store i64 %179, i64* %rhi, align 8
  br label %bb77

bb75:                                             ; preds = %bb74
  store i64 %_192.0, i64* %rhi, align 8
  br label %bb77

panic29:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1920 to %"core::panic::location::Location"*)) #11
  unreachable

bb78:                                             ; preds = %bb77
  store i32 %_198.0, i32* %e, align 4
  %_200 = load i64, i64* %rhi, align 8
  store i64 %_200, i64* %i, align 8
  %_201 = load i32, i32* %sign, align 4
  %180 = icmp eq i32 %_201, 0
  br i1 %180, label %bb81, label %bb79

panic30:                                          ; preds = %bb77
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1922 to %"core::panic::location::Location"*)) #11
  unreachable

bb81:                                             ; preds = %bb80, %bb78
  %_205 = load i64, i64* %i, align 8
  %181 = sitofp i64 %_205 to double
  store double %181, double* %r, align 8
  %_207 = load i32, i32* %e, align 4
  %_206 = icmp slt i32 %_207, -1084
  br i1 %_206, label %bb82, label %bb102

bb79:                                             ; preds = %bb78
  %_202 = load i64, i64* %i, align 8
  %_203 = icmp eq i64 %_202, -9223372036854775808
  %182 = call i1 @llvm.expect.i1(i1 %_203, i1 false)
  br i1 %182, label %panic31, label %bb80

bb80:                                             ; preds = %bb79
  %183 = sub i64 0, %_202
  store i64 %183, i64* %i, align 8
  br label %bb81

panic31:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1924 to %"core::panic::location::Location"*)) #11
  unreachable

bb102:                                            ; preds = %bb101, %bb93, %bb88, %bb81
  %_275 = load double, double* %r, align 8
  %_276 = load i32, i32* %e, align 4
; call libm::math::scalbn::scalbn
  %184 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %_275, i32 %_276)
  store double %184, double* %7, align 8
  br label %bb103

bb82:                                             ; preds = %bb81
  %_210 = load i32, i32* %e, align 4
  %_209 = icmp eq i32 %_210, -1085
  br i1 %_209, label %bb83, label %bb94

bb94:                                             ; preds = %bb82
  store i32 10, i32* %d, align 4
  %_258 = load i64, i64* %rhi, align 8
  %_260.0 = lshr i64 %_258, 10
  br label %bb95

bb83:                                             ; preds = %bb82
  store double %x1p63, double* %c, align 8
  %_213 = load i32, i32* %sign, align 4
  %185 = icmp eq i32 %_213, 0
  br i1 %185, label %bb85, label %bb84

bb85:                                             ; preds = %bb84, %bb83
  %_216 = load double, double* %r, align 8
  %_217 = load double, double* %c, align 8
  %_215 = fcmp oeq double %_216, %_217
  br i1 %_215, label %bb86, label %bb87

bb84:                                             ; preds = %bb83
  %_214 = load double, double* %c, align 8
  %186 = fneg double %_214
  store double %186, double* %c, align 8
  br label %bb85

bb87:                                             ; preds = %bb85
  %_228 = load i64, i64* %rhi, align 8
  %_229.0 = shl i64 %_228, 53
  br label %bb88

bb86:                                             ; preds = %bb85
  %_220 = fmul double %x0_ffffff8p_63, 0x3810000000000000
  %_223 = load double, double* %r, align 8
  %_219 = fmul double %_220, %_223
  %fltmin = fptrunc double %_219 to float
  %_225 = fpext float %fltmin to double
  %187 = fmul double 0x7F0000000000000, %_225
  store double %187, double* %7, align 8
  br label %bb103

bb88:                                             ; preds = %bb87
  %188 = icmp eq i64 %_229.0, 0
  br i1 %188, label %bb102, label %bb89

bb89:                                             ; preds = %bb88
  %_233 = load i64, i64* %rhi, align 8
  %_234.0 = lshr i64 %_233, 1
  br label %bb90

bb90:                                             ; preds = %bb89
  %_236 = load i64, i64* %rhi, align 8
  %_235 = and i64 %_236, 1
  %_231 = or i64 %_234.0, %_235
  %_230 = or i64 %_231, 4611686018427387904
  store i64 %_230, i64* %i, align 8
  %_238 = load i32, i32* %sign, align 4
  %189 = icmp eq i32 %_238, 0
  br i1 %189, label %bb93, label %bb91

bb93:                                             ; preds = %bb92, %bb90
  %_241 = load i64, i64* %i, align 8
  %190 = sitofp i64 %_241 to double
  store double %190, double* %r, align 8
  %_243 = load double, double* %r, align 8
  %_242 = fmul double 2.000000e+00, %_243
  %_244 = load double, double* %c, align 8
  %191 = fsub double %_242, %_244
  store double %191, double* %r, align 8
  %_247 = load double, double* %r, align 8
  %tiny = fmul double 0x7F0000000000000, %_247
  %_249 = fmul double %tiny, %tiny
  %_253 = load double, double* %r, align 8
  %_254 = load double, double* %r, align 8
  %_252 = fsub double %_253, %_254
  %_248 = fmul double %_249, %_252
  %192 = load double, double* %r, align 8
  %193 = fadd double %192, %_248
  store double %193, double* %r, align 8
  br label %bb102

bb91:                                             ; preds = %bb90
  %_239 = load i64, i64* %i, align 8
  %_240 = icmp eq i64 %_239, -9223372036854775808
  %194 = call i1 @llvm.expect.i1(i1 %_240, i1 false)
  br i1 %194, label %panic32, label %bb92

bb92:                                             ; preds = %bb91
  %195 = sub i64 0, %_239
  store i64 %195, i64* %i, align 8
  br label %bb93

panic32:                                          ; preds = %bb91
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1926 to %"core::panic::location::Location"*)) #11
  unreachable

bb95:                                             ; preds = %bb94
  %_264 = load i64, i64* %rhi, align 8
  %_266 = load i32, i32* %d, align 4
  %196 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %_266)
  %_267.0 = extractvalue { i32, i1 } %196, 0
  %_267.1 = extractvalue { i32, i1 } %196, 1
  %197 = call i1 @llvm.expect.i1(i1 %_267.1, i1 false)
  br i1 %197, label %panic33, label %bb96

bb96:                                             ; preds = %bb95
  %198 = and i32 %_267.0, -64
  %_268.1 = icmp ne i32 %198, 0
  %199 = zext i32 %_267.0 to i64
  %200 = and i64 %199, 63
  %_268.0 = shl i64 %_264, %200
  %201 = call i1 @llvm.expect.i1(i1 %_268.1, i1 false)
  br i1 %201, label %panic34, label %bb97

panic33:                                          ; preds = %bb95
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1928 to %"core::panic::location::Location"*)) #11
  unreachable

bb97:                                             ; preds = %bb96
  %_262 = icmp ne i64 %_268.0, 0
  %202 = icmp ule i1 %_262, true
  call void @llvm.assume(i1 %202)
  %_261 = zext i1 %_262 to i64
  %_256 = or i64 %_260.0, %_261
  %_269 = load i32, i32* %d, align 4
  %203 = and i32 %_269, -64
  %_270.1 = icmp ne i32 %203, 0
  %204 = zext i32 %_269 to i64
  %205 = and i64 %204, 63
  %_270.0 = shl i64 %_256, %205
  %206 = call i1 @llvm.expect.i1(i1 %_270.1, i1 false)
  br i1 %206, label %panic35, label %bb98

panic34:                                          ; preds = %bb96
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1930 to %"core::panic::location::Location"*)) #11
  unreachable

bb98:                                             ; preds = %bb97
  store i64 %_270.0, i64* %i, align 8
  %_271 = load i32, i32* %sign, align 4
  %207 = icmp eq i32 %_271, 0
  br i1 %207, label %bb101, label %bb99

panic35:                                          ; preds = %bb97
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1932 to %"core::panic::location::Location"*)) #11
  unreachable

bb101:                                            ; preds = %bb100, %bb98
  %_274 = load i64, i64* %i, align 8
  %208 = sitofp i64 %_274 to double
  store double %208, double* %r, align 8
  br label %bb102

bb99:                                             ; preds = %bb98
  %_272 = load i64, i64* %i, align 8
  %_273 = icmp eq i64 %_272, -9223372036854775808
  %209 = call i1 @llvm.expect.i1(i1 %_273, i1 false)
  br i1 %209, label %panic36, label %bb100

bb100:                                            ; preds = %bb99
  %210 = sub i64 0, %_272
  store i64 %210, i64* %i, align 8
  br label %bb101

panic36:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1934 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::fmaf::fmaf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4fmaf4fmaf17h2b97beceebf7ec5fE(float %x, float %y, float %0) unnamed_addr #1 {
start:
  %adjusted_result = alloca double, align 8
  %_44 = alloca i8, align 1
  %_43 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %ui = alloca i64, align 8
  %result = alloca double, align 8
  %xy = alloca double, align 8
  %1 = alloca float, align 4
  %z = alloca float, align 4
  store float %0, float* %z, align 4
  %_8 = fpext float %x to double
  %_10 = fpext float %y to double
  %2 = fmul double %_8, %_10
  store double %2, double* %xy, align 8
  %_12 = load double, double* %xy, align 8
  %_14 = load float, float* %z, align 4
  %_13 = fpext float %_14 to double
  %3 = fadd double %_12, %_13
  store double %3, double* %result, align 8
  %_16 = load double, double* %result, align 8
; call core::f64::<impl f64>::to_bits
  %_15 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_16)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_15, i64* %ui, align 8
  %_19 = load i64, i64* %ui, align 8
  %_20.0 = lshr i64 %_19, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_17 = trunc i64 %_20.0 to i32
  %e = and i32 %_17, 2047
  %_25 = load i64, i64* %ui, align 8
  %_24 = and i64 %_25, 536870911
  %4 = icmp eq i64 %_24, 268435456
  br i1 %4, label %bb10, label %bb9

bb10:                                             ; preds = %bb2
  %_26 = icmp eq i32 %e, 2047
  %5 = zext i1 %_26 to i8
  store i8 %5, i8* %_23, align 1
  br label %bb11

bb9:                                              ; preds = %bb2
  store i8 1, i8* %_23, align 1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %6 = load i8, i8* %_23, align 1, !range !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb7

bb7:                                              ; preds = %bb11
  %_31 = load double, double* %result, align 8
  %_32 = load double, double* %xy, align 8
  %_30 = fsub double %_31, %_32
  %_34 = load float, float* %z, align 4
  %_33 = fpext float %_34 to double
  %_29 = fcmp oeq double %_30, %_33
  br i1 %_29, label %bb13, label %bb12

bb6:                                              ; preds = %bb11
  store i8 1, i8* %_22, align 1
  br label %bb8

bb8:                                              ; preds = %bb14, %bb6
  %8 = load i8, i8* %_22, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb3, label %bb4

bb12:                                             ; preds = %bb7
  store i8 0, i8* %_28, align 1
  br label %bb14

bb13:                                             ; preds = %bb7
  %_37 = load double, double* %result, align 8
  %_39 = load float, float* %z, align 4
  %_38 = fpext float %_39 to double
  %_36 = fsub double %_37, %_38
  %_40 = load double, double* %xy, align 8
  %_35 = fcmp oeq double %_36, %_40
  %10 = zext i1 %_35 to i8
  store i8 %10, i8* %_28, align 1
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %11 = load i8, i8* %_28, align 1, !range !3
  %12 = trunc i8 %11 to i1
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %_22, align 1
  br label %bb8

bb4:                                              ; preds = %bb8
; call libm::math::fenv::fegetround
  %_42 = call i32 @_ZN4libm4math4fenv10fegetround17hf4699ae20e4822f1E()
  br label %bb15

bb3:                                              ; preds = %bb8
  store i8 1, i8* %_21, align 1
  br label %bb5

bb5:                                              ; preds = %bb15, %bb3
  %14 = load i8, i8* %_21, align 1, !range !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb16, label %bb31

bb15:                                             ; preds = %bb4
  %_41 = icmp ne i32 %_42, 0
  %16 = zext i1 %_41 to i8
  store i8 %16, i8* %_21, align 1
  br label %bb5

bb31:                                             ; preds = %bb5
; call libm::math::fenv::fesetround
  %_64 = call i32 @_ZN4libm4math4fenv10fesetround17hf5e6fde9697553c2E(i32 0)
  br label %bb32

bb16:                                             ; preds = %bb5
  %_45 = icmp slt i32 %e, 897
  br i1 %_45, label %bb21, label %bb20

bb20:                                             ; preds = %bb16
  store i8 0, i8* %_44, align 1
  br label %bb22

bb21:                                             ; preds = %bb16
  %_48 = icmp sge i32 %e, 874
  %17 = zext i1 %_48 to i8
  store i8 %17, i8* %_44, align 1
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %18 = load i8, i8* %_44, align 1, !range !3
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb18, label %bb17

bb17:                                             ; preds = %bb22
  store i8 0, i8* %_43, align 1
  br label %bb19

bb18:                                             ; preds = %bb22
; call libm::math::fenv::fetestexcept
  %_52 = call i32 @_ZN4libm4math4fenv12fetestexcept17h3e334717ad6069e5E(i32 0)
  br label %bb23

bb23:                                             ; preds = %bb18
  %_51 = icmp ne i32 %_52, 0
  %20 = zext i1 %_51 to i8
  store i8 %20, i8* %_43, align 1
  br label %bb19

bb19:                                             ; preds = %bb17, %bb23
  %21 = load i8, i8* %_43, align 1, !range !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb24, label %bb30

bb30:                                             ; preds = %bb29, %bb28, %bb19
  %_63 = load double, double* %result, align 8
  %23 = fptrunc double %_63 to float
  store float %23, float* %z, align 4
  %24 = load float, float* %z, align 4
  store float %24, float* %1, align 4
  br label %bb40

bb24:                                             ; preds = %bb19
; call libm::math::fenv::feclearexcept
  %_53 = call i32 @_ZN4libm4math4fenv13feclearexcept17h66e97fa37d1e62b2E(i32 0)
  br label %bb25

bb25:                                             ; preds = %bb24
; call core::ptr::read_volatile
  %vz = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %z)
  br label %bb26

bb26:                                             ; preds = %bb25
  %_57 = load double, double* %xy, align 8
  %_58 = fpext float %vz to double
  %25 = fadd double %_57, %_58
  store double %25, double* %result, align 8
; call libm::math::fenv::fetestexcept
  %_60 = call i32 @_ZN4libm4math4fenv12fetestexcept17h3e334717ad6069e5E(i32 0)
  br label %bb27

bb27:                                             ; preds = %bb26
  %26 = icmp eq i32 %_60, 0
  br i1 %26, label %bb29, label %bb28

bb29:                                             ; preds = %bb27
; call libm::math::fenv::feraiseexcept
  %_62 = call i32 @_ZN4libm4math4fenv13feraiseexcept17h22257e4b10f4b82fE(i32 0)
  br label %bb30

bb28:                                             ; preds = %bb27
; call libm::math::fenv::feraiseexcept
  %_61 = call i32 @_ZN4libm4math4fenv13feraiseexcept17h22257e4b10f4b82fE(i32 0)
  br label %bb30

bb40:                                             ; preds = %bb39, %bb30
  %27 = load float, float* %1, align 4
  ret float %27

bb32:                                             ; preds = %bb31
; call core::ptr::read_volatile
  %vxy = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %xy)
  br label %bb33

bb33:                                             ; preds = %bb32
  %_71 = load float, float* %z, align 4
  %_70 = fpext float %_71 to double
  %28 = fadd double %vxy, %_70
  store double %28, double* %adjusted_result, align 8
; call libm::math::fenv::fesetround
  %_72 = call i32 @_ZN4libm4math4fenv10fesetround17hf5e6fde9697553c2E(i32 0)
  br label %bb34

bb34:                                             ; preds = %bb33
  %_74 = load double, double* %result, align 8
  %_75 = load double, double* %adjusted_result, align 8
  %_73 = fcmp oeq double %_74, %_75
  br i1 %_73, label %bb35, label %bb39

bb39:                                             ; preds = %bb38, %bb34
  %_81 = load double, double* %adjusted_result, align 8
  %29 = fptrunc double %_81 to float
  store float %29, float* %z, align 4
  %30 = load float, float* %z, align 4
  store float %30, float* %1, align 4
  br label %bb40

bb35:                                             ; preds = %bb34
  %_77 = load double, double* %adjusted_result, align 8
; call core::f64::<impl f64>::to_bits
  %_76 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_77)
  br label %bb36

bb36:                                             ; preds = %bb35
  store i64 %_76, i64* %ui, align 8
  %31 = load i64, i64* %ui, align 8
  %32 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %31, i64 1)
  %_78.0 = extractvalue { i64, i1 } %32, 0
  %_78.1 = extractvalue { i64, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_78.1, i1 false)
  br i1 %33, label %panic, label %bb37

bb37:                                             ; preds = %bb36
  store i64 %_78.0, i64* %ui, align 8
  %_80 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_79 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_80)
  br label %bb38

panic:                                            ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1936 to %"core::panic::location::Location"*)) #11
  unreachable

bb38:                                             ; preds = %bb37
  store double %_79, double* %adjusted_result, align 8
  br label %bb39
}

; libm::math::fmax::fmax
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4fmax4fmax17h4ff10a4aadca4b1fE(double %x, double %y) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca double, align 8
; call core::f64::<impl f64>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
  %_7 = fcmp olt double %x, %y
  %0 = zext i1 %_7 to i8
  store i8 %0, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %_4, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  store double %x, double* %_3, align 8
  br label %bb7

bb5:                                              ; preds = %bb3
  store double %y, double* %_3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %3 = load double, double* %_3, align 8
  %4 = fmul double %3, 1.000000e+00
  ret double %4
}

; libm::math::fmaxf::fmaxf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5fmaxf5fmaxf17h4413032b5960a932E(float %x, float %y) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca float, align 4
; call core::f32::<impl f32>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
  %_7 = fcmp olt float %x, %y
  %0 = zext i1 %_7 to i8
  store i8 %0, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %_4, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  store float %x, float* %_3, align 4
  br label %bb7

bb5:                                              ; preds = %bb3
  store float %y, float* %_3, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %3 = load float, float* %_3, align 4
  %4 = fmul float %3, 1.000000e+00
  ret float %4
}

; libm::math::fmin::fmin
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4fmin4fmin17h97f48c4c368366b3E(double %x, double %y) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca double, align 8
; call core::f64::<impl f64>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %y)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
  %_7 = fcmp olt double %x, %y
  %0 = zext i1 %_7 to i8
  store i8 %0, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %_4, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  store double %y, double* %_3, align 8
  br label %bb7

bb5:                                              ; preds = %bb3
  store double %x, double* %_3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %3 = load double, double* %_3, align 8
  %4 = fmul double %3, 1.000000e+00
  ret double %4
}

; libm::math::fminf::fminf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5fminf5fminf17h731af8c8b5dde2bfE(float %x, float %y) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca float, align 4
; call core::f32::<impl f32>::is_nan
  %_5 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %y)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
  %_7 = fcmp olt float %x, %y
  %0 = zext i1 %_7 to i8
  store i8 %0, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %_4, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  store float %y, float* %_3, align 4
  br label %bb7

bb5:                                              ; preds = %bb3
  store float %x, float* %_3, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %3 = load float, float* %_3, align 4
  %4 = fmul float %3, 1.000000e+00
  ret float %4
}

; libm::math::fmod::fmod
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4fmod4fmod17haa6394d928c7d681E(double %x, double %y) unnamed_addr #1 {
start:
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %i = alloca i64, align 8
  %ey = alloca i64, align 8
  %ex = alloca i64, align 8
  %uyi = alloca i64, align 8
  %uxi = alloca i64, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %uxi, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  store i64 %2, i64* %uyi, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = load i64, i64* %uxi, align 8
  %_11.0 = lshr i64 %_10, 52
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i64 %_11.0, 2047
  store i64 %_8, i64* %ex, align 8
  %_15 = load i64, i64* %uyi, align 8
  %_16.0 = lshr i64 %_15, 52
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = and i64 %_16.0, 2047
  store i64 %_13, i64* %ey, align 8
  %_18 = load i64, i64* %uxi, align 8
  %_19.0 = lshr i64 %_18, 63
  br label %bb5

bb5:                                              ; preds = %bb4
  %_24 = load i64, i64* %uyi, align 8
  %_25.0 = shl i64 %_24, 1
  br label %bb12

bb12:                                             ; preds = %bb5
  %3 = icmp eq i64 %_25.0, 0
  br i1 %3, label %bb9, label %bb10

bb9:                                              ; preds = %bb12
  store i8 1, i8* %_22, align 1
  br label %bb11

bb10:                                             ; preds = %bb12
; call core::f64::<impl f64>::is_nan
  %_26 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %y)
  br label %bb13

bb13:                                             ; preds = %bb10
  %4 = zext i1 %_26 to i8
  store i8 %4, i8* %_22, align 1
  br label %bb11

bb11:                                             ; preds = %bb9, %bb13
  %5 = load i8, i8* %_22, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb7

bb7:                                              ; preds = %bb11
  %_29 = load i64, i64* %ex, align 8
  %_28 = icmp eq i64 %_29, 2047
  %7 = zext i1 %_28 to i8
  store i8 %7, i8* %_21, align 1
  br label %bb8

bb6:                                              ; preds = %bb11
  store i8 1, i8* %_21, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %8 = load i8, i8* %_21, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb14, label %bb15

bb15:                                             ; preds = %bb8
  %_38 = load i64, i64* %uxi, align 8
  %_39.0 = shl i64 %_38, 1
  br label %bb16

bb14:                                             ; preds = %bb8
  %_30 = fmul double %x, %y
  %_33 = fmul double %x, %y
  %10 = fdiv double %_30, %_33
  store double %10, double* %0, align 8
  br label %bb80

bb80:                                             ; preds = %bb63, %bb79, %bb54, %bb22, %bb21, %bb14
  %11 = load double, double* %0, align 8
  ret double %11

bb16:                                             ; preds = %bb15
  %_41 = load i64, i64* %uyi, align 8
  %_42.0 = shl i64 %_41, 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %_36 = icmp ule i64 %_39.0, %_42.0
  br i1 %_36, label %bb18, label %bb23

bb23:                                             ; preds = %bb17
  %_51 = load i64, i64* %ex, align 8
  %12 = icmp eq i64 %_51, 0
  br i1 %12, label %bb24, label %bb25

bb18:                                             ; preds = %bb17
  %_45 = load i64, i64* %uxi, align 8
  %_46.0 = shl i64 %_45, 1
  br label %bb19

bb19:                                             ; preds = %bb18
  %_48 = load i64, i64* %uyi, align 8
  %_49.0 = shl i64 %_48, 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %_43 = icmp eq i64 %_46.0, %_49.0
  br i1 %_43, label %bb21, label %bb22

bb22:                                             ; preds = %bb20
  store double %x, double* %0, align 8
  br label %bb80

bb21:                                             ; preds = %bb20
  %13 = fmul double 0.000000e+00, %x
  store double %13, double* %0, align 8
  br label %bb80

bb24:                                             ; preds = %bb23
  %_52 = load i64, i64* %uxi, align 8
  %_53.0 = shl i64 %_52, 12
  br label %bb26

bb25:                                             ; preds = %bb23
  %14 = load i64, i64* %uxi, align 8
  %15 = and i64 %14, 4503599627370495
  store i64 %15, i64* %uxi, align 8
  %16 = load i64, i64* %uxi, align 8
  %17 = or i64 %16, 4503599627370496
  store i64 %17, i64* %uxi, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb25
  %_67 = load i64, i64* %ey, align 8
  %18 = icmp eq i64 %_67, 0
  br i1 %18, label %bb37, label %bb48

bb26:                                             ; preds = %bb24
  store i64 %_53.0, i64* %i, align 8
  br label %bb27

bb27:                                             ; preds = %bb31, %bb26
  %_55 = load i64, i64* %i, align 8
  %_56.0 = lshr i64 %_55, 63
  br label %bb28

bb28:                                             ; preds = %bb27
  %19 = icmp eq i64 %_56.0, 0
  br i1 %19, label %bb29, label %bb32

bb29:                                             ; preds = %bb28
  %20 = load i64, i64* %ex, align 8
  %21 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %20, i64 1)
  %_57.0 = extractvalue { i64, i1 } %21, 0
  %_57.1 = extractvalue { i64, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_57.1, i1 false)
  br i1 %22, label %panic13, label %bb30

bb32:                                             ; preds = %bb28
  %_61 = load i64, i64* %ex, align 8
  %_62 = icmp eq i64 %_61, -9223372036854775808
  %23 = call i1 @llvm.expect.i1(i1 %_62, i1 false)
  br i1 %23, label %panic, label %bb33

bb33:                                             ; preds = %bb32
  %_60 = sub i64 0, %_61
  %24 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_60, i64 1)
  %_63.0 = extractvalue { i64, i1 } %24, 0
  %_63.1 = extractvalue { i64, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false)
  br i1 %25, label %panic1, label %bb34

panic:                                            ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1938 to %"core::panic::location::Location"*)) #11
  unreachable

bb34:                                             ; preds = %bb33
  %26 = load i64, i64* %uxi, align 8
  %27 = and i64 %_63.0, -64
  %_64.1 = icmp ne i64 %27, 0
  %28 = and i64 %_63.0, 63
  %_64.0 = shl i64 %26, %28
  %29 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false)
  br i1 %29, label %panic2, label %bb35

panic1:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1938 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb34
  store i64 %_64.0, i64* %uxi, align 8
  br label %bb36

panic2:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1940 to %"core::panic::location::Location"*)) #11
  unreachable

bb37:                                             ; preds = %bb36
  %_68 = load i64, i64* %uyi, align 8
  %_69.0 = shl i64 %_68, 12
  br label %bb38

bb48:                                             ; preds = %bb36
  %30 = load i64, i64* %uyi, align 8
  %31 = and i64 %30, 4503599627370495
  store i64 %31, i64* %uyi, align 8
  %32 = load i64, i64* %uyi, align 8
  %33 = or i64 %32, 4503599627370496
  store i64 %33, i64* %uyi, align 8
  br label %bb49

bb49:                                             ; preds = %bb58, %bb47, %bb48
  %_84 = load i64, i64* %ex, align 8
  %_85 = load i64, i64* %ey, align 8
  %_83 = icmp sgt i64 %_84, %_85
  br i1 %_83, label %bb50, label %bb59

bb38:                                             ; preds = %bb37
  store i64 %_69.0, i64* %i, align 8
  br label %bb39

bb39:                                             ; preds = %bb43, %bb38
  %_71 = load i64, i64* %i, align 8
  %_72.0 = lshr i64 %_71, 63
  br label %bb40

bb40:                                             ; preds = %bb39
  %34 = icmp eq i64 %_72.0, 0
  br i1 %34, label %bb41, label %bb44

bb41:                                             ; preds = %bb40
  %35 = load i64, i64* %ey, align 8
  %36 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %35, i64 1)
  %_73.0 = extractvalue { i64, i1 } %36, 0
  %_73.1 = extractvalue { i64, i1 } %36, 1
  %37 = call i1 @llvm.expect.i1(i1 %_73.1, i1 false)
  br i1 %37, label %panic12, label %bb42

bb44:                                             ; preds = %bb40
  %_77 = load i64, i64* %ey, align 8
  %_78 = icmp eq i64 %_77, -9223372036854775808
  %38 = call i1 @llvm.expect.i1(i1 %_78, i1 false)
  br i1 %38, label %panic3, label %bb45

bb45:                                             ; preds = %bb44
  %_76 = sub i64 0, %_77
  %39 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_76, i64 1)
  %_79.0 = extractvalue { i64, i1 } %39, 0
  %_79.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_79.1, i1 false)
  br i1 %40, label %panic4, label %bb46

panic3:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1942 to %"core::panic::location::Location"*)) #11
  unreachable

bb46:                                             ; preds = %bb45
  %41 = load i64, i64* %uyi, align 8
  %42 = and i64 %_79.0, -64
  %_80.1 = icmp ne i64 %42, 0
  %43 = and i64 %_79.0, 63
  %_80.0 = shl i64 %41, %43
  %44 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false)
  br i1 %44, label %panic5, label %bb47

panic4:                                           ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1942 to %"core::panic::location::Location"*)) #11
  unreachable

bb47:                                             ; preds = %bb46
  store i64 %_80.0, i64* %uyi, align 8
  br label %bb49

panic5:                                           ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1944 to %"core::panic::location::Location"*)) #11
  unreachable

bb59:                                             ; preds = %bb49
  %_98 = load i64, i64* %uxi, align 8
  %_99 = load i64, i64* %uyi, align 8
  %45 = sub i64 %_98, %_99
  br label %bb60

bb50:                                             ; preds = %bb49
  %_87 = load i64, i64* %uxi, align 8
  %_88 = load i64, i64* %uyi, align 8
  %46 = sub i64 %_87, %_88
  br label %bb51

bb51:                                             ; preds = %bb50
  store i64 %46, i64* %i, align 8
  %_90 = load i64, i64* %i, align 8
  %_91.0 = lshr i64 %_90, 63
  br label %bb52

bb52:                                             ; preds = %bb51
  %47 = icmp eq i64 %_91.0, 0
  br i1 %47, label %bb53, label %bb56

bb53:                                             ; preds = %bb52
  %_92 = load i64, i64* %i, align 8
  %48 = icmp eq i64 %_92, 0
  br i1 %48, label %bb54, label %bb55

bb56:                                             ; preds = %bb55, %bb52
  %49 = load i64, i64* %uxi, align 8
  %_95.0 = shl i64 %49, 1
  br label %bb57

bb54:                                             ; preds = %bb53
  %50 = fmul double 0.000000e+00, %x
  store double %50, double* %0, align 8
  br label %bb80

bb55:                                             ; preds = %bb53
  %_94 = load i64, i64* %i, align 8
  store i64 %_94, i64* %uxi, align 8
  br label %bb56

bb57:                                             ; preds = %bb56
  store i64 %_95.0, i64* %uxi, align 8
  %51 = load i64, i64* %ex, align 8
  %52 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %51, i64 1)
  %_96.0 = extractvalue { i64, i1 } %52, 0
  %_96.1 = extractvalue { i64, i1 } %52, 1
  %53 = call i1 @llvm.expect.i1(i1 %_96.1, i1 false)
  br i1 %53, label %panic6, label %bb58

bb58:                                             ; preds = %bb57
  store i64 %_96.0, i64* %ex, align 8
  br label %bb49

panic6:                                           ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1946 to %"core::panic::location::Location"*)) #11
  unreachable

bb60:                                             ; preds = %bb59
  store i64 %45, i64* %i, align 8
  %_101 = load i64, i64* %i, align 8
  %_102.0 = lshr i64 %_101, 63
  br label %bb61

bb61:                                             ; preds = %bb60
  %54 = icmp eq i64 %_102.0, 0
  br i1 %54, label %bb62, label %bb65

bb62:                                             ; preds = %bb61
  %_103 = load i64, i64* %i, align 8
  %55 = icmp eq i64 %_103, 0
  br i1 %55, label %bb63, label %bb64

bb65:                                             ; preds = %bb69, %bb64, %bb61
  %_107 = load i64, i64* %uxi, align 8
  %_108.0 = lshr i64 %_107, 52
  br label %bb66

bb63:                                             ; preds = %bb62
  %56 = fmul double 0.000000e+00, %x
  store double %56, double* %0, align 8
  br label %bb80

bb64:                                             ; preds = %bb62
  %_105 = load i64, i64* %i, align 8
  store i64 %_105, i64* %uxi, align 8
  br label %bb65

bb66:                                             ; preds = %bb65
  %57 = icmp eq i64 %_108.0, 0
  br i1 %57, label %bb67, label %bb70

bb67:                                             ; preds = %bb66
  %58 = load i64, i64* %uxi, align 8
  %_109.0 = shl i64 %58, 1
  br label %bb68

bb70:                                             ; preds = %bb66
  %_112 = load i64, i64* %ex, align 8
  %_111 = icmp sgt i64 %_112, 0
  br i1 %_111, label %bb71, label %bb72

bb72:                                             ; preds = %bb70
  %_121 = load i64, i64* %ex, align 8
  %_122 = icmp eq i64 %_121, -9223372036854775808
  %59 = call i1 @llvm.expect.i1(i1 %_122, i1 false)
  br i1 %59, label %panic8, label %bb75

bb71:                                             ; preds = %bb70
  %60 = load i64, i64* %uxi, align 8
  %61 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %60, i64 4503599627370496)
  %_114.0 = extractvalue { i64, i1 } %61, 0
  %_114.1 = extractvalue { i64, i1 } %61, 1
  %62 = call i1 @llvm.expect.i1(i1 %_114.1, i1 false)
  br i1 %62, label %panic7, label %bb73

bb73:                                             ; preds = %bb71
  store i64 %_114.0, i64* %uxi, align 8
  %_117 = load i64, i64* %ex, align 8
  %_118.0 = shl i64 %_117, 52
  br label %bb74

panic7:                                           ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1948 to %"core::panic::location::Location"*)) #11
  unreachable

bb74:                                             ; preds = %bb73
  %63 = load i64, i64* %uxi, align 8
  %64 = or i64 %63, %_118.0
  store i64 %64, i64* %uxi, align 8
  br label %bb78

bb78:                                             ; preds = %bb77, %bb74
  %_127.0 = shl i64 %_19.0, 63
  br label %bb79

bb75:                                             ; preds = %bb72
  %_120 = sub i64 0, %_121
  %65 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_120, i64 1)
  %_123.0 = extractvalue { i64, i1 } %65, 0
  %_123.1 = extractvalue { i64, i1 } %65, 1
  %66 = call i1 @llvm.expect.i1(i1 %_123.1, i1 false)
  br i1 %66, label %panic9, label %bb76

panic8:                                           ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1950 to %"core::panic::location::Location"*)) #11
  unreachable

bb76:                                             ; preds = %bb75
  %67 = load i64, i64* %uxi, align 8
  %68 = and i64 %_123.0, -64
  %_124.1 = icmp ne i64 %68, 0
  %69 = and i64 %_123.0, 63
  %_124.0 = lshr i64 %67, %69
  %70 = call i1 @llvm.expect.i1(i1 %_124.1, i1 false)
  br i1 %70, label %panic10, label %bb77

panic9:                                           ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1950 to %"core::panic::location::Location"*)) #11
  unreachable

bb77:                                             ; preds = %bb76
  store i64 %_124.0, i64* %uxi, align 8
  br label %bb78

panic10:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1952 to %"core::panic::location::Location"*)) #11
  unreachable

bb79:                                             ; preds = %bb78
  %71 = load i64, i64* %uxi, align 8
  %72 = or i64 %71, %_127.0
  store i64 %72, i64* %uxi, align 8
  %_128 = load i64, i64* %uxi, align 8
; call core::f64::<impl f64>::from_bits
  %73 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_128)
  store double %73, double* %0, align 8
  br label %bb80

bb68:                                             ; preds = %bb67
  store i64 %_109.0, i64* %uxi, align 8
  %74 = load i64, i64* %ex, align 8
  %75 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %74, i64 1)
  %_110.0 = extractvalue { i64, i1 } %75, 0
  %_110.1 = extractvalue { i64, i1 } %75, 1
  %76 = call i1 @llvm.expect.i1(i1 %_110.1, i1 false)
  br i1 %76, label %panic11, label %bb69

bb69:                                             ; preds = %bb68
  store i64 %_110.0, i64* %ex, align 8
  br label %bb65

panic11:                                          ; preds = %bb68
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1954 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  store i64 %_73.0, i64* %ey, align 8
  %77 = load i64, i64* %i, align 8
  %_74.0 = shl i64 %77, 1
  br label %bb43

panic12:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1956 to %"core::panic::location::Location"*)) #11
  unreachable

bb43:                                             ; preds = %bb42
  store i64 %_74.0, i64* %i, align 8
  br label %bb39

bb30:                                             ; preds = %bb29
  store i64 %_57.0, i64* %ex, align 8
  %78 = load i64, i64* %i, align 8
  %_58.0 = shl i64 %78, 1
  br label %bb31

panic13:                                          ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1958 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i64 %_58.0, i64* %i, align 8
  br label %bb27
}

; libm::math::fmodf::fmodf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5fmodf5fmodf17hbb16e97d19cc1132E(float %x, float %y) unnamed_addr #1 {
start:
  %_21 = alloca i8, align 1
  %_20 = alloca i8, align 1
  %i = alloca i32, align 4
  %ey = alloca i32, align 4
  %ex = alloca i32, align 4
  %uyi = alloca i32, align 4
  %uxi = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %uxi, align 4
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  store i32 %2, i32* %uyi, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = load i32, i32* %uxi, align 4
  %_11.0 = lshr i32 %_10, 23
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i32 %_11.0, 255
  store i32 %_8, i32* %ex, align 4
  %_15 = load i32, i32* %uyi, align 4
  %_16.0 = lshr i32 %_15, 23
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = and i32 %_16.0, 255
  store i32 %_13, i32* %ey, align 4
  %_18 = load i32, i32* %uxi, align 4
  %sx = and i32 %_18, -2147483648
  %_23 = load i32, i32* %uyi, align 4
  %_24.0 = shl i32 %_23, 1
  br label %bb11

bb11:                                             ; preds = %bb4
  %3 = icmp eq i32 %_24.0, 0
  br i1 %3, label %bb8, label %bb9

bb8:                                              ; preds = %bb11
  store i8 1, i8* %_21, align 1
  br label %bb10

bb9:                                              ; preds = %bb11
; call core::f32::<impl f32>::is_nan
  %_25 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %y)
  br label %bb12

bb12:                                             ; preds = %bb9
  %4 = zext i1 %_25 to i8
  store i8 %4, i8* %_21, align 1
  br label %bb10

bb10:                                             ; preds = %bb8, %bb12
  %5 = load i8, i8* %_21, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb5, label %bb6

bb6:                                              ; preds = %bb10
  %_28 = load i32, i32* %ex, align 4
  %_27 = icmp eq i32 %_28, 255
  %7 = zext i1 %_27 to i8
  store i8 %7, i8* %_20, align 1
  br label %bb7

bb5:                                              ; preds = %bb10
  store i8 1, i8* %_20, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %8 = load i8, i8* %_20, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb13, label %bb14

bb14:                                             ; preds = %bb7
  %_37 = load i32, i32* %uxi, align 4
  %_38.0 = shl i32 %_37, 1
  br label %bb15

bb13:                                             ; preds = %bb7
  %_29 = fmul float %x, %y
  %_32 = fmul float %x, %y
  %10 = fdiv float %_29, %_32
  store float %10, float* %0, align 4
  br label %bb78

bb78:                                             ; preds = %bb62, %bb77, %bb53, %bb21, %bb20, %bb13
  %11 = load float, float* %0, align 4
  ret float %11

bb15:                                             ; preds = %bb14
  %_40 = load i32, i32* %uyi, align 4
  %_41.0 = shl i32 %_40, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %_35 = icmp ule i32 %_38.0, %_41.0
  br i1 %_35, label %bb17, label %bb22

bb22:                                             ; preds = %bb16
  %_50 = load i32, i32* %ex, align 4
  %12 = icmp eq i32 %_50, 0
  br i1 %12, label %bb23, label %bb24

bb17:                                             ; preds = %bb16
  %_44 = load i32, i32* %uxi, align 4
  %_45.0 = shl i32 %_44, 1
  br label %bb18

bb18:                                             ; preds = %bb17
  %_47 = load i32, i32* %uyi, align 4
  %_48.0 = shl i32 %_47, 1
  br label %bb19

bb19:                                             ; preds = %bb18
  %_42 = icmp eq i32 %_45.0, %_48.0
  br i1 %_42, label %bb20, label %bb21

bb21:                                             ; preds = %bb19
  store float %x, float* %0, align 4
  br label %bb78

bb20:                                             ; preds = %bb19
  %13 = fmul float 0.000000e+00, %x
  store float %13, float* %0, align 4
  br label %bb78

bb23:                                             ; preds = %bb22
  %_51 = load i32, i32* %uxi, align 4
  %_52.0 = shl i32 %_51, 9
  br label %bb25

bb24:                                             ; preds = %bb22
  %14 = load i32, i32* %uxi, align 4
  %15 = and i32 %14, 8388607
  store i32 %15, i32* %uxi, align 4
  %16 = load i32, i32* %uxi, align 4
  %17 = or i32 %16, 8388608
  store i32 %17, i32* %uxi, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %bb24
  %_66 = load i32, i32* %ey, align 4
  %18 = icmp eq i32 %_66, 0
  br i1 %18, label %bb36, label %bb47

bb25:                                             ; preds = %bb23
  store i32 %_52.0, i32* %i, align 4
  br label %bb26

bb26:                                             ; preds = %bb30, %bb25
  %_54 = load i32, i32* %i, align 4
  %_55.0 = lshr i32 %_54, 31
  br label %bb27

bb27:                                             ; preds = %bb26
  %19 = icmp eq i32 %_55.0, 0
  br i1 %19, label %bb28, label %bb31

bb28:                                             ; preds = %bb27
  %20 = load i32, i32* %ex, align 4
  %21 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 1)
  %_56.0 = extractvalue { i32, i1 } %21, 0
  %_56.1 = extractvalue { i32, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false)
  br i1 %22, label %panic13, label %bb29

bb31:                                             ; preds = %bb27
  %_60 = load i32, i32* %ex, align 4
  %_61 = icmp eq i32 %_60, -2147483648
  %23 = call i1 @llvm.expect.i1(i1 %_61, i1 false)
  br i1 %23, label %panic, label %bb32

bb32:                                             ; preds = %bb31
  %_59 = sub i32 0, %_60
  %24 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_59, i32 1)
  %_62.0 = extractvalue { i32, i1 } %24, 0
  %_62.1 = extractvalue { i32, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false)
  br i1 %25, label %panic1, label %bb33

panic:                                            ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1960 to %"core::panic::location::Location"*)) #11
  unreachable

bb33:                                             ; preds = %bb32
  %26 = load i32, i32* %uxi, align 4
  %27 = and i32 %_62.0, -32
  %_63.1 = icmp ne i32 %27, 0
  %28 = and i32 %_62.0, 31
  %_63.0 = shl i32 %26, %28
  %29 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false)
  br i1 %29, label %panic2, label %bb34

panic1:                                           ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1960 to %"core::panic::location::Location"*)) #11
  unreachable

bb34:                                             ; preds = %bb33
  store i32 %_63.0, i32* %uxi, align 4
  br label %bb35

panic2:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1962 to %"core::panic::location::Location"*)) #11
  unreachable

bb36:                                             ; preds = %bb35
  %_67 = load i32, i32* %uyi, align 4
  %_68.0 = shl i32 %_67, 9
  br label %bb37

bb47:                                             ; preds = %bb35
  %30 = load i32, i32* %uyi, align 4
  %31 = and i32 %30, 8388607
  store i32 %31, i32* %uyi, align 4
  %32 = load i32, i32* %uyi, align 4
  %33 = or i32 %32, 8388608
  store i32 %33, i32* %uyi, align 4
  br label %bb48

bb48:                                             ; preds = %bb57, %bb46, %bb47
  %_83 = load i32, i32* %ex, align 4
  %_84 = load i32, i32* %ey, align 4
  %_82 = icmp sgt i32 %_83, %_84
  br i1 %_82, label %bb49, label %bb58

bb37:                                             ; preds = %bb36
  store i32 %_68.0, i32* %i, align 4
  br label %bb38

bb38:                                             ; preds = %bb42, %bb37
  %_70 = load i32, i32* %i, align 4
  %_71.0 = lshr i32 %_70, 31
  br label %bb39

bb39:                                             ; preds = %bb38
  %34 = icmp eq i32 %_71.0, 0
  br i1 %34, label %bb40, label %bb43

bb40:                                             ; preds = %bb39
  %35 = load i32, i32* %ey, align 4
  %36 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %35, i32 1)
  %_72.0 = extractvalue { i32, i1 } %36, 0
  %_72.1 = extractvalue { i32, i1 } %36, 1
  %37 = call i1 @llvm.expect.i1(i1 %_72.1, i1 false)
  br i1 %37, label %panic12, label %bb41

bb43:                                             ; preds = %bb39
  %_76 = load i32, i32* %ey, align 4
  %_77 = icmp eq i32 %_76, -2147483648
  %38 = call i1 @llvm.expect.i1(i1 %_77, i1 false)
  br i1 %38, label %panic3, label %bb44

bb44:                                             ; preds = %bb43
  %_75 = sub i32 0, %_76
  %39 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_75, i32 1)
  %_78.0 = extractvalue { i32, i1 } %39, 0
  %_78.1 = extractvalue { i32, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_78.1, i1 false)
  br i1 %40, label %panic4, label %bb45

panic3:                                           ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1964 to %"core::panic::location::Location"*)) #11
  unreachable

bb45:                                             ; preds = %bb44
  %41 = load i32, i32* %uyi, align 4
  %42 = and i32 %_78.0, -32
  %_79.1 = icmp ne i32 %42, 0
  %43 = and i32 %_78.0, 31
  %_79.0 = shl i32 %41, %43
  %44 = call i1 @llvm.expect.i1(i1 %_79.1, i1 false)
  br i1 %44, label %panic5, label %bb46

panic4:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1964 to %"core::panic::location::Location"*)) #11
  unreachable

bb46:                                             ; preds = %bb45
  store i32 %_79.0, i32* %uyi, align 4
  br label %bb48

panic5:                                           ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1966 to %"core::panic::location::Location"*)) #11
  unreachable

bb58:                                             ; preds = %bb48
  %_97 = load i32, i32* %uxi, align 4
  %_98 = load i32, i32* %uyi, align 4
  %45 = sub i32 %_97, %_98
  br label %bb59

bb49:                                             ; preds = %bb48
  %_86 = load i32, i32* %uxi, align 4
  %_87 = load i32, i32* %uyi, align 4
  %46 = sub i32 %_86, %_87
  br label %bb50

bb50:                                             ; preds = %bb49
  store i32 %46, i32* %i, align 4
  %_89 = load i32, i32* %i, align 4
  %_90.0 = lshr i32 %_89, 31
  br label %bb51

bb51:                                             ; preds = %bb50
  %47 = icmp eq i32 %_90.0, 0
  br i1 %47, label %bb52, label %bb55

bb52:                                             ; preds = %bb51
  %_91 = load i32, i32* %i, align 4
  %48 = icmp eq i32 %_91, 0
  br i1 %48, label %bb53, label %bb54

bb55:                                             ; preds = %bb54, %bb51
  %49 = load i32, i32* %uxi, align 4
  %_94.0 = shl i32 %49, 1
  br label %bb56

bb53:                                             ; preds = %bb52
  %50 = fmul float 0.000000e+00, %x
  store float %50, float* %0, align 4
  br label %bb78

bb54:                                             ; preds = %bb52
  %_93 = load i32, i32* %i, align 4
  store i32 %_93, i32* %uxi, align 4
  br label %bb55

bb56:                                             ; preds = %bb55
  store i32 %_94.0, i32* %uxi, align 4
  %51 = load i32, i32* %ex, align 4
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 1)
  %_95.0 = extractvalue { i32, i1 } %52, 0
  %_95.1 = extractvalue { i32, i1 } %52, 1
  %53 = call i1 @llvm.expect.i1(i1 %_95.1, i1 false)
  br i1 %53, label %panic6, label %bb57

bb57:                                             ; preds = %bb56
  store i32 %_95.0, i32* %ex, align 4
  br label %bb48

panic6:                                           ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1968 to %"core::panic::location::Location"*)) #11
  unreachable

bb59:                                             ; preds = %bb58
  store i32 %45, i32* %i, align 4
  %_100 = load i32, i32* %i, align 4
  %_101.0 = lshr i32 %_100, 31
  br label %bb60

bb60:                                             ; preds = %bb59
  %54 = icmp eq i32 %_101.0, 0
  br i1 %54, label %bb61, label %bb64

bb61:                                             ; preds = %bb60
  %_102 = load i32, i32* %i, align 4
  %55 = icmp eq i32 %_102, 0
  br i1 %55, label %bb62, label %bb63

bb64:                                             ; preds = %bb68, %bb63, %bb60
  %_106 = load i32, i32* %uxi, align 4
  %_107.0 = lshr i32 %_106, 23
  br label %bb65

bb62:                                             ; preds = %bb61
  %56 = fmul float 0.000000e+00, %x
  store float %56, float* %0, align 4
  br label %bb78

bb63:                                             ; preds = %bb61
  %_104 = load i32, i32* %i, align 4
  store i32 %_104, i32* %uxi, align 4
  br label %bb64

bb65:                                             ; preds = %bb64
  %57 = icmp eq i32 %_107.0, 0
  br i1 %57, label %bb66, label %bb69

bb66:                                             ; preds = %bb65
  %58 = load i32, i32* %uxi, align 4
  %_108.0 = shl i32 %58, 1
  br label %bb67

bb69:                                             ; preds = %bb65
  %_111 = load i32, i32* %ex, align 4
  %_110 = icmp sgt i32 %_111, 0
  br i1 %_110, label %bb70, label %bb71

bb71:                                             ; preds = %bb69
  %_120 = load i32, i32* %ex, align 4
  %_121 = icmp eq i32 %_120, -2147483648
  %59 = call i1 @llvm.expect.i1(i1 %_121, i1 false)
  br i1 %59, label %panic8, label %bb74

bb70:                                             ; preds = %bb69
  %60 = load i32, i32* %uxi, align 4
  %61 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %60, i32 8388608)
  %_113.0 = extractvalue { i32, i1 } %61, 0
  %_113.1 = extractvalue { i32, i1 } %61, 1
  %62 = call i1 @llvm.expect.i1(i1 %_113.1, i1 false)
  br i1 %62, label %panic7, label %bb72

bb72:                                             ; preds = %bb70
  store i32 %_113.0, i32* %uxi, align 4
  %_116 = load i32, i32* %ex, align 4
  %_117.0 = shl i32 %_116, 23
  br label %bb73

panic7:                                           ; preds = %bb70
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1970 to %"core::panic::location::Location"*)) #11
  unreachable

bb73:                                             ; preds = %bb72
  %63 = load i32, i32* %uxi, align 4
  %64 = or i32 %63, %_117.0
  store i32 %64, i32* %uxi, align 4
  br label %bb77

bb77:                                             ; preds = %bb76, %bb73
  %65 = load i32, i32* %uxi, align 4
  %66 = or i32 %65, %sx
  store i32 %66, i32* %uxi, align 4
  %_125 = load i32, i32* %uxi, align 4
; call core::f32::<impl f32>::from_bits
  %67 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_125)
  store float %67, float* %0, align 4
  br label %bb78

bb74:                                             ; preds = %bb71
  %_119 = sub i32 0, %_120
  %68 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_119, i32 1)
  %_122.0 = extractvalue { i32, i1 } %68, 0
  %_122.1 = extractvalue { i32, i1 } %68, 1
  %69 = call i1 @llvm.expect.i1(i1 %_122.1, i1 false)
  br i1 %69, label %panic9, label %bb75

panic8:                                           ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1972 to %"core::panic::location::Location"*)) #11
  unreachable

bb75:                                             ; preds = %bb74
  %70 = load i32, i32* %uxi, align 4
  %71 = and i32 %_122.0, -32
  %_123.1 = icmp ne i32 %71, 0
  %72 = and i32 %_122.0, 31
  %_123.0 = lshr i32 %70, %72
  %73 = call i1 @llvm.expect.i1(i1 %_123.1, i1 false)
  br i1 %73, label %panic10, label %bb76

panic9:                                           ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1972 to %"core::panic::location::Location"*)) #11
  unreachable

bb76:                                             ; preds = %bb75
  store i32 %_123.0, i32* %uxi, align 4
  br label %bb77

panic10:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1974 to %"core::panic::location::Location"*)) #11
  unreachable

bb67:                                             ; preds = %bb66
  store i32 %_108.0, i32* %uxi, align 4
  %74 = load i32, i32* %ex, align 4
  %75 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 1)
  %_109.0 = extractvalue { i32, i1 } %75, 0
  %_109.1 = extractvalue { i32, i1 } %75, 1
  %76 = call i1 @llvm.expect.i1(i1 %_109.1, i1 false)
  br i1 %76, label %panic11, label %bb68

bb68:                                             ; preds = %bb67
  store i32 %_109.0, i32* %ex, align 4
  br label %bb64

panic11:                                          ; preds = %bb67
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1976 to %"core::panic::location::Location"*)) #11
  unreachable

bb41:                                             ; preds = %bb40
  store i32 %_72.0, i32* %ey, align 4
  %77 = load i32, i32* %i, align 4
  %_73.0 = shl i32 %77, 1
  br label %bb42

panic12:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1978 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  store i32 %_73.0, i32* %i, align 4
  br label %bb38

bb29:                                             ; preds = %bb28
  store i32 %_56.0, i32* %ex, align 4
  %78 = load i32, i32* %i, align 4
  %_57.0 = shl i32 %78, 1
  br label %bb30

panic13:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1980 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_57.0, i32* %i, align 4
  br label %bb26
}

; libm::math::frexp::frexp
; Function Attrs: nonlazybind uwtable
define { double, i32 } @_ZN4libm4math5frexp5frexp17ha31f5043bef879afE(double %x) unnamed_addr #1 {
start:
  %y = alloca i64, align 8
  %0 = alloca { double, i32 }, align 8
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %y, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %y, align 8
  %_8.0 = lshr i64 %_7, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i64 %_8.0, 2047
  %ee = trunc i64 %_5 to i32
  %2 = icmp eq i32 %ee, 0
  br i1 %2, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %_10 = fcmp une double %x, 0.000000e+00
  br i1 %_10, label %bb4, label %bb8

bb9:                                              ; preds = %bb2
  %3 = icmp eq i32 %ee, 2047
  br i1 %3, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %4 = bitcast { double, i32 }* %0 to double*
  store double %x, double* %4, align 8
  %5 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  br label %bb14

bb11:                                             ; preds = %bb9
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %ee, i32 1022)
  %_28.0 = extractvalue { i32, i1 } %6, 0
  %_28.1 = extractvalue { i32, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %7, label %panic, label %bb12

bb12:                                             ; preds = %bb11
  %8 = load i64, i64* %y, align 8
  %9 = and i64 %8, -9218868437227405313
  store i64 %9, i64* %y, align 8
  %10 = load i64, i64* %y, align 8
  %11 = or i64 %10, 4602678819172646912
  store i64 %11, i64* %y, align 8
  %_30 = load i64, i64* %y, align 8
; call core::f64::<impl f64>::from_bits
  %_29 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_30)
  br label %bb13

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1982 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %12 = bitcast { double, i32 }* %0 to double*
  store double %_29, double* %12, align 8
  %13 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %_28.0, i32* %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb8, %bb7, %bb10, %bb13
  %14 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { double, i32 } undef, double %15, 0
  %19 = insertvalue { double, i32 } %18, i32 %17, 1
  ret { double, i32 } %19

bb8:                                              ; preds = %bb3
  %20 = bitcast { double, i32 }* %0 to double*
  store double %x, double* %20, align 8
  %21 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 0, i32* %21, align 8
  br label %bb14

bb4:                                              ; preds = %bb3
; call core::f64::<impl f64>::from_bits
  %x1p64 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4895412794951729152)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = fmul double %x, %x1p64
; call libm::math::frexp::frexp
  %22 = call { double, i32 } @_ZN4libm4math5frexp5frexp17ha31f5043bef879afE(double %_16)
  %_15.0 = extractvalue { double, i32 } %22, 0
  %_15.1 = extractvalue { double, i32 } %22, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_15.1, i32 64)
  %_22.0 = extractvalue { i32, i1 } %23, 0
  %_22.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %24, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast { double, i32 }* %0 to double*
  store double %_15.0, double* %25, align 8
  %26 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %_22.0, i32* %26, align 8
  br label %bb14

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1984 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::frexpf::frexpf
; Function Attrs: nonlazybind uwtable
define { float, i32 } @_ZN4libm4math6frexpf6frexpf17hb2a17f8c909f45baE(float %x) unnamed_addr #1 {
start:
  %y = alloca i32, align 4
  %0 = alloca { float, i32 }, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %y, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i32, i32* %y, align 4
  %_8.0 = lshr i32 %_7, 23
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i32 %_8.0, 255
  %2 = icmp eq i32 %_5, 0
  br i1 %2, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %_10 = fcmp une float %x, 0.000000e+00
  br i1 %_10, label %bb4, label %bb8

bb9:                                              ; preds = %bb2
  %3 = icmp eq i32 %_5, 255
  br i1 %3, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %4 = bitcast { float, i32 }* %0 to float*
  store float %x, float* %4, align 4
  %5 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 1
  store i32 0, i32* %5, align 4
  br label %bb14

bb11:                                             ; preds = %bb9
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_5, i32 126)
  %_28.0 = extractvalue { i32, i1 } %6, 0
  %_28.1 = extractvalue { i32, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %7, label %panic, label %bb12

bb12:                                             ; preds = %bb11
  %8 = load i32, i32* %y, align 4
  %9 = and i32 %8, -2139095041
  store i32 %9, i32* %y, align 4
  %10 = load i32, i32* %y, align 4
  %11 = or i32 %10, 1056964608
  store i32 %11, i32* %y, align 4
  %_30 = load i32, i32* %y, align 4
; call core::f32::<impl f32>::from_bits
  %_29 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_30)
  br label %bb13

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1986 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %12 = bitcast { float, i32 }* %0 to float*
  store float %_29, float* %12, align 4
  %13 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 1
  store i32 %_28.0, i32* %13, align 4
  br label %bb14

bb14:                                             ; preds = %bb8, %bb7, %bb10, %bb13
  %14 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = insertvalue { float, i32 } undef, float %15, 0
  %19 = insertvalue { float, i32 } %18, i32 %17, 1
  ret { float, i32 } %19

bb8:                                              ; preds = %bb3
  %20 = bitcast { float, i32 }* %0 to float*
  store float %x, float* %20, align 4
  %21 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 1
  store i32 0, i32* %21, align 4
  br label %bb14

bb4:                                              ; preds = %bb3
; call core::f32::<impl f32>::from_bits
  %x1p64 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1602224128)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = fmul float %x, %x1p64
; call libm::math::frexpf::frexpf
  %22 = call { float, i32 } @_ZN4libm4math6frexpf6frexpf17hb2a17f8c909f45baE(float %_16)
  %_15.0 = extractvalue { float, i32 } %22, 0
  %_15.1 = extractvalue { float, i32 } %22, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_15.1, i32 64)
  %_22.0 = extractvalue { i32, i1 } %23, 0
  %_22.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %24, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast { float, i32 }* %0 to float*
  store float %_15.0, float* %25, align 4
  %26 = getelementptr inbounds { float, i32 }, { float, i32 }* %0, i32 0, i32 1
  store i32 %_22.0, i32* %26, align 4
  br label %bb14

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1988 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::hypot::sq
; Function Attrs: nonlazybind uwtable
define internal { double, double } @_ZN4libm4math5hypot2sq17ha5cc8f6ed36131ccE(double %x) unnamed_addr #1 {
start:
  %0 = alloca { double, double }, align 8
  %xc = fmul double %x, 0x41A0000002000000
  %_6 = fsub double %x, %xc
  %xh = fadd double %_6, %xc
  %xl = fsub double %x, %xh
  %hi = fmul double %x, %x
  %_18 = fmul double %xh, %xh
  %_17 = fsub double %_18, %hi
  %_23 = fmul double 2.000000e+00, %xh
  %_22 = fmul double %_23, %xl
  %_16 = fadd double %_17, %_22
  %_26 = fmul double %xl, %xl
  %lo = fadd double %_16, %_26
  %1 = bitcast { double, double }* %0 to double*
  store double %hi, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %lo, double* %2, align 8
  %3 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  %6 = load double, double* %5, align 8
  %7 = insertvalue { double, double } undef, double %4, 0
  %8 = insertvalue { double, double } %7, double %6, 1
  ret { double, double } %8
}

; libm::math::hypot::hypot
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5hypot5hypot17h78390fe50fd72439E(double %0, double %1) unnamed_addr #1 {
start:
  %_32 = alloca i8, align 1
  %z = alloca double, align 8
  %uyi = alloca i64, align 8
  %uxi = alloca i64, align 8
  %2 = alloca double, align 8
  %y = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  store double %1, double* %y, align 8
; call core::f64::<impl f64>::from_bits
  %x1p700 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 7759702157959364608)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %x1p_700 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 1454662679640670208)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_6)
  store i64 %3, i64* %uxi, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = load double, double* %y, align 8
; call core::f64::<impl f64>::to_bits
  %4 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_8)
  store i64 %4, i64* %uyi, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = load i64, i64* %uxi, align 8
  %6 = and i64 %5, 9223372036854775807
  store i64 %6, i64* %uxi, align 8
  %7 = load i64, i64* %uyi, align 8
  %8 = and i64 %7, 9223372036854775807
  store i64 %8, i64* %uyi, align 8
  %_16 = load i64, i64* %uxi, align 8
  %_17 = load i64, i64* %uyi, align 8
  %_15 = icmp ult i64 %_16, %_17
  br i1 %_15, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %_22 = load i64, i64* %uxi, align 8
  %_23.0 = lshr i64 %_22, 52
  br label %bb7

bb5:                                              ; preds = %bb4
  %_18 = load i64, i64* %uxi, align 8
  %_19 = load i64, i64* %uyi, align 8
  store i64 %_19, i64* %uxi, align 8
  store i64 %_18, i64* %uyi, align 8
  br label %bb6

bb7:                                              ; preds = %bb6
  %_25 = load i64, i64* %uyi, align 8
  %_26.0 = lshr i64 %_25, 52
  br label %bb8

bb8:                                              ; preds = %bb7
  %_28 = load i64, i64* %uxi, align 8
; call core::f64::<impl f64>::from_bits
  %_27 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_28)
  br label %bb9

bb9:                                              ; preds = %bb8
  store double %_27, double* %x, align 8
  %_30 = load i64, i64* %uyi, align 8
; call core::f64::<impl f64>::from_bits
  %_29 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_30)
  br label %bb10

bb10:                                             ; preds = %bb9
  store double %_29, double* %y, align 8
  %9 = icmp eq i64 %_26.0, 2047
  br i1 %9, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %10 = load double, double* %y, align 8
  store double %10, double* %2, align 8
  br label %bb28

bb12:                                             ; preds = %bb10
  %11 = icmp eq i64 %_23.0, 2047
  br i1 %11, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  store i8 1, i8* %_32, align 1
  br label %bb15

bb14:                                             ; preds = %bb12
  %_35 = load i64, i64* %uyi, align 8
  %_34 = icmp eq i64 %_35, 0
  %12 = zext i1 %_34 to i8
  store i8 %12, i8* %_32, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %13 = load i8, i8* %_32, align 1, !range !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb16, label %bb17

bb17:                                             ; preds = %bb15
  %15 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_23.0, i64 %_26.0)
  %_40.0 = extractvalue { i64, i1 } %15, 0
  %_40.1 = extractvalue { i64, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false)
  br i1 %16, label %panic, label %bb18

bb16:                                             ; preds = %bb15
  %17 = load double, double* %x, align 8
  store double %17, double* %2, align 8
  br label %bb28

bb28:                                             ; preds = %bb11, %bb27, %bb19, %bb16
  %18 = load double, double* %2, align 8
  ret double %18

bb18:                                             ; preds = %bb17
  %_36 = icmp sgt i64 %_40.0, 64
  br i1 %_36, label %bb19, label %bb20

panic:                                            ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1990 to %"core::panic::location::Location"*)) #11
  unreachable

bb20:                                             ; preds = %bb18
  store double 1.000000e+00, double* %z, align 8
  %_43 = icmp sgt i64 %_23.0, 1533
  br i1 %_43, label %bb21, label %bb22

bb19:                                             ; preds = %bb18
  %_41 = load double, double* %x, align 8
  %_42 = load double, double* %y, align 8
  %19 = fadd double %_41, %_42
  store double %19, double* %2, align 8
  br label %bb28

bb22:                                             ; preds = %bb20
  %_49 = icmp slt i64 %_26.0, 573
  br i1 %_49, label %bb23, label %bb24

bb21:                                             ; preds = %bb20
  store double %x1p700, double* %z, align 8
  %20 = load double, double* %x, align 8
  %21 = fmul double %20, %x1p_700
  store double %21, double* %x, align 8
  %22 = load double, double* %y, align 8
  %23 = fmul double %22, %x1p_700
  store double %23, double* %y, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22, %bb21
  %_58 = load double, double* %x, align 8
; call libm::math::hypot::sq
  %24 = call { double, double } @_ZN4libm4math5hypot2sq17ha5cc8f6ed36131ccE(double %_58)
  %_57.0 = extractvalue { double, double } %24, 0
  %_57.1 = extractvalue { double, double } %24, 1
  br label %bb25

bb23:                                             ; preds = %bb22
  store double %x1p_700, double* %z, align 8
  %25 = load double, double* %x, align 8
  %26 = fmul double %25, %x1p700
  store double %26, double* %x, align 8
  %27 = load double, double* %y, align 8
  %28 = fmul double %27, %x1p700
  store double %28, double* %y, align 8
  br label %bb24

bb25:                                             ; preds = %bb24
  %_62 = load double, double* %y, align 8
; call libm::math::hypot::sq
  %29 = call { double, double } @_ZN4libm4math5hypot2sq17ha5cc8f6ed36131ccE(double %_62)
  %_61.0 = extractvalue { double, double } %29, 0
  %_61.1 = extractvalue { double, double } %29, 1
  br label %bb26

bb26:                                             ; preds = %bb25
  %_63 = load double, double* %z, align 8
  %_67 = fadd double %_61.1, %_57.1
  %_66 = fadd double %_67, %_61.0
  %_65 = fadd double %_66, %_57.0
; call libm::math::sqrt::sqrt
  %_64 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_65)
  br label %bb27

bb27:                                             ; preds = %bb26
  %30 = fmul double %_63, %_64
  store double %30, double* %2, align 8
  br label %bb28
}

; libm::math::hypotf::hypotf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6hypotf6hypotf17h48beff13e615b24eE(float %0, float %1) unnamed_addr #1 {
start:
  %_27 = alloca i8, align 1
  %_26 = alloca i8, align 1
  %z = alloca float, align 4
  %uyi = alloca i32, align 4
  %uxi = alloca i32, align 4
  %2 = alloca float, align 4
  %y = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  store float %1, float* %y, align 4
; call core::f32::<impl f32>::from_bits
  %x1p90 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1820327936)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::from_bits
  %x1p_90 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 310378496)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %3 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_6)
  store i32 %3, i32* %uxi, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = load float, float* %y, align 4
; call core::f32::<impl f32>::to_bits
  %4 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_8)
  store i32 %4, i32* %uyi, align 4
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = load i32, i32* %uxi, align 4
  %6 = and i32 %5, 2147483647
  store i32 %6, i32* %uxi, align 4
  %7 = load i32, i32* %uyi, align 4
  %8 = and i32 %7, 2147483647
  store i32 %8, i32* %uyi, align 4
  %_14 = load i32, i32* %uxi, align 4
  %_15 = load i32, i32* %uyi, align 4
  %_13 = icmp ult i32 %_14, %_15
  br i1 %_13, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %_20 = load i32, i32* %uxi, align 4
; call core::f32::<impl f32>::from_bits
  %_19 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_20)
  br label %bb7

bb5:                                              ; preds = %bb4
  %_16 = load i32, i32* %uxi, align 4
  %_17 = load i32, i32* %uyi, align 4
  store i32 %_17, i32* %uxi, align 4
  store i32 %_16, i32* %uyi, align 4
  br label %bb6

bb7:                                              ; preds = %bb6
  store float %_19, float* %x, align 4
  %_22 = load i32, i32* %uyi, align 4
; call core::f32::<impl f32>::from_bits
  %_21 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_22)
  br label %bb8

bb8:                                              ; preds = %bb7
  store float %_21, float* %y, align 4
  %_24 = load i32, i32* %uyi, align 4
  %_23 = icmp eq i32 %_24, 2139095040
  br i1 %_23, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %_29 = load i32, i32* %uxi, align 4
  %_28 = icmp uge i32 %_29, 2139095040
  br i1 %_28, label %bb14, label %bb15

bb9:                                              ; preds = %bb8
  %9 = load float, float* %y, align 4
  store float %9, float* %2, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb18, %bb9
  %10 = load float, float* %2, align 4
  ret float %10

bb15:                                             ; preds = %bb10
  %_32 = load i32, i32* %uyi, align 4
  %_31 = icmp eq i32 %_32, 0
  %11 = zext i1 %_31 to i8
  store i8 %11, i8* %_27, align 1
  br label %bb16

bb14:                                             ; preds = %bb10
  store i8 1, i8* %_27, align 1
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %12 = load i8, i8* %_27, align 1, !range !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb12

bb12:                                             ; preds = %bb16
  %_35 = load i32, i32* %uxi, align 4
  %_36 = load i32, i32* %uyi, align 4
  %14 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %_35, i32 %_36)
  %_37.0 = extractvalue { i32, i1 } %14, 0
  %_37.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %15, label %panic, label %bb17

bb11:                                             ; preds = %bb16
  store i8 1, i8* %_26, align 1
  br label %bb13

bb13:                                             ; preds = %bb17, %bb11
  %16 = load i8, i8* %_26, align 1, !range !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb18, label %bb19

bb17:                                             ; preds = %bb12
  %_33 = icmp uge i32 %_37.0, 209715200
  %18 = zext i1 %_33 to i8
  store i8 %18, i8* %_26, align 1
  br label %bb13

panic:                                            ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1992 to %"core::panic::location::Location"*)) #11
  unreachable

bb19:                                             ; preds = %bb13
  store float 1.000000e+00, float* %z, align 4
  %_42 = load i32, i32* %uxi, align 4
  %_41 = icmp uge i32 %_42, 1568669696
  br i1 %_41, label %bb20, label %bb21

bb18:                                             ; preds = %bb13
  %_39 = load float, float* %x, align 4
  %_40 = load float, float* %y, align 4
  %19 = fadd float %_39, %_40
  store float %19, float* %2, align 4
  br label %bb25

bb21:                                             ; preds = %bb19
  %_48 = load i32, i32* %uyi, align 4
  %_47 = icmp ult i32 %_48, 562036736
  br i1 %_47, label %bb22, label %bb23

bb20:                                             ; preds = %bb19
  store float %x1p90, float* %z, align 4
  %20 = load float, float* %x, align 4
  %21 = fmul float %20, %x1p_90
  store float %21, float* %x, align 4
  %22 = load float, float* %y, align 4
  %23 = fmul float %22, %x1p_90
  store float %23, float* %y, align 4
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21, %bb20
  %_53 = load float, float* %z, align 4
  %_59 = load float, float* %x, align 4
  %_58 = fpext float %_59 to double
  %_61 = load float, float* %x, align 4
  %_60 = fpext float %_61 to double
  %_57 = fmul double %_58, %_60
  %_64 = load float, float* %y, align 4
  %_63 = fpext float %_64 to double
  %_66 = load float, float* %y, align 4
  %_65 = fpext float %_66 to double
  %_62 = fmul double %_63, %_65
  %_56 = fadd double %_57, %_62
  %_55 = fptrunc double %_56 to float
; call libm::math::sqrtf::sqrtf
  %_54 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %_55)
  br label %bb24

bb22:                                             ; preds = %bb21
  store float %x1p_90, float* %z, align 4
  %24 = load float, float* %x, align 4
  %25 = fmul float %24, %x1p90
  store float %25, float* %x, align 4
  %26 = load float, float* %y, align 4
  %27 = fmul float %26, %x1p90
  store float %27, float* %y, align 4
  br label %bb23

bb24:                                             ; preds = %bb23
  %28 = fmul float %_53, %_54
  store float %28, float* %2, align 4
  br label %bb25
}

; libm::math::ilogb::ilogb
; Function Attrs: nonlazybind uwtable
define i32 @_ZN4libm4math5ilogb5ilogb17he5a4bf701d4947b0E(double %x) unnamed_addr #1 {
start:
  %e = alloca i32, align 4
  %i = alloca i64, align 8
  %0 = alloca i32, align 4
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %i, align 8
  %_8.0 = lshr i64 %_7, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i64 %_8.0, 2047
  %e1 = trunc i64 %_5 to i32
  %2 = icmp eq i32 %e1, 0
  br i1 %2, label %bb3, label %bb14

bb3:                                              ; preds = %bb2
  %3 = load i64, i64* %i, align 8
  %_10.0 = shl i64 %3, 12
  br label %bb4

bb14:                                             ; preds = %bb2
  %4 = icmp eq i32 %e1, 2047
  br i1 %4, label %bb15, label %bb20

bb15:                                             ; preds = %bb14
; call core::ptr::read_volatile
  %_22 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* bitcast (<{ [8 x i8] }>* @alloc1263 to double*))
  br label %bb16

bb20:                                             ; preds = %bb14
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %e1, i32 1023)
  %_29.0 = extractvalue { i32, i1 } %5, 0
  %_29.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %6, label %panic, label %bb21

bb21:                                             ; preds = %bb20
  store i32 %_29.0, i32* %0, align 4
  br label %bb22

panic:                                            ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1994 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb6, %bb13, %bb19, %bb18, %bb21
  %7 = load i32, i32* %0, align 4
  ret i32 %7

bb16:                                             ; preds = %bb15
  %_26 = load i64, i64* %i, align 8
  %_27.0 = shl i64 %_26, 12
  br label %bb17

bb17:                                             ; preds = %bb16
  %8 = icmp eq i64 %_27.0, 0
  br i1 %8, label %bb19, label %bb18

bb19:                                             ; preds = %bb17
  store i32 2147483647, i32* %0, align 4
  br label %bb22

bb18:                                             ; preds = %bb17
  store i32 -2147483648, i32* %0, align 4
  br label %bb22

bb4:                                              ; preds = %bb3
  store i64 %_10.0, i64* %i, align 8
  %_11 = load i64, i64* %i, align 8
  %9 = icmp eq i64 %_11, 0
  br i1 %9, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
; call core::ptr::read_volatile
  %_12 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* bitcast (<{ [8 x i8] }>* @alloc1263 to double*))
  br label %bb6

bb7:                                              ; preds = %bb4
  store i32 -1023, i32* %e, align 4
  br label %bb8

bb8:                                              ; preds = %bb12, %bb7
  %_17 = load i64, i64* %i, align 8
  %_18.0 = lshr i64 %_17, 63
  br label %bb9

bb9:                                              ; preds = %bb8
  %10 = icmp eq i64 %_18.0, 0
  br i1 %10, label %bb10, label %bb13

bb10:                                             ; preds = %bb9
  %11 = load i32, i32* %e, align 4
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 1)
  %_19.0 = extractvalue { i32, i1 } %12, 0
  %_19.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false)
  br i1 %13, label %panic2, label %bb11

bb13:                                             ; preds = %bb9
  %14 = load i32, i32* %e, align 4
  store i32 %14, i32* %0, align 4
  br label %bb22

bb11:                                             ; preds = %bb10
  store i32 %_19.0, i32* %e, align 4
  %15 = load i64, i64* %i, align 8
  %_20.0 = shl i64 %15, 1
  br label %bb12

panic2:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1996 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  store i64 %_20.0, i64* %i, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store i32 -2147483648, i32* %0, align 4
  br label %bb22
}

; libm::math::ilogbf::ilogbf
; Function Attrs: nonlazybind uwtable
define i32 @_ZN4libm4math6ilogbf6ilogbf17h495945137f563369E(float %x) unnamed_addr #1 {
start:
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = alloca i32, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %i, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i32, i32* %i, align 4
  %_8.0 = lshr i32 %_7, 23
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = and i32 %_8.0, 255
  %2 = icmp eq i32 %_5, 0
  br i1 %2, label %bb3, label %bb14

bb3:                                              ; preds = %bb2
  %3 = load i32, i32* %i, align 4
  %_10.0 = shl i32 %3, 9
  br label %bb4

bb14:                                             ; preds = %bb2
  %4 = icmp eq i32 %_5, 255
  br i1 %4, label %bb15, label %bb20

bb15:                                             ; preds = %bb14
; call core::ptr::read_volatile
  %_22 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* bitcast (<{ [8 x i8] }>* @alloc1263 to double*))
  br label %bb16

bb20:                                             ; preds = %bb14
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_5, i32 127)
  %_29.0 = extractvalue { i32, i1 } %5, 0
  %_29.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %6, label %panic, label %bb21

bb21:                                             ; preds = %bb20
  store i32 %_29.0, i32* %0, align 4
  br label %bb22

panic:                                            ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1998 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb6, %bb13, %bb19, %bb18, %bb21
  %7 = load i32, i32* %0, align 4
  ret i32 %7

bb16:                                             ; preds = %bb15
  %_26 = load i32, i32* %i, align 4
  %_27.0 = shl i32 %_26, 9
  br label %bb17

bb17:                                             ; preds = %bb16
  %8 = icmp eq i32 %_27.0, 0
  br i1 %8, label %bb19, label %bb18

bb19:                                             ; preds = %bb17
  store i32 2147483647, i32* %0, align 4
  br label %bb22

bb18:                                             ; preds = %bb17
  store i32 -2147483648, i32* %0, align 4
  br label %bb22

bb4:                                              ; preds = %bb3
  store i32 %_10.0, i32* %i, align 4
  %_11 = load i32, i32* %i, align 4
  %9 = icmp eq i32 %_11, 0
  br i1 %9, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
; call core::ptr::read_volatile
  %_12 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* bitcast (<{ [8 x i8] }>* @alloc1263 to double*))
  br label %bb6

bb7:                                              ; preds = %bb4
  store i32 -127, i32* %e, align 4
  br label %bb8

bb8:                                              ; preds = %bb12, %bb7
  %_17 = load i32, i32* %i, align 4
  %_18.0 = lshr i32 %_17, 31
  br label %bb9

bb9:                                              ; preds = %bb8
  %10 = icmp eq i32 %_18.0, 0
  br i1 %10, label %bb10, label %bb13

bb10:                                             ; preds = %bb9
  %11 = load i32, i32* %e, align 4
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 1)
  %_19.0 = extractvalue { i32, i1 } %12, 0
  %_19.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false)
  br i1 %13, label %panic1, label %bb11

bb13:                                             ; preds = %bb9
  %14 = load i32, i32* %e, align 4
  store i32 %14, i32* %0, align 4
  br label %bb22

bb11:                                             ; preds = %bb10
  store i32 %_19.0, i32* %e, align 4
  %15 = load i32, i32* %i, align 4
  %_20.0 = shl i32 %15, 1
  br label %bb12

panic1:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2000 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  store i32 %_20.0, i32* %i, align 4
  br label %bb8

bb6:                                              ; preds = %bb5
  store i32 -2147483648, i32* %0, align 4
  br label %bb22
}

; libm::math::j0::common
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j06common17h650a7e5f4eb03e9fE(i32 %ix, double %x, i1 zeroext %y0) unnamed_addr #1 {
start:
  %cc = alloca double, align 8
  %ss = alloca double, align 8
  %c = alloca double, align 8
; call libm::math::sin::sin
  %_9 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb1

bb1:                                              ; preds = %start
; call libm::math::cos::cos
  %_11 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  store double %_11, double* %c, align 8
  br i1 %y0, label %bb3, label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %_16 = load double, double* %c, align 8
  %0 = fadd double %_9, %_16
  store double %0, double* %cc, align 8
  %_17 = icmp ult i32 %ix, 2145386496
  br i1 %_17, label %bb5, label %bb15

bb3:                                              ; preds = %bb2
  %_14 = load double, double* %c, align 8
  %1 = fneg double %_14
  store double %1, double* %c, align 8
  br label %bb4

bb15:                                             ; preds = %bb14, %bb9, %bb4
  %_45 = load double, double* %cc, align 8
  %_44 = fmul double 0x3FE20DD750429B6D, %_45
; call libm::math::sqrt::sqrt
  %_46 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %x)
  br label %bb16

bb5:                                              ; preds = %bb4
  %_20 = load double, double* %c, align 8
  %2 = fsub double %_9, %_20
  store double %2, double* %ss, align 8
  %_22 = fmul double 2.000000e+00, %x
; call libm::math::cos::cos
  %_21 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_22)
  br label %bb6

bb6:                                              ; preds = %bb5
  %z = fneg double %_21
  %_27 = load double, double* %c, align 8
  %_25 = fmul double %_9, %_27
  %_24 = fcmp olt double %_25, 0.000000e+00
  br i1 %_24, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %_31 = load double, double* %cc, align 8
  %3 = fdiv double %z, %_31
  store double %3, double* %ss, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  %_29 = load double, double* %ss, align 8
  %4 = fdiv double %z, %_29
  store double %4, double* %cc, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %_32 = icmp ult i32 %ix, 1207959552
  br i1 %_32, label %bb10, label %bb15

bb10:                                             ; preds = %bb9
  br i1 %y0, label %bb11, label %bb12

bb12:                                             ; preds = %bb11, %bb10
; call libm::math::j0::pzero
  %_37 = call double @_ZN4libm4math2j05pzero17hf285e81b1139166aE(double %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %_35 = load double, double* %ss, align 8
  %5 = fneg double %_35
  store double %5, double* %ss, align 8
  br label %bb12

bb13:                                             ; preds = %bb12
  %_39 = load double, double* %cc, align 8
  %_36 = fmul double %_37, %_39
; call libm::math::j0::qzero
  %_41 = call double @_ZN4libm4math2j05qzero17h029d33f71d50347eE(double %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_43 = load double, double* %ss, align 8
  %_40 = fmul double %_41, %_43
  %6 = fsub double %_36, %_40
  store double %6, double* %cc, align 8
  br label %bb15

bb16:                                             ; preds = %bb15
  %7 = fdiv double %_44, %_46
  ret double %7
}

; libm::math::j0::j0
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2j02j017h7f90eb7a5d325e4cE(double %0) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_7 = load double, double* %x, align 8
; call libm::math::get_high_word
  %_6 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_7)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_6, i32* %ix, align 4
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_9 = load i32, i32* %ix, align 4
  %_8 = icmp uge i32 %_9, 2146435072
  br i1 %_8, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_14 = load double, double* %x, align 8
; call libm::math::fabs::fabs
  %_13 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_14)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_11 = load double, double* %x, align 8
  %_12 = load double, double* %x, align 8
  %_10 = fmul double %_11, %_12
  %4 = fdiv double 1.000000e+00, %_10
  store double %4, double* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7, %bb5, %bb2
  %5 = load double, double* %1, align 8
  ret double %5

bb4:                                              ; preds = %bb3
  store double %_13, double* %x, align 8
  %_16 = load i32, i32* %ix, align 4
  %_15 = icmp uge i32 %_16, 1073741824
  br i1 %_15, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %_20 = load i32, i32* %ix, align 4
  %_19 = icmp uge i32 %_20, 1059061760
  br i1 %_19, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %_17 = load i32, i32* %ix, align 4
  %_18 = load double, double* %x, align 8
; call libm::math::j0::common
  %6 = call double @_ZN4libm4math2j06common17h650a7e5f4eb03e9fE(i32 %_17, double %_18, i1 zeroext false)
  store double %6, double* %1, align 8
  br label %bb11

bb8:                                              ; preds = %bb6
  %_57 = load i32, i32* %ix, align 4
  %_56 = icmp uge i32 %_57, 939524096
  br i1 %_56, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %_21 = load double, double* %x, align 8
  %_22 = load double, double* %x, align 8
  %z = fmul double %_21, %_22
  %_31 = fmul double %z, 0xBE33D5E773D63FCE
  %_30 = fadd double 0x3EBEB1D10C503919, %_31
  %_28 = fmul double %z, %_30
  %_27 = fadd double 0xBF28E6A5B61AC6E9, %_28
  %_25 = fmul double %z, %_27
  %_24 = fadd double 0x3F8FFFFFFFFFFFFD, %_25
  %r = fmul double %z, %_24
  %_42 = fmul double %z, 0x3E1408BCF4745D8F
  %_41 = fadd double 0x3EA13B54CE84D5A9, %_42
  %_39 = fmul double %z, %_41
  %_38 = fadd double 0x3F1EA6D2DD57DBF4, %_39
  %_36 = fmul double %z, %_38
  %_35 = fadd double 0x3F8FFCE882C8C2A4, %_36
  %_33 = fmul double %z, %_35
  %s = fadd double 1.000000e+00, %_33
  %_47 = load double, double* %x, align 8
  %_46 = fdiv double %_47, 2.000000e+00
  %_45 = fadd double 1.000000e+00, %_46
  %_50 = load double, double* %x, align 8
  %_49 = fdiv double %_50, 2.000000e+00
  %_48 = fsub double 1.000000e+00, %_49
  %_44 = fmul double %_45, %_48
  %_53 = fdiv double %r, %s
  %_51 = fmul double %z, %_53
  %7 = fadd double %_44, %_51
  store double %7, double* %1, align 8
  br label %bb11

bb10:                                             ; preds = %bb9, %bb8
  %_61 = load double, double* %x, align 8
  %8 = fsub double 1.000000e+00, %_61
  store double %8, double* %1, align 8
  br label %bb11

bb9:                                              ; preds = %bb8
  %_59 = load double, double* %x, align 8
  %_58 = fmul double 2.500000e-01, %_59
  %_60 = load double, double* %x, align 8
  %9 = fmul double %_58, %_60
  store double %9, double* %x, align 8
  br label %bb10
}

; libm::math::j0::y0
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2j02y017haf1ce0e0a6cf39ccE(double %x) unnamed_addr #1 {
start:
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_7 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
; call libm::math::get_low_word
  %_9 = call i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_14.0 = shl i32 %_7, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = or i32 %_14.0, %_9
  %1 = icmp eq i32 %_11, 0
  br i1 %1, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store double 0xFFF0000000000000, double* %0, align 8
  br label %bb18

bb5:                                              ; preds = %bb3
  %_18.0 = lshr i32 %_7, 31
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = icmp eq i32 %_18.0, 0
  br i1 %2, label %bb8, label %bb7

bb8:                                              ; preds = %bb6
  %_19 = icmp uge i32 %_7, 2146435072
  br i1 %_19, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  store double 0x7FF8000000000000, double* %0, align 8
  br label %bb18

bb18:                                             ; preds = %bb4, %bb17, %bb16, %bb11, %bb9, %bb7
  %3 = load double, double* %0, align 8
  ret double %3

bb10:                                             ; preds = %bb8
  %_22 = icmp uge i32 %_7, 1073741824
  br i1 %_22, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
  %4 = fdiv double 1.000000e+00, %x
  store double %4, double* %0, align 8
  br label %bb18

bb12:                                             ; preds = %bb10
  %_26 = icmp uge i32 %_7, 1044381696
  br i1 %_26, label %bb13, label %bb14

bb11:                                             ; preds = %bb10
; call libm::math::j0::common
  %5 = call double @_ZN4libm4math2j06common17h650a7e5f4eb03e9fE(i32 %_7, double %x, i1 zeroext true)
  store double %5, double* %0, align 8
  br label %bb18

bb14:                                             ; preds = %bb12
; call libm::math::log::log
  %_68 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %x)
  br label %bb17

bb13:                                             ; preds = %bb12
  %z = fmul double %x, %x
  %_45 = fmul double %z, 0xBDC5E43D693FB3C8
  %_44 = fadd double 0x3E5500573B4EABD4, %_45
  %_42 = fmul double %z, %_44
  %_41 = fadd double 0xBECFFEA773D25CAD, %_42
  %_39 = fmul double %z, %_41
  %_38 = fadd double 0x3F36C54D20B29B6B, %_39
  %_36 = fmul double %z, %_38
  %_35 = fadd double 0xBF8C4CE8B16CFA97, %_36
  %_33 = fmul double %z, %_35
  %_32 = fadd double 0x3FC69D019DE9E3FC, %_33
  %_30 = fmul double %z, %_32
  %u = fadd double 0xBFB2E4D699CBD01F, %_30
  %_56 = fmul double %z, 0x3DFE50183BD6D9EF
  %_55 = fadd double 0x3E91642D7FF202FD, %_56
  %_53 = fmul double %z, %_55
  %_52 = fadd double 0x3F13ECBBF578C6C1, %_53
  %_50 = fmul double %z, %_52
  %_49 = fadd double 0x3F8A127091C9C71A, %_50
  %_47 = fmul double %z, %_49
  %v = fadd double 1.000000e+00, %_47
  %_58 = fdiv double %u, %v
; call libm::math::j0::j0
  %_63 = call double @_ZN4libm4math2j02j017h7f90eb7a5d325e4cE(double %x)
  br label %bb15

bb15:                                             ; preds = %bb13
; call libm::math::log::log
  %_65 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %x)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_62 = fmul double %_63, %_65
  %_61 = fmul double 0x3FE45F306DC9C883, %_62
  %6 = fadd double %_58, %_61
  store double %6, double* %0, align 8
  br label %bb18

bb17:                                             ; preds = %bb14
  %_67 = fmul double 0x3FE45F306DC9C883, %_68
  %7 = fadd double 0xBFB2E4D699CBD01F, %_67
  store double %7, double* %0, align 8
  br label %bb18
}

; libm::math::j0::pzero
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j05pzero17hf285e81b1139166aE(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [5 x double]*, align 8
  %p = alloca [6 x double]*, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1075838976
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1074933387
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1272 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1275 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul double %x, %x
  %z = fdiv double 1.000000e+00, %_32
  %2 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x double], [6 x double]* %2, i64 0, i64 0
  %_35 = load double, double* %3, align 8
  %4 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x double], [6 x double]* %4, i64 0, i64 1
  %_40 = load double, double* %5, align 8
  %6 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x double], [6 x double]* %6, i64 0, i64 2
  %_45 = load double, double* %7, align 8
  %8 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 3
  %_50 = load double, double* %9, align 8
  %10 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x double], [6 x double]* %10, i64 0, i64 4
  %_55 = load double, double* %11, align 8
  %12 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x double], [6 x double]* %12, i64 0, i64 5
  %_59 = load double, double* %13, align 8
  %_57 = fmul double %z, %_59
  %_54 = fadd double %_55, %_57
  %_52 = fmul double %z, %_54
  %_49 = fadd double %_50, %_52
  %_47 = fmul double %z, %_49
  %_44 = fadd double %_45, %_47
  %_42 = fmul double %z, %_44
  %_39 = fadd double %_40, %_42
  %_37 = fmul double %z, %_39
  %r = fadd double %_35, %_37
  %14 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [5 x double], [5 x double]* %14, i64 0, i64 0
  %_64 = load double, double* %15, align 8
  %16 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [5 x double], [5 x double]* %16, i64 0, i64 1
  %_69 = load double, double* %17, align 8
  %18 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [5 x double], [5 x double]* %18, i64 0, i64 2
  %_74 = load double, double* %19, align 8
  %20 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [5 x double], [5 x double]* %20, i64 0, i64 3
  %_79 = load double, double* %21, align 8
  %22 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [5 x double], [5 x double]* %22, i64 0, i64 4
  %_83 = load double, double* %23, align 8
  %_81 = fmul double %z, %_83
  %_78 = fadd double %_79, %_81
  %_76 = fmul double %z, %_78
  %_73 = fadd double %_74, %_76
  %_71 = fmul double %z, %_73
  %_68 = fadd double %_69, %_71
  %_66 = fmul double %z, %_68
  %_63 = fadd double %_64, %_66
  %_61 = fmul double %z, %_63
  %s = fadd double 1.000000e+00, %_61
  %_85 = fdiv double %r, %s
  %24 = fadd double 1.000000e+00, %_85
  ret double %24

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1074191213
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1278 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1281 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1290 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1293 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1284 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1287 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8
}

; libm::math::j0::qzero
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j05qzero17h029d33f71d50347eE(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [6 x double]*, align 8
  %p = alloca [6 x double]*, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1075838976
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1074933387
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1297 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1300 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul double %x, %x
  %z = fdiv double 1.000000e+00, %_32
  %2 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x double], [6 x double]* %2, i64 0, i64 0
  %_35 = load double, double* %3, align 8
  %4 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x double], [6 x double]* %4, i64 0, i64 1
  %_40 = load double, double* %5, align 8
  %6 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x double], [6 x double]* %6, i64 0, i64 2
  %_45 = load double, double* %7, align 8
  %8 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 3
  %_50 = load double, double* %9, align 8
  %10 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x double], [6 x double]* %10, i64 0, i64 4
  %_55 = load double, double* %11, align 8
  %12 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x double], [6 x double]* %12, i64 0, i64 5
  %_59 = load double, double* %13, align 8
  %_57 = fmul double %z, %_59
  %_54 = fadd double %_55, %_57
  %_52 = fmul double %z, %_54
  %_49 = fadd double %_50, %_52
  %_47 = fmul double %z, %_49
  %_44 = fadd double %_45, %_47
  %_42 = fmul double %z, %_44
  %_39 = fadd double %_40, %_42
  %_37 = fmul double %z, %_39
  %r = fadd double %_35, %_37
  %14 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [6 x double], [6 x double]* %14, i64 0, i64 0
  %_64 = load double, double* %15, align 8
  %16 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [6 x double], [6 x double]* %16, i64 0, i64 1
  %_69 = load double, double* %17, align 8
  %18 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [6 x double], [6 x double]* %18, i64 0, i64 2
  %_74 = load double, double* %19, align 8
  %20 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [6 x double], [6 x double]* %20, i64 0, i64 3
  %_79 = load double, double* %21, align 8
  %22 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [6 x double], [6 x double]* %22, i64 0, i64 4
  %_84 = load double, double* %23, align 8
  %24 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %25 = getelementptr inbounds [6 x double], [6 x double]* %24, i64 0, i64 5
  %_88 = load double, double* %25, align 8
  %_86 = fmul double %z, %_88
  %_83 = fadd double %_84, %_86
  %_81 = fmul double %z, %_83
  %_78 = fadd double %_79, %_81
  %_76 = fmul double %z, %_78
  %_73 = fadd double %_74, %_76
  %_71 = fmul double %z, %_73
  %_68 = fadd double %_69, %_71
  %_66 = fmul double %z, %_68
  %_63 = fadd double %_64, %_66
  %_61 = fmul double %z, %_63
  %s = fadd double 1.000000e+00, %_61
  %_91 = fdiv double %r, %s
  %_90 = fadd double -1.250000e-01, %_91
  %26 = fdiv double %_90, %x
  ret double %26

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1074191213
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1303 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1306 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1315 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1318 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1309 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1312 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8
}

; libm::math::j0f::common
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j0f6common17h32c6d500a76b8c6eE(i32 %ix, float %x, i1 zeroext %y0) unnamed_addr #1 {
start:
  %cc = alloca float, align 4
  %ss = alloca float, align 4
  %c = alloca float, align 4
; call libm::math::sinf::sinf
  %_9 = call float @_ZN4libm4math4sinf4sinf17h4c42ac16e64b15baE(float %x)
  br label %bb1

bb1:                                              ; preds = %start
; call libm::math::cosf::cosf
  %_11 = call float @_ZN4libm4math4cosf4cosf17h2f3b18ee77688ea2E(float %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  store float %_11, float* %c, align 4
  br i1 %y0, label %bb3, label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %_16 = load float, float* %c, align 4
  %0 = fadd float %_9, %_16
  store float %0, float* %cc, align 4
  %_17 = icmp ult i32 %ix, 2130706432
  br i1 %_17, label %bb5, label %bb15

bb3:                                              ; preds = %bb2
  %_14 = load float, float* %c, align 4
  %1 = fneg float %_14
  store float %1, float* %c, align 4
  br label %bb4

bb15:                                             ; preds = %bb14, %bb9, %bb4
  %_45 = load float, float* %cc, align 4
  %_44 = fmul float 0x3FE20DD760000000, %_45
; call libm::math::sqrtf::sqrtf
  %_46 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %x)
  br label %bb16

bb5:                                              ; preds = %bb4
  %_20 = load float, float* %c, align 4
  %2 = fsub float %_9, %_20
  store float %2, float* %ss, align 4
  %_22 = fmul float 2.000000e+00, %x
; call libm::math::cosf::cosf
  %_21 = call float @_ZN4libm4math4cosf4cosf17h2f3b18ee77688ea2E(float %_22)
  br label %bb6

bb6:                                              ; preds = %bb5
  %z = fneg float %_21
  %_27 = load float, float* %c, align 4
  %_25 = fmul float %_9, %_27
  %_24 = fcmp olt float %_25, 0.000000e+00
  br i1 %_24, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %_31 = load float, float* %cc, align 4
  %3 = fdiv float %z, %_31
  store float %3, float* %ss, align 4
  br label %bb9

bb7:                                              ; preds = %bb6
  %_29 = load float, float* %ss, align 4
  %4 = fdiv float %z, %_29
  store float %4, float* %cc, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %_32 = icmp ult i32 %ix, 1484783616
  br i1 %_32, label %bb10, label %bb15

bb10:                                             ; preds = %bb9
  br i1 %y0, label %bb11, label %bb12

bb12:                                             ; preds = %bb11, %bb10
; call libm::math::j0f::pzerof
  %_37 = call float @_ZN4libm4math3j0f6pzerof17h3e36e7cad3bca8afE(float %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %_35 = load float, float* %ss, align 4
  %5 = fneg float %_35
  store float %5, float* %ss, align 4
  br label %bb12

bb13:                                             ; preds = %bb12
  %_39 = load float, float* %cc, align 4
  %_36 = fmul float %_37, %_39
; call libm::math::j0f::qzerof
  %_41 = call float @_ZN4libm4math3j0f6qzerof17hf56127ced4669cbeE(float %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_43 = load float, float* %ss, align 4
  %_40 = fmul float %_41, %_43
  %6 = fsub float %_36, %_40
  store float %6, float* %cc, align 4
  br label %bb15

bb16:                                             ; preds = %bb15
  %7 = fdiv float %_44, %_46
  ret float %7
}

; libm::math::j0f::j0f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3j0f3j0f17h25cd59ecf73abe6dE(float %0) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_7 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_6 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_7)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_6, i32* %ix, align 4
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_9 = load i32, i32* %ix, align 4
  %_8 = icmp uge i32 %_9, 2139095040
  br i1 %_8, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_14 = load float, float* %x, align 4
; call libm::math::fabsf::fabsf
  %_13 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_14)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_11 = load float, float* %x, align 4
  %_12 = load float, float* %x, align 4
  %_10 = fmul float %_11, %_12
  %4 = fdiv float 1.000000e+00, %_10
  store float %4, float* %1, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7, %bb5, %bb2
  %5 = load float, float* %1, align 4
  ret float %5

bb4:                                              ; preds = %bb3
  store float %_13, float* %x, align 4
  %_16 = load i32, i32* %ix, align 4
  %_15 = icmp uge i32 %_16, 1073741824
  br i1 %_15, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %_20 = load i32, i32* %ix, align 4
  %_19 = icmp uge i32 %_20, 973078528
  br i1 %_19, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %_17 = load i32, i32* %ix, align 4
  %_18 = load float, float* %x, align 4
; call libm::math::j0f::common
  %6 = call float @_ZN4libm4math3j0f6common17h32c6d500a76b8c6eE(i32 %_17, float %_18, i1 zeroext false)
  store float %6, float* %1, align 4
  br label %bb11

bb8:                                              ; preds = %bb6
  %_57 = load i32, i32* %ix, align 4
  %_56 = icmp uge i32 %_57, 562036736
  br i1 %_56, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %_21 = load float, float* %x, align 4
  %_22 = load float, float* %x, align 4
  %z = fmul float %_21, %_22
  %_31 = fmul float %z, 0xBE33D5E780000000
  %_30 = fadd float 0x3EBEB1D100000000, %_31
  %_28 = fmul float %z, %_30
  %_27 = fadd float 0xBF28E6A5C0000000, %_28
  %_25 = fmul float %z, %_27
  %_24 = fadd float 1.562500e-02, %_25
  %r = fmul float %z, %_24
  %_42 = fmul float %z, 0x3E1408BD00000000
  %_41 = fadd float 0x3EA13B54C0000000, %_42
  %_39 = fmul float %z, %_41
  %_38 = fadd float 0x3F1EA6D2E0000000, %_39
  %_36 = fmul float %z, %_38
  %_35 = fadd float 0x3F8FFCE880000000, %_36
  %_33 = fmul float %z, %_35
  %s = fadd float 1.000000e+00, %_33
  %_47 = load float, float* %x, align 4
  %_46 = fdiv float %_47, 2.000000e+00
  %_45 = fadd float 1.000000e+00, %_46
  %_50 = load float, float* %x, align 4
  %_49 = fdiv float %_50, 2.000000e+00
  %_48 = fsub float 1.000000e+00, %_49
  %_44 = fmul float %_45, %_48
  %_53 = fdiv float %r, %s
  %_51 = fmul float %z, %_53
  %7 = fadd float %_44, %_51
  store float %7, float* %1, align 4
  br label %bb11

bb10:                                             ; preds = %bb9, %bb8
  %_61 = load float, float* %x, align 4
  %8 = fsub float 1.000000e+00, %_61
  store float %8, float* %1, align 4
  br label %bb11

bb9:                                              ; preds = %bb8
  %_59 = load float, float* %x, align 4
  %_58 = fmul float 2.500000e-01, %_59
  %_60 = load float, float* %x, align 4
  %9 = fmul float %_58, %_60
  store float %9, float* %x, align 4
  br label %bb10
}

; libm::math::j0f::y0f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3j0f3y0f17h78ad8b03df33fe62E(float %x) unnamed_addr #1 {
start:
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_6 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = and i32 %_6, 2147483647
  %1 = icmp eq i32 %_8, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store float 0xFFF0000000000000, float* %0, align 4
  br label %bb16

bb3:                                              ; preds = %bb1
  %_12.0 = lshr i32 %_6, 31
  br label %bb4

bb4:                                              ; preds = %bb3
  %2 = icmp eq i32 %_12.0, 0
  br i1 %2, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %_13 = icmp uge i32 %_6, 2139095040
  br i1 %_13, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  store float 0x7FF8000000000000, float* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb2, %bb15, %bb14, %bb9, %bb7, %bb5
  %3 = load float, float* %0, align 4
  ret float %3

bb8:                                              ; preds = %bb6
  %_16 = icmp uge i32 %_6, 1073741824
  br i1 %_16, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %4 = fdiv float 1.000000e+00, %x
  store float %4, float* %0, align 4
  br label %bb16

bb10:                                             ; preds = %bb8
  %_20 = icmp uge i32 %_6, 956301312
  br i1 %_20, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
; call libm::math::j0f::common
  %5 = call float @_ZN4libm4math3j0f6common17h32c6d500a76b8c6eE(i32 %_6, float %x, i1 zeroext true)
  store float %5, float* %0, align 4
  br label %bb16

bb12:                                             ; preds = %bb10
; call libm::math::logf::logf
  %_62 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %x)
  br label %bb15

bb11:                                             ; preds = %bb10
  %z = fmul float %x, %x
  %_39 = fmul float %z, 0xBDC5E43D60000000
  %_38 = fadd float 0x3E55005740000000, %_39
  %_36 = fmul float %z, %_38
  %_35 = fadd float 0xBECFFEA780000000, %_36
  %_33 = fmul float %z, %_35
  %_32 = fadd float 0x3F36C54D20000000, %_33
  %_30 = fmul float %z, %_32
  %_29 = fadd float 0xBF8C4CE8C0000000, %_30
  %_27 = fmul float %z, %_29
  %_26 = fadd float 0x3FC69D01A0000000, %_27
  %_24 = fmul float %z, %_26
  %u = fadd float 0xBFB2E4D6A0000000, %_24
  %_50 = fmul float %z, 0x3DFE501840000000
  %_49 = fadd float 0x3E91642D80000000, %_50
  %_47 = fmul float %z, %_49
  %_46 = fadd float 0x3F13ECBC00000000, %_47
  %_44 = fmul float %z, %_46
  %_43 = fadd float 0x3F8A1270A0000000, %_44
  %_41 = fmul float %z, %_43
  %v = fadd float 1.000000e+00, %_41
  %_52 = fdiv float %u, %v
; call libm::math::j0f::j0f
  %_57 = call float @_ZN4libm4math3j0f3j0f17h25cd59ecf73abe6dE(float %x)
  br label %bb13

bb13:                                             ; preds = %bb11
; call libm::math::logf::logf
  %_59 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_56 = fmul float %_57, %_59
  %_55 = fmul float 0x3FE45F3060000000, %_56
  %6 = fadd float %_52, %_55
  store float %6, float* %0, align 4
  br label %bb16

bb15:                                             ; preds = %bb12
  %_61 = fmul float 0x3FE45F3060000000, %_62
  %7 = fadd float 0xBFB2E4D6A0000000, %_61
  store float %7, float* %0, align 4
  br label %bb16
}

; libm::math::j0f::pzerof
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j0f6pzerof17h3e36e7cad3bca8afE(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [5 x float]*, align 8
  %p = alloca [6 x float]*, align 8
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1090519040
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1083274219
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1326 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1329 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul float %x, %x
  %z = fdiv float 1.000000e+00, %_32
  %2 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 0
  %_35 = load float, float* %3, align 4
  %4 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 1
  %_40 = load float, float* %5, align 4
  %6 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x float], [6 x float]* %6, i64 0, i64 2
  %_45 = load float, float* %7, align 4
  %8 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x float], [6 x float]* %8, i64 0, i64 3
  %_50 = load float, float* %9, align 4
  %10 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x float], [6 x float]* %10, i64 0, i64 4
  %_55 = load float, float* %11, align 4
  %12 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x float], [6 x float]* %12, i64 0, i64 5
  %_59 = load float, float* %13, align 4
  %_57 = fmul float %z, %_59
  %_54 = fadd float %_55, %_57
  %_52 = fmul float %z, %_54
  %_49 = fadd float %_50, %_52
  %_47 = fmul float %z, %_49
  %_44 = fadd float %_45, %_47
  %_42 = fmul float %z, %_44
  %_39 = fadd float %_40, %_42
  %_37 = fmul float %z, %_39
  %r = fadd float %_35, %_37
  %14 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [5 x float], [5 x float]* %14, i64 0, i64 0
  %_64 = load float, float* %15, align 4
  %16 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [5 x float], [5 x float]* %16, i64 0, i64 1
  %_69 = load float, float* %17, align 4
  %18 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 2
  %_74 = load float, float* %19, align 4
  %20 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [5 x float], [5 x float]* %20, i64 0, i64 3
  %_79 = load float, float* %21, align 4
  %22 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 4
  %_83 = load float, float* %23, align 4
  %_81 = fmul float %z, %_83
  %_78 = fadd float %_79, %_81
  %_76 = fmul float %z, %_78
  %_73 = fadd float %_74, %_76
  %_71 = fmul float %z, %_73
  %_68 = fadd float %_69, %_71
  %_66 = fmul float %z, %_68
  %_63 = fadd float %_64, %_66
  %_61 = fmul float %z, %_63
  %s = fadd float 1.000000e+00, %_61
  %_85 = fdiv float %r, %s
  %24 = fadd float 1.000000e+00, %_85
  ret float %24

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1077336343
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1332 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1335 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1344 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1347 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1338 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1341 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8
}

; libm::math::j0f::qzerof
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j0f6qzerof17hf56127ced4669cbeE(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [6 x float]*, align 8
  %p = alloca [6 x float]*, align 8
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1090519040
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1083274219
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1351 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1354 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul float %x, %x
  %z = fdiv float 1.000000e+00, %_32
  %2 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 0
  %_35 = load float, float* %3, align 4
  %4 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 1
  %_40 = load float, float* %5, align 4
  %6 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x float], [6 x float]* %6, i64 0, i64 2
  %_45 = load float, float* %7, align 4
  %8 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x float], [6 x float]* %8, i64 0, i64 3
  %_50 = load float, float* %9, align 4
  %10 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x float], [6 x float]* %10, i64 0, i64 4
  %_55 = load float, float* %11, align 4
  %12 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x float], [6 x float]* %12, i64 0, i64 5
  %_59 = load float, float* %13, align 4
  %_57 = fmul float %z, %_59
  %_54 = fadd float %_55, %_57
  %_52 = fmul float %z, %_54
  %_49 = fadd float %_50, %_52
  %_47 = fmul float %z, %_49
  %_44 = fadd float %_45, %_47
  %_42 = fmul float %z, %_44
  %_39 = fadd float %_40, %_42
  %_37 = fmul float %z, %_39
  %r = fadd float %_35, %_37
  %14 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [6 x float], [6 x float]* %14, i64 0, i64 0
  %_64 = load float, float* %15, align 4
  %16 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [6 x float], [6 x float]* %16, i64 0, i64 1
  %_69 = load float, float* %17, align 4
  %18 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [6 x float], [6 x float]* %18, i64 0, i64 2
  %_74 = load float, float* %19, align 4
  %20 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [6 x float], [6 x float]* %20, i64 0, i64 3
  %_79 = load float, float* %21, align 4
  %22 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [6 x float], [6 x float]* %22, i64 0, i64 4
  %_84 = load float, float* %23, align 4
  %24 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %25 = getelementptr inbounds [6 x float], [6 x float]* %24, i64 0, i64 5
  %_88 = load float, float* %25, align 4
  %_86 = fmul float %z, %_88
  %_83 = fadd float %_84, %_86
  %_81 = fmul float %z, %_83
  %_78 = fadd float %_79, %_81
  %_76 = fmul float %z, %_78
  %_73 = fadd float %_74, %_76
  %_71 = fmul float %z, %_73
  %_68 = fadd float %_69, %_71
  %_66 = fmul float %z, %_68
  %_63 = fadd float %_64, %_66
  %_61 = fmul float %z, %_63
  %s = fadd float 1.000000e+00, %_61
  %_91 = fdiv float %r, %s
  %_90 = fadd float -1.250000e-01, %_91
  %26 = fdiv float %_90, %x
  ret float %26

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1077336343
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1357 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1360 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1369 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1372 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1363 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1366 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8
}

; libm::math::j1::common
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j16common17hf8d6b2674ea31d45E(i32 %ix, double %x, i1 zeroext %y1, i1 zeroext %sign) unnamed_addr #1 {
start:
  %cc = alloca double, align 8
  %ss = alloca double, align 8
  %s = alloca double, align 8
; call libm::math::sin::sin
  %_10 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store double %_10, double* %s, align 8
  br i1 %y1, label %bb2, label %bb3

bb3:                                              ; preds = %bb2, %bb1
; call libm::math::cos::cos
  %_14 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_13 = load double, double* %s, align 8
  %0 = fneg double %_13
  store double %0, double* %s, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %_16 = load double, double* %s, align 8
  %1 = fsub double %_16, %_14
  store double %1, double* %cc, align 8
  %_18 = icmp ult i32 %ix, 2145386496
  br i1 %_18, label %bb5, label %bb15

bb15:                                             ; preds = %bb14, %bb9, %bb4
  br i1 %sign, label %bb16, label %bb17

bb5:                                              ; preds = %bb4
  %_21 = load double, double* %s, align 8
  %_20 = fneg double %_21
  %2 = fsub double %_20, %_14
  store double %2, double* %ss, align 8
  %_24 = fmul double 2.000000e+00, %x
; call libm::math::cos::cos
  %_23 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_24)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_28 = load double, double* %s, align 8
  %_27 = fmul double %_28, %_14
  %_26 = fcmp ogt double %_27, 0.000000e+00
  br i1 %_26, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %_33 = load double, double* %cc, align 8
  %3 = fdiv double %_23, %_33
  store double %3, double* %ss, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  %_31 = load double, double* %ss, align 8
  %4 = fdiv double %_23, %_31
  store double %4, double* %cc, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %_34 = icmp ult i32 %ix, 1207959552
  br i1 %_34, label %bb10, label %bb15

bb10:                                             ; preds = %bb9
  br i1 %y1, label %bb11, label %bb12

bb12:                                             ; preds = %bb11, %bb10
; call libm::math::j1::pone
  %_39 = call double @_ZN4libm4math2j14pone17hc6d14069da021d69E(double %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %_37 = load double, double* %ss, align 8
  %5 = fneg double %_37
  store double %5, double* %ss, align 8
  br label %bb12

bb13:                                             ; preds = %bb12
  %_41 = load double, double* %cc, align 8
  %_38 = fmul double %_39, %_41
; call libm::math::j1::qone
  %_43 = call double @_ZN4libm4math2j14qone17h1b0f1a7e23da561bE(double %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_45 = load double, double* %ss, align 8
  %_42 = fmul double %_43, %_45
  %6 = fsub double %_38, %_42
  store double %6, double* %cc, align 8
  br label %bb15

bb17:                                             ; preds = %bb16, %bb15
  %_49 = load double, double* %cc, align 8
  %_48 = fmul double 0x3FE20DD750429B6D, %_49
; call libm::math::sqrt::sqrt
  %_50 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %x)
  br label %bb18

bb16:                                             ; preds = %bb15
  %_47 = load double, double* %cc, align 8
  %7 = fneg double %_47
  store double %7, double* %cc, align 8
  br label %bb17

bb18:                                             ; preds = %bb17
  %8 = fdiv double %_48, %_50
  ret double %8
}

; libm::math::j1::j1
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2j12j117he1fc7b912048e475E(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %z = alloca double, align 8
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_7 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_7, i32* %ix, align 4
  %_10 = load i32, i32* %ix, align 4
  %_11.0 = lshr i32 %_10, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_11.0, 0
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_13 = load i32, i32* %ix, align 4
  %_12 = icmp uge i32 %_13, 2146435072
  br i1 %_12, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_18 = load i32, i32* %ix, align 4
  %_17 = icmp uge i32 %_18, 1073741824
  br i1 %_17, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_14 = fmul double %x, %x
  %3 = fdiv double 1.000000e+00, %_14
  store double %3, double* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7, %bb3
  %4 = load double, double* %0, align 8
  ret double %4

bb6:                                              ; preds = %bb4
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp uge i32 %_24, 939524096
  br i1 %_23, label %bb8, label %bb9

bb5:                                              ; preds = %bb4
  %_19 = load i32, i32* %ix, align 4
; call libm::math::fabs::fabs
  %_20 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %x)
  br label %bb7

bb7:                                              ; preds = %bb5
; call libm::math::j1::common
  %5 = call double @_ZN4libm4math2j16common17hf8d6b2674ea31d45E(i32 %_19, double %_20, i1 zeroext false, i1 zeroext %sign)
  store double %5, double* %0, align 8
  br label %bb11

bb9:                                              ; preds = %bb6
  store double %x, double* %z, align 8
  br label %bb10

bb8:                                              ; preds = %bb6
  %6 = fmul double %x, %x
  store double %6, double* %z, align 8
  %_27 = load double, double* %z, align 8
  %_30 = load double, double* %z, align 8
  %_33 = load double, double* %z, align 8
  %_36 = load double, double* %z, align 8
  %_35 = fmul double %_36, 0x3E6AAAFA46CA0BD9
  %_34 = fadd double 0xBEF0C5C6BA169668, %_35
  %_32 = fmul double %_33, %_34
  %_31 = fadd double 0x3F570D9F98472C61, %_32
  %_29 = fmul double %_30, %_31
  %_28 = fadd double -6.250000e-02, %_29
  %r = fmul double %_27, %_28
  %_38 = load double, double* %z, align 8
  %_41 = load double, double* %z, align 8
  %_44 = load double, double* %z, align 8
  %_47 = load double, double* %z, align 8
  %_50 = load double, double* %z, align 8
  %_49 = fmul double %_50, 0x3DAB2ACFCFB97ED8
  %_48 = fadd double 0x3E35AC88C97DFF2C, %_49
  %_46 = fmul double %_47, %_48
  %_45 = fadd double 0x3EB3BFF8333F8498, %_46
  %_43 = fmul double %_44, %_45
  %_42 = fadd double 0x3F285F56B9CDF664, %_43
  %_40 = fmul double %_41, %_42
  %_39 = fadd double 0x3F939D0B12637E53, %_40
  %_37 = fmul double %_38, %_39
  %s = fadd double 1.000000e+00, %_37
  %7 = fdiv double %r, %s
  store double %7, double* %z, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %_55 = load double, double* %z, align 8
  %_54 = fadd double 5.000000e-01, %_55
  %8 = fmul double %_54, %x
  store double %8, double* %0, align 8
  br label %bb11
}

; libm::math::j1::y1
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2j12y117h5ad9ec61126aa48fE(double %x) unnamed_addr #1 {
start:
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_7 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
; call libm::math::get_low_word
  %_9 = call i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_14.0 = shl i32 %_7, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = or i32 %_14.0, %_9
  %1 = icmp eq i32 %_11, 0
  br i1 %1, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store double 0xFFF0000000000000, double* %0, align 8
  br label %bb17

bb5:                                              ; preds = %bb3
  %_18.0 = lshr i32 %_7, 31
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = icmp eq i32 %_18.0, 0
  br i1 %2, label %bb8, label %bb7

bb8:                                              ; preds = %bb6
  %_19 = icmp uge i32 %_7, 2146435072
  br i1 %_19, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  store double 0x7FF8000000000000, double* %0, align 8
  br label %bb17

bb17:                                             ; preds = %bb4, %bb16, %bb13, %bb11, %bb9, %bb7
  %3 = load double, double* %0, align 8
  ret double %3

bb10:                                             ; preds = %bb8
  %_22 = icmp uge i32 %_7, 1073741824
  br i1 %_22, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
  %4 = fdiv double 1.000000e+00, %x
  store double %4, double* %0, align 8
  br label %bb17

bb12:                                             ; preds = %bb10
  %_26 = icmp ult i32 %_7, 1016070144
  br i1 %_26, label %bb13, label %bb14

bb11:                                             ; preds = %bb10
; call libm::math::j1::common
  %5 = call double @_ZN4libm4math2j16common17hf8d6b2674ea31d45E(i32 %_7, double %x, i1 zeroext true, i1 zeroext false)
  store double %5, double* %0, align 8
  br label %bb17

bb14:                                             ; preds = %bb12
  %z = fmul double %x, %x
  %_45 = fmul double %z, 0xBE78AC00569105B8
  %_43 = fadd double 0x3EF8AB038FA6B88E, %_45
  %_41 = fmul double %z, %_43
  %_39 = fadd double 0xBF5F55E54844F50F, %_41
  %_37 = fmul double %z, %_39
  %_35 = fadd double 0x3FA9D3C776292CD1, %_37
  %_33 = fmul double %z, %_35
  %u = fadd double 0xBFC91866143CBC8A, %_33
  %_64 = fmul double %z, 0x3DB25039DACA772A
  %_62 = fadd double 0x3E3ABF1D5BA69A86, %_64
  %_60 = fmul double %z, %_62
  %_58 = fadd double 0x3EB6C05A894E8CA6, %_60
  %_56 = fmul double %z, %_58
  %_54 = fadd double 0x3F2A8C896C257764, %_56
  %_52 = fmul double %z, %_54
  %_50 = fadd double 0x3F94650D3F4DA9F0, %_52
  %_48 = fmul double %z, %_50
  %v = fadd double 1.000000e+00, %_48
  %_69 = fdiv double %u, %v
  %_67 = fmul double %x, %_69
; call libm::math::j1::j1
  %_75 = call double @_ZN4libm4math2j12j117he1fc7b912048e475E(double %x)
  br label %bb15

bb13:                                             ; preds = %bb12
  %6 = fdiv double 0xBFE45F306DC9C883, %x
  store double %6, double* %0, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
; call libm::math::log::log
  %_77 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %x)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_74 = fmul double %_75, %_77
  %_79 = fdiv double 1.000000e+00, %x
  %_73 = fsub double %_74, %_79
  %_72 = fmul double 0x3FE45F306DC9C883, %_73
  %7 = fadd double %_67, %_72
  store double %7, double* %0, align 8
  br label %bb17
}

; libm::math::j1::pone
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j14pone17hc6d14069da021d69E(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [5 x double]*, align 8
  %p = alloca [6 x double]*, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1075838976
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1074933387
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1379 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1382 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul double %x, %x
  %z = fdiv double 1.000000e+00, %_32
  %2 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x double], [6 x double]* %2, i64 0, i64 0
  %_35 = load double, double* %3, align 8
  %4 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x double], [6 x double]* %4, i64 0, i64 1
  %_40 = load double, double* %5, align 8
  %6 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x double], [6 x double]* %6, i64 0, i64 2
  %_45 = load double, double* %7, align 8
  %8 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 3
  %_50 = load double, double* %9, align 8
  %10 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x double], [6 x double]* %10, i64 0, i64 4
  %_55 = load double, double* %11, align 8
  %12 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x double], [6 x double]* %12, i64 0, i64 5
  %_59 = load double, double* %13, align 8
  %_57 = fmul double %z, %_59
  %_54 = fadd double %_55, %_57
  %_52 = fmul double %z, %_54
  %_49 = fadd double %_50, %_52
  %_47 = fmul double %z, %_49
  %_44 = fadd double %_45, %_47
  %_42 = fmul double %z, %_44
  %_39 = fadd double %_40, %_42
  %_37 = fmul double %z, %_39
  %r = fadd double %_35, %_37
  %14 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [5 x double], [5 x double]* %14, i64 0, i64 0
  %_64 = load double, double* %15, align 8
  %16 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [5 x double], [5 x double]* %16, i64 0, i64 1
  %_69 = load double, double* %17, align 8
  %18 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [5 x double], [5 x double]* %18, i64 0, i64 2
  %_74 = load double, double* %19, align 8
  %20 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [5 x double], [5 x double]* %20, i64 0, i64 3
  %_79 = load double, double* %21, align 8
  %22 = load [5 x double]*, [5 x double]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [5 x double], [5 x double]* %22, i64 0, i64 4
  %_83 = load double, double* %23, align 8
  %_81 = fmul double %z, %_83
  %_78 = fadd double %_79, %_81
  %_76 = fmul double %z, %_78
  %_73 = fadd double %_74, %_76
  %_71 = fmul double %z, %_73
  %_68 = fadd double %_69, %_71
  %_66 = fmul double %z, %_68
  %_63 = fadd double %_64, %_66
  %_61 = fmul double %z, %_63
  %s = fadd double 1.000000e+00, %_61
  %_85 = fdiv double %r, %s
  %24 = fadd double 1.000000e+00, %_85
  ret double %24

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1074191213
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1385 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1388 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1397 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1400 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1391 to [6 x double]*), [6 x double]** %p, align 8
  store [5 x double]* bitcast (<{ [40 x i8] }>* @alloc1394 to [5 x double]*), [5 x double]** %q, align 8
  br label %bb8
}

; libm::math::j1::qone
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math2j14qone17h1b0f1a7e23da561bE(double %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [6 x double]*, align 8
  %p = alloca [6 x double]*, align 8
; call libm::math::get_high_word
  %_8 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1075838976
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1074933387
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1404 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1407 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul double %x, %x
  %z = fdiv double 1.000000e+00, %_32
  %2 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x double], [6 x double]* %2, i64 0, i64 0
  %_35 = load double, double* %3, align 8
  %4 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x double], [6 x double]* %4, i64 0, i64 1
  %_40 = load double, double* %5, align 8
  %6 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x double], [6 x double]* %6, i64 0, i64 2
  %_45 = load double, double* %7, align 8
  %8 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 3
  %_50 = load double, double* %9, align 8
  %10 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x double], [6 x double]* %10, i64 0, i64 4
  %_55 = load double, double* %11, align 8
  %12 = load [6 x double]*, [6 x double]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x double], [6 x double]* %12, i64 0, i64 5
  %_59 = load double, double* %13, align 8
  %_57 = fmul double %z, %_59
  %_54 = fadd double %_55, %_57
  %_52 = fmul double %z, %_54
  %_49 = fadd double %_50, %_52
  %_47 = fmul double %z, %_49
  %_44 = fadd double %_45, %_47
  %_42 = fmul double %z, %_44
  %_39 = fadd double %_40, %_42
  %_37 = fmul double %z, %_39
  %r = fadd double %_35, %_37
  %14 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [6 x double], [6 x double]* %14, i64 0, i64 0
  %_64 = load double, double* %15, align 8
  %16 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [6 x double], [6 x double]* %16, i64 0, i64 1
  %_69 = load double, double* %17, align 8
  %18 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [6 x double], [6 x double]* %18, i64 0, i64 2
  %_74 = load double, double* %19, align 8
  %20 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [6 x double], [6 x double]* %20, i64 0, i64 3
  %_79 = load double, double* %21, align 8
  %22 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [6 x double], [6 x double]* %22, i64 0, i64 4
  %_84 = load double, double* %23, align 8
  %24 = load [6 x double]*, [6 x double]** %q, align 8, !nonnull !4
  %25 = getelementptr inbounds [6 x double], [6 x double]* %24, i64 0, i64 5
  %_88 = load double, double* %25, align 8
  %_86 = fmul double %z, %_88
  %_83 = fadd double %_84, %_86
  %_81 = fmul double %z, %_83
  %_78 = fadd double %_79, %_81
  %_76 = fmul double %z, %_78
  %_73 = fadd double %_74, %_76
  %_71 = fmul double %z, %_73
  %_68 = fadd double %_69, %_71
  %_66 = fmul double %z, %_68
  %_63 = fadd double %_64, %_66
  %_61 = fmul double %z, %_63
  %s = fadd double 1.000000e+00, %_61
  %_91 = fdiv double %r, %s
  %_90 = fadd double 3.750000e-01, %_91
  %26 = fdiv double %_90, %x
  ret double %26

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1074191213
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1410 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1413 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1422 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1425 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1416 to [6 x double]*), [6 x double]** %p, align 8
  store [6 x double]* bitcast (<{ [48 x i8] }>* @alloc1419 to [6 x double]*), [6 x double]** %q, align 8
  br label %bb8
}

; libm::math::j1f::common
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j1f6common17ha1f62194b322da57E(i32 %ix, float %x, i1 zeroext %y1, i1 zeroext %sign) unnamed_addr #1 {
start:
  %cc = alloca double, align 8
  %ss = alloca double, align 8
  %s = alloca double, align 8
; call libm::math::sinf::sinf
  %_10 = call float @_ZN4libm4math4sinf4sinf17h4c42ac16e64b15baE(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = fpext float %_10 to double
  store double %0, double* %s, align 8
  br i1 %y1, label %bb2, label %bb3

bb3:                                              ; preds = %bb2, %bb1
; call libm::math::cosf::cosf
  %_14 = call float @_ZN4libm4math4cosf4cosf17h2f3b18ee77688ea2E(float %x)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_13 = load double, double* %s, align 8
  %1 = fneg double %_13
  store double %1, double* %s, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %c = fpext float %_14 to double
  %_16 = load double, double* %s, align 8
  %2 = fsub double %_16, %c
  store double %2, double* %cc, align 8
  %_18 = icmp ult i32 %ix, 2130706432
  br i1 %_18, label %bb5, label %bb15

bb15:                                             ; preds = %bb14, %bb9, %bb4
  br i1 %sign, label %bb16, label %bb17

bb5:                                              ; preds = %bb4
  %_21 = load double, double* %s, align 8
  %_20 = fneg double %_21
  %3 = fsub double %_20, %c
  store double %3, double* %ss, align 8
  %_24 = fmul float 2.000000e+00, %x
; call libm::math::cosf::cosf
  %_23 = call float @_ZN4libm4math4cosf4cosf17h2f3b18ee77688ea2E(float %_24)
  br label %bb6

bb6:                                              ; preds = %bb5
  %z = fpext float %_23 to double
  %_28 = load double, double* %s, align 8
  %_27 = fmul double %_28, %c
  %_26 = fcmp ogt double %_27, 0.000000e+00
  br i1 %_26, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %_33 = load double, double* %cc, align 8
  %4 = fdiv double %z, %_33
  store double %4, double* %ss, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  %_31 = load double, double* %ss, align 8
  %5 = fdiv double %z, %_31
  store double %5, double* %cc, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %_34 = icmp ult i32 %ix, 1484783616
  br i1 %_34, label %bb10, label %bb15

bb10:                                             ; preds = %bb9
  br i1 %y1, label %bb11, label %bb12

bb12:                                             ; preds = %bb11, %bb10
; call libm::math::j1f::ponef
  %_40 = call float @_ZN4libm4math3j1f5ponef17hd7c1ca1088a63c74E(float %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %_37 = load double, double* %ss, align 8
  %6 = fneg double %_37
  store double %6, double* %ss, align 8
  br label %bb12

bb13:                                             ; preds = %bb12
  %_39 = fpext float %_40 to double
  %_42 = load double, double* %cc, align 8
  %_38 = fmul double %_39, %_42
; call libm::math::j1f::qonef
  %_45 = call float @_ZN4libm4math3j1f5qonef17hfe71ad3702c02737E(float %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_44 = fpext float %_45 to double
  %_47 = load double, double* %ss, align 8
  %_43 = fmul double %_44, %_47
  %7 = fsub double %_38, %_43
  store double %7, double* %cc, align 8
  br label %bb15

bb17:                                             ; preds = %bb16, %bb15
  %_53 = load double, double* %cc, align 8
  %_51 = fmul double 0x3FE20DD760000000, %_53
; call libm::math::sqrtf::sqrtf
  %_55 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %x)
  br label %bb18

bb16:                                             ; preds = %bb15
  %_49 = load double, double* %cc, align 8
  %8 = fneg double %_49
  store double %8, double* %cc, align 8
  br label %bb17

bb18:                                             ; preds = %bb17
  %_54 = fpext float %_55 to double
  %_50 = fdiv double %_51, %_54
  %9 = fptrunc double %_50 to float
  ret float %9
}

; libm::math::j1f::j1f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3j1f3j1f17he8d30f1f465a970dE(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %z = alloca float, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_7 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_7, i32* %ix, align 4
  %_10 = load i32, i32* %ix, align 4
  %_11.0 = lshr i32 %_10, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_11.0, 0
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_13 = load i32, i32* %ix, align 4
  %_12 = icmp uge i32 %_13, 2139095040
  br i1 %_12, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_18 = load i32, i32* %ix, align 4
  %_17 = icmp uge i32 %_18, 1073741824
  br i1 %_17, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_14 = fmul float %x, %x
  %3 = fdiv float 1.000000e+00, %_14
  store float %3, float* %0, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7, %bb3
  %4 = load float, float* %0, align 4
  ret float %4

bb6:                                              ; preds = %bb4
  %_24 = load i32, i32* %ix, align 4
  %_23 = icmp uge i32 %_24, 956301312
  br i1 %_23, label %bb8, label %bb9

bb5:                                              ; preds = %bb4
  %_19 = load i32, i32* %ix, align 4
; call libm::math::fabsf::fabsf
  %_20 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %x)
  br label %bb7

bb7:                                              ; preds = %bb5
; call libm::math::j1f::common
  %5 = call float @_ZN4libm4math3j1f6common17ha1f62194b322da57E(i32 %_19, float %_20, i1 zeroext false, i1 zeroext %sign)
  store float %5, float* %0, align 4
  br label %bb11

bb9:                                              ; preds = %bb6
  store float 5.000000e-01, float* %z, align 4
  br label %bb10

bb8:                                              ; preds = %bb6
  %6 = fmul float %x, %x
  store float %6, float* %z, align 4
  %_27 = load float, float* %z, align 4
  %_30 = load float, float* %z, align 4
  %_33 = load float, float* %z, align 4
  %_36 = load float, float* %z, align 4
  %_35 = fmul float %_36, 0x3E6AAAFA40000000
  %_34 = fadd float 0xBEF0C5C6C0000000, %_35
  %_32 = fmul float %_33, %_34
  %_31 = fadd float 0x3F570D9FA0000000, %_32
  %_29 = fmul float %_30, %_31
  %_28 = fadd float -6.250000e-02, %_29
  %r = fmul float %_27, %_28
  %_38 = load float, float* %z, align 4
  %_41 = load float, float* %z, align 4
  %_44 = load float, float* %z, align 4
  %_47 = load float, float* %z, align 4
  %_50 = load float, float* %z, align 4
  %_49 = fmul float %_50, 0x3DAB2ACFC0000000
  %_48 = fadd float 0x3E35AC88C0000000, %_49
  %_46 = fmul float %_47, %_48
  %_45 = fadd float 0x3EB3BFF840000000, %_46
  %_43 = fmul float %_44, %_45
  %_42 = fadd float 0x3F285F56C0000000, %_43
  %_40 = fmul float %_41, %_42
  %_39 = fadd float 0x3F939D0B20000000, %_40
  %_37 = fmul float %_38, %_39
  %s = fadd float 1.000000e+00, %_37
  %_51 = fdiv float %r, %s
  %7 = fadd float 5.000000e-01, %_51
  store float %7, float* %z, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %_54 = load float, float* %z, align 4
  %8 = fmul float %_54, %x
  store float %8, float* %0, align 4
  br label %bb11
}

; libm::math::j1f::y1f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3j1f3y1f17h4e16702f4db988d8E(float %x) unnamed_addr #1 {
start:
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_6 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = and i32 %_6, 2147483647
  %1 = icmp eq i32 %_8, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store float 0xFFF0000000000000, float* %0, align 4
  br label %bb15

bb3:                                              ; preds = %bb1
  %_12.0 = lshr i32 %_6, 31
  br label %bb4

bb4:                                              ; preds = %bb3
  %2 = icmp eq i32 %_12.0, 0
  br i1 %2, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %_13 = icmp uge i32 %_6, 2139095040
  br i1 %_13, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  store float 0x7FF8000000000000, float* %0, align 4
  br label %bb15

bb15:                                             ; preds = %bb2, %bb14, %bb11, %bb9, %bb7, %bb5
  %3 = load float, float* %0, align 4
  ret float %3

bb8:                                              ; preds = %bb6
  %_16 = icmp uge i32 %_6, 1073741824
  br i1 %_16, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %4 = fdiv float 1.000000e+00, %x
  store float %4, float* %0, align 4
  br label %bb15

bb10:                                             ; preds = %bb8
  %_20 = icmp ult i32 %_6, 855638016
  br i1 %_20, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
; call libm::math::j1f::common
  %5 = call float @_ZN4libm4math3j1f6common17ha1f62194b322da57E(i32 %_6, float %x, i1 zeroext true, i1 zeroext false)
  store float %5, float* %0, align 4
  br label %bb15

bb12:                                             ; preds = %bb10
  %z = fmul float %x, %x
  %_39 = fmul float %z, 0xBE78AC0060000000
  %_37 = fadd float 0x3EF8AB0380000000, %_39
  %_35 = fmul float %z, %_37
  %_33 = fadd float 0xBF5F55E540000000, %_35
  %_31 = fmul float %z, %_33
  %_29 = fadd float 0x3FA9D3C780000000, %_31
  %_27 = fmul float %z, %_29
  %u = fadd float 0xBFC9186620000000, %_27
  %_58 = fmul float %z, 0x3DB25039E0000000
  %_56 = fadd float 0x3E3ABF1D60000000, %_58
  %_54 = fmul float %z, %_56
  %_52 = fadd float 0x3EB6C05A80000000, %_54
  %_50 = fmul float %z, %_52
  %_48 = fadd float 0x3F2A8C8960000000, %_50
  %_46 = fmul float %z, %_48
  %_44 = fadd float 0x3F94650D40000000, %_46
  %_42 = fmul float %z, %_44
  %v = fadd float 1.000000e+00, %_42
  %_63 = fdiv float %u, %v
  %_61 = fmul float %x, %_63
; call libm::math::j1f::j1f
  %_69 = call float @_ZN4libm4math3j1f3j1f17he8d30f1f465a970dE(float %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %6 = fdiv float 0xBFE45F3060000000, %x
  store float %6, float* %0, align 4
  br label %bb15

bb13:                                             ; preds = %bb12
; call libm::math::logf::logf
  %_71 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %x)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_68 = fmul float %_69, %_71
  %_73 = fdiv float 1.000000e+00, %x
  %_67 = fsub float %_68, %_73
  %_66 = fmul float 0x3FE45F3060000000, %_67
  %7 = fadd float %_61, %_66
  store float %7, float* %0, align 4
  br label %bb15
}

; libm::math::j1f::ponef
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j1f5ponef17hd7c1ca1088a63c74E(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [5 x float]*, align 8
  %p = alloca [6 x float]*, align 8
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1090519040
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1083274219
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1452 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1455 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul float %x, %x
  %z = fdiv float 1.000000e+00, %_32
  %2 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 0
  %_35 = load float, float* %3, align 4
  %4 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 1
  %_40 = load float, float* %5, align 4
  %6 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x float], [6 x float]* %6, i64 0, i64 2
  %_45 = load float, float* %7, align 4
  %8 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x float], [6 x float]* %8, i64 0, i64 3
  %_50 = load float, float* %9, align 4
  %10 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x float], [6 x float]* %10, i64 0, i64 4
  %_55 = load float, float* %11, align 4
  %12 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x float], [6 x float]* %12, i64 0, i64 5
  %_59 = load float, float* %13, align 4
  %_57 = fmul float %z, %_59
  %_54 = fadd float %_55, %_57
  %_52 = fmul float %z, %_54
  %_49 = fadd float %_50, %_52
  %_47 = fmul float %z, %_49
  %_44 = fadd float %_45, %_47
  %_42 = fmul float %z, %_44
  %_39 = fadd float %_40, %_42
  %_37 = fmul float %z, %_39
  %r = fadd float %_35, %_37
  %14 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [5 x float], [5 x float]* %14, i64 0, i64 0
  %_64 = load float, float* %15, align 4
  %16 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [5 x float], [5 x float]* %16, i64 0, i64 1
  %_69 = load float, float* %17, align 4
  %18 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [5 x float], [5 x float]* %18, i64 0, i64 2
  %_74 = load float, float* %19, align 4
  %20 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [5 x float], [5 x float]* %20, i64 0, i64 3
  %_79 = load float, float* %21, align 4
  %22 = load [5 x float]*, [5 x float]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [5 x float], [5 x float]* %22, i64 0, i64 4
  %_83 = load float, float* %23, align 4
  %_81 = fmul float %z, %_83
  %_78 = fadd float %_79, %_81
  %_76 = fmul float %z, %_78
  %_73 = fadd float %_74, %_76
  %_71 = fmul float %z, %_73
  %_68 = fadd float %_69, %_71
  %_66 = fmul float %z, %_68
  %_63 = fadd float %_64, %_66
  %_61 = fmul float %z, %_63
  %s = fadd float 1.000000e+00, %_61
  %_85 = fdiv float %r, %s
  %24 = fadd float 1.000000e+00, %_85
  ret float %24

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1077336343
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1458 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1461 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1470 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1473 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1464 to [6 x float]*), [6 x float]** %p, align 8
  store [5 x float]* bitcast (<{ [20 x i8] }>* @alloc1467 to [5 x float]*), [5 x float]** %q, align 8
  br label %bb8
}

; libm::math::j1f::qonef
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math3j1f5qonef17hfe71ad3702c02737E(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %q = alloca [6 x float]*, align 8
  %p = alloca [6 x float]*, align 8
; call core::f32::<impl f32>::to_bits
  %_8 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_8, i32* %ix, align 4
  %0 = load i32, i32* %ix, align 4
  %1 = and i32 %0, 2147483647
  store i32 %1, i32* %ix, align 4
  %_11 = load i32, i32* %ix, align 4
  %_10 = icmp uge i32 %_11, 1090519040
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp uge i32 %_17, 1083274219
  br i1 %_16, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1477 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1480 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb2
  %_32 = fmul float %x, %x
  %z = fdiv float 1.000000e+00, %_32
  %2 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %3 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 0
  %_35 = load float, float* %3, align 4
  %4 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %5 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 1
  %_40 = load float, float* %5, align 4
  %6 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %7 = getelementptr inbounds [6 x float], [6 x float]* %6, i64 0, i64 2
  %_45 = load float, float* %7, align 4
  %8 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %9 = getelementptr inbounds [6 x float], [6 x float]* %8, i64 0, i64 3
  %_50 = load float, float* %9, align 4
  %10 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %11 = getelementptr inbounds [6 x float], [6 x float]* %10, i64 0, i64 4
  %_55 = load float, float* %11, align 4
  %12 = load [6 x float]*, [6 x float]** %p, align 8, !nonnull !4
  %13 = getelementptr inbounds [6 x float], [6 x float]* %12, i64 0, i64 5
  %_59 = load float, float* %13, align 4
  %_57 = fmul float %z, %_59
  %_54 = fadd float %_55, %_57
  %_52 = fmul float %z, %_54
  %_49 = fadd float %_50, %_52
  %_47 = fmul float %z, %_49
  %_44 = fadd float %_45, %_47
  %_42 = fmul float %z, %_44
  %_39 = fadd float %_40, %_42
  %_37 = fmul float %z, %_39
  %r = fadd float %_35, %_37
  %14 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %15 = getelementptr inbounds [6 x float], [6 x float]* %14, i64 0, i64 0
  %_64 = load float, float* %15, align 4
  %16 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %17 = getelementptr inbounds [6 x float], [6 x float]* %16, i64 0, i64 1
  %_69 = load float, float* %17, align 4
  %18 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %19 = getelementptr inbounds [6 x float], [6 x float]* %18, i64 0, i64 2
  %_74 = load float, float* %19, align 4
  %20 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %21 = getelementptr inbounds [6 x float], [6 x float]* %20, i64 0, i64 3
  %_79 = load float, float* %21, align 4
  %22 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %23 = getelementptr inbounds [6 x float], [6 x float]* %22, i64 0, i64 4
  %_84 = load float, float* %23, align 4
  %24 = load [6 x float]*, [6 x float]** %q, align 8, !nonnull !4
  %25 = getelementptr inbounds [6 x float], [6 x float]* %24, i64 0, i64 5
  %_88 = load float, float* %25, align 4
  %_86 = fmul float %z, %_88
  %_83 = fadd float %_84, %_86
  %_81 = fmul float %z, %_83
  %_78 = fadd float %_79, %_81
  %_76 = fmul float %z, %_78
  %_73 = fadd float %_74, %_76
  %_71 = fmul float %z, %_73
  %_68 = fadd float %_69, %_71
  %_66 = fmul float %z, %_68
  %_63 = fadd float %_64, %_66
  %_61 = fmul float %z, %_63
  %s = fadd float 1.000000e+00, %_61
  %_91 = fdiv float %r, %s
  %_90 = fadd float 3.750000e-01, %_91
  %26 = fdiv float %_90, %x
  ret float %26

bb5:                                              ; preds = %bb3
  %_23 = load i32, i32* %ix, align 4
  %_22 = icmp uge i32 %_23, 1077336343
  br i1 %_22, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1483 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1486 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1495 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1498 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1489 to [6 x float]*), [6 x float]** %p, align 8
  store [6 x float]* bitcast (<{ [24 x i8] }>* @alloc1492 to [6 x float]*), [6 x float]** %q, align 8
  br label %bb8
}

; libm::math::jn::jn
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2jn2jn17h8c30c5b9d9483392E(i32 %n, double %0) unnamed_addr #1 {
start:
  %k = alloca i32, align 4
  %tmp = alloca double, align 8
  %z = alloca double, align 8
  %w = alloca double, align 8
  %q1 = alloca double, align 8
  %q0 = alloca double, align 8
  %t = alloca double, align 8
  %_59 = alloca double, align 8
  %_47 = alloca i8, align 1
  %temp = alloca double, align 8
  %b = alloca double, align 8
  %a = alloca double, align 8
  %sign = alloca i8, align 1
  %i = alloca i32, align 4
  %nm1 = alloca i32, align 4
  %ix = alloca i32, align 4
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_12 = load double, double* %x, align 8
; call libm::math::get_high_word
  %_11 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_12)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_11, i32* %ix, align 4
  %_14 = load double, double* %x, align 8
; call libm::math::get_low_word
  %_13 = call i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %_14)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_16 = load i32, i32* %ix, align 4
  %_17.0 = lshr i32 %_16, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = icmp ne i32 %_17.0, 0
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %sign, align 1
  %4 = load i32, i32* %ix, align 4
  %5 = and i32 %4, 2147483647
  store i32 %5, i32* %ix, align 4
  %_20 = load i32, i32* %ix, align 4
  %_25 = xor i32 %_13, -1
  %6 = add i32 %_25, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_22 = or i32 %_13, %6
  %_27.0 = lshr i32 %_22, 31
  br label %bb5

bb5:                                              ; preds = %bb4
  %_19 = or i32 %_20, %_27.0
  %_18 = icmp ugt i32 %_19, 2146435072
  br i1 %_18, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %7 = icmp eq i32 %n, 0
  br i1 %7, label %bb8, label %bb9

bb6:                                              ; preds = %bb5
  %8 = load double, double* %x, align 8
  store double %8, double* %1, align 8
  br label %bb87

bb87:                                             ; preds = %bb8, %bb16, %bb86, %bb85, %bb6
  %9 = load double, double* %1, align 8
  ret double %9

bb8:                                              ; preds = %bb7
  %_29 = load double, double* %x, align 8
; call libm::math::j0::j0
  %10 = call double @_ZN4libm4math2j02j017h7f90eb7a5d325e4cE(double %_29)
  store double %10, double* %1, align 8
  br label %bb87

bb9:                                              ; preds = %bb7
  %_30 = icmp slt i32 %n, 0
  br i1 %_30, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %n, i32 1)
  %_39.0 = extractvalue { i32, i1 } %11, 0
  %_39.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %12, label %panic2, label %bb14

bb10:                                             ; preds = %bb9
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %n, i32 1)
  %_34.0 = extractvalue { i32, i1 } %13, 0
  %_34.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %14, label %panic, label %bb12

bb12:                                             ; preds = %bb10
  %_35 = icmp eq i32 %_34.0, -2147483648
  %15 = call i1 @llvm.expect.i1(i1 %_35, i1 false)
  br i1 %15, label %panic1, label %bb13

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2002 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %16 = sub i32 0, %_34.0
  store i32 %16, i32* %nm1, align 4
  %_36 = load double, double* %x, align 8
  %17 = fneg double %_36
  store double %17, double* %x, align 8
  %18 = load i8, i8* %sign, align 1, !range !3
  %_37 = trunc i8 %18 to i1
  %19 = xor i1 %_37, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %sign, align 1
  br label %bb15

panic1:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2004 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14, %bb13
  %_40 = load i32, i32* %nm1, align 4
  %21 = icmp eq i32 %_40, 0
  br i1 %21, label %bb16, label %bb17

bb14:                                             ; preds = %bb11
  store i32 %_39.0, i32* %nm1, align 4
  br label %bb15

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2006 to %"core::panic::location::Location"*)) #11
  unreachable

bb16:                                             ; preds = %bb15
  %_41 = load double, double* %x, align 8
; call libm::math::j1::j1
  %22 = call double @_ZN4libm4math2j12j117he1fc7b912048e475E(double %_41)
  store double %22, double* %1, align 8
  br label %bb87

bb17:                                             ; preds = %bb15
  %_43 = and i32 %n, 1
  %_42 = icmp ne i32 %_43, 0
  %23 = load i8, i8* %sign, align 1, !range !3
  %24 = trunc i8 %23 to i1
  %25 = and i1 %24, %_42
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %sign, align 1
  %_46 = load double, double* %x, align 8
; call libm::math::fabs::fabs
  %_45 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_46)
  br label %bb18

bb18:                                             ; preds = %bb17
  store double %_45, double* %x, align 8
  %_49 = load i32, i32* %ix, align 4
  %_48 = or i32 %_49, %_13
  %27 = icmp eq i32 %_48, 0
  br i1 %27, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i8 1, i8* %_47, align 1
  br label %bb21

bb20:                                             ; preds = %bb18
  %_52 = load i32, i32* %ix, align 4
  %_51 = icmp eq i32 %_52, 2146435072
  %28 = zext i1 %_51 to i8
  store i8 %28, i8* %_47, align 1
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %29 = load i8, i8* %_47, align 1, !range !3
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb22, label %bb23

bb23:                                             ; preds = %bb21
  %_55 = load i32, i32* %nm1, align 4
  %_54 = sitofp i32 %_55 to double
  %_56 = load double, double* %x, align 8
  %_53 = fcmp olt double %_54, %_56
  br i1 %_53, label %bb24, label %bb46

bb22:                                             ; preds = %bb21
  store double 0.000000e+00, double* %b, align 8
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82, %bb54, %bb48, %bb43, %bb39, %bb22
  %31 = load i8, i8* %sign, align 1, !range !3
  %_221 = trunc i8 %31 to i1
  br i1 %_221, label %bb85, label %bb86

bb46:                                             ; preds = %bb23
  %_103 = load i32, i32* %ix, align 4
  %_102 = icmp ult i32 %_103, 1041235968
  br i1 %_102, label %bb47, label %bb55

bb24:                                             ; preds = %bb23
  %_58 = load i32, i32* %ix, align 4
  %_57 = icmp uge i32 %_58, 1389363200
  br i1 %_57, label %bb25, label %bb40

bb40:                                             ; preds = %bb24
  %_85 = load double, double* %x, align 8
; call libm::math::j0::j0
  %_84 = call double @_ZN4libm4math2j02j017h7f90eb7a5d325e4cE(double %_85)
  br label %bb41

bb25:                                             ; preds = %bb24
  %_61 = load i32, i32* %nm1, align 4
  %_60 = and i32 %_61, 3
  switch i32 %_60, label %bb35 [
    i32 0, label %bb26
    i32 1, label %bb29
    i32 2, label %bb32
    i32 3, label %bb35
  ]

bb35:                                             ; preds = %bb25, %bb25
  %_77 = load double, double* %x, align 8
; call libm::math::cos::cos
  %_76 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_77)
  br label %bb36

bb26:                                             ; preds = %bb25
  %_64 = load double, double* %x, align 8
; call libm::math::cos::cos
  %_63 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_64)
  br label %bb27

bb29:                                             ; preds = %bb25
  %_69 = load double, double* %x, align 8
; call libm::math::cos::cos
  %_68 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_69)
  br label %bb30

bb32:                                             ; preds = %bb25
  %_73 = load double, double* %x, align 8
; call libm::math::cos::cos
  %_72 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %_73)
  br label %bb33

bb36:                                             ; preds = %bb35
  %_79 = load double, double* %x, align 8
; call libm::math::sin::sin
  %_78 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %_79)
  br label %bb37

bb37:                                             ; preds = %bb36
  %32 = fadd double %_76, %_78
  store double %32, double* %_59, align 8
  br label %bb38

bb38:                                             ; preds = %bb28, %bb31, %bb34, %bb37
  %33 = load double, double* %_59, align 8
  store double %33, double* %temp, align 8
  %_81 = load double, double* %temp, align 8
  %_80 = fmul double 0x3FE20DD750429B6D, %_81
  %_83 = load double, double* %x, align 8
; call libm::math::sqrt::sqrt
  %_82 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %_83)
  br label %bb39

bb33:                                             ; preds = %bb32
  %_75 = load double, double* %x, align 8
; call libm::math::sin::sin
  %_74 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %_75)
  br label %bb34

bb34:                                             ; preds = %bb33
  %34 = fsub double %_72, %_74
  store double %34, double* %_59, align 8
  br label %bb38

bb30:                                             ; preds = %bb29
  %_67 = fneg double %_68
  %_71 = load double, double* %x, align 8
; call libm::math::sin::sin
  %_70 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %_71)
  br label %bb31

bb31:                                             ; preds = %bb30
  %35 = fsub double %_67, %_70
  store double %35, double* %_59, align 8
  br label %bb38

bb27:                                             ; preds = %bb26
  %_62 = fneg double %_63
  %_66 = load double, double* %x, align 8
; call libm::math::sin::sin
  %_65 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %_66)
  br label %bb28

bb28:                                             ; preds = %bb27
  %36 = fadd double %_62, %_65
  store double %36, double* %_59, align 8
  br label %bb38

bb39:                                             ; preds = %bb38
  %37 = fdiv double %_80, %_82
  store double %37, double* %b, align 8
  br label %bb84

bb41:                                             ; preds = %bb40
  store double %_84, double* %a, align 8
  %_87 = load double, double* %x, align 8
; call libm::math::j1::j1
  %_86 = call double @_ZN4libm4math2j12j117he1fc7b912048e475E(double %_87)
  br label %bb42

bb42:                                             ; preds = %bb41
  store double %_86, double* %b, align 8
  store i32 0, i32* %i, align 4
  br label %bb43

bb43:                                             ; preds = %bb45, %bb42
  %_89 = load i32, i32* %i, align 4
  %_90 = load i32, i32* %nm1, align 4
  %_88 = icmp slt i32 %_89, %_90
  br i1 %_88, label %bb44, label %bb84

bb44:                                             ; preds = %bb43
  %38 = load i32, i32* %i, align 4
  %39 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 1)
  %_91.0 = extractvalue { i32, i1 } %39, 0
  %_91.1 = extractvalue { i32, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_91.1, i1 false)
  br i1 %40, label %panic3, label %bb45

bb45:                                             ; preds = %bb44
  store i32 %_91.0, i32* %i, align 4
  %_92 = load double, double* %b, align 8
  store double %_92, double* %temp, align 8
  %_94 = load double, double* %b, align 8
  %_98 = load i32, i32* %i, align 4
  %_97 = sitofp i32 %_98 to double
  %_96 = fmul double 2.000000e+00, %_97
  %_99 = load double, double* %x, align 8
  %_95 = fdiv double %_96, %_99
  %_93 = fmul double %_94, %_95
  %_100 = load double, double* %a, align 8
  %41 = fsub double %_93, %_100
  store double %41, double* %b, align 8
  %_101 = load double, double* %temp, align 8
  store double %_101, double* %a, align 8
  br label %bb43

panic3:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2008 to %"core::panic::location::Location"*)) #11
  unreachable

bb55:                                             ; preds = %bb46
  %_129 = load i32, i32* %nm1, align 4
  %_128 = sitofp i32 %_129 to double
  %nf = fadd double %_128, 1.000000e+00
  %_130 = fmul double 2.000000e+00, %nf
  %_132 = load double, double* %x, align 8
  %42 = fdiv double %_130, %_132
  store double %42, double* %w, align 8
  %_133 = load double, double* %x, align 8
  %h = fdiv double 2.000000e+00, %_133
  %_134 = load double, double* %w, align 8
  %43 = fadd double %_134, %h
  store double %43, double* %z, align 8
  %_136 = load double, double* %w, align 8
  store double %_136, double* %q0, align 8
  %_138 = load double, double* %w, align 8
  %_139 = load double, double* %z, align 8
  %_137 = fmul double %_138, %_139
  %44 = fsub double %_137, 1.000000e+00
  store double %44, double* %q1, align 8
  store i32 1, i32* %k, align 4
  br label %bb56

bb47:                                             ; preds = %bb46
  %_105 = load i32, i32* %nm1, align 4
  %_104 = icmp sgt i32 %_105, 32
  br i1 %_104, label %bb48, label %bb49

bb49:                                             ; preds = %bb47
  %_106 = load double, double* %x, align 8
  %45 = fmul double %_106, 5.000000e-01
  store double %45, double* %temp, align 8
  %_107 = load double, double* %temp, align 8
  store double %_107, double* %b, align 8
  store double 1.000000e+00, double* %a, align 8
  store i32 2, i32* %i, align 4
  br label %bb50

bb48:                                             ; preds = %bb47
  store double 0.000000e+00, double* %b, align 8
  br label %bb84

bb50:                                             ; preds = %bb53, %bb49
  %_109 = load i32, i32* %i, align 4
  %_111 = load i32, i32* %nm1, align 4
  %46 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_111, i32 1)
  %_112.0 = extractvalue { i32, i1 } %46, 0
  %_112.1 = extractvalue { i32, i1 } %46, 1
  %47 = call i1 @llvm.expect.i1(i1 %_112.1, i1 false)
  br i1 %47, label %panic4, label %bb51

bb51:                                             ; preds = %bb50
  %_108 = icmp sle i32 %_109, %_112.0
  br i1 %_108, label %bb52, label %bb54

panic4:                                           ; preds = %bb50
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2010 to %"core::panic::location::Location"*)) #11
  unreachable

bb54:                                             ; preds = %bb51
  %_117 = load double, double* %b, align 8
  %_118 = load double, double* %a, align 8
  %48 = fdiv double %_117, %_118
  store double %48, double* %b, align 8
  br label %bb84

bb52:                                             ; preds = %bb51
  %_114 = load i32, i32* %i, align 4
  %_113 = sitofp i32 %_114 to double
  %49 = load double, double* %a, align 8
  %50 = fmul double %49, %_113
  store double %50, double* %a, align 8
  %_115 = load double, double* %temp, align 8
  %51 = load double, double* %b, align 8
  %52 = fmul double %51, %_115
  store double %52, double* %b, align 8
  %53 = load i32, i32* %i, align 4
  %54 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 1)
  %_116.0 = extractvalue { i32, i1 } %54, 0
  %_116.1 = extractvalue { i32, i1 } %54, 1
  %55 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false)
  br i1 %55, label %panic5, label %bb53

bb53:                                             ; preds = %bb52
  store i32 %_116.0, i32* %i, align 4
  br label %bb50

panic5:                                           ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2012 to %"core::panic::location::Location"*)) #11
  unreachable

bb56:                                             ; preds = %bb58, %bb55
  %_141 = load double, double* %q1, align 8
  %_140 = fcmp olt double %_141, 1.000000e+09
  br i1 %_140, label %bb57, label %bb59

bb59:                                             ; preds = %bb56
  store double 0.000000e+00, double* %t, align 8
  %_150 = load i32, i32* %k, align 4
  store i32 %_150, i32* %i, align 4
  br label %bb60

bb57:                                             ; preds = %bb56
  %56 = load i32, i32* %k, align 4
  %57 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 1)
  %_142.0 = extractvalue { i32, i1 } %57, 0
  %_142.1 = extractvalue { i32, i1 } %57, 1
  %58 = call i1 @llvm.expect.i1(i1 %_142.1, i1 false)
  br i1 %58, label %panic6, label %bb58

bb58:                                             ; preds = %bb57
  store i32 %_142.0, i32* %k, align 4
  %59 = load double, double* %z, align 8
  %60 = fadd double %59, %h
  store double %60, double* %z, align 8
  %_145 = load double, double* %z, align 8
  %_146 = load double, double* %q1, align 8
  %_144 = fmul double %_145, %_146
  %_147 = load double, double* %q0, align 8
  %61 = fsub double %_144, %_147
  store double %61, double* %tmp, align 8
  %_148 = load double, double* %q1, align 8
  store double %_148, double* %q0, align 8
  %_149 = load double, double* %tmp, align 8
  store double %_149, double* %q1, align 8
  br label %bb56

panic6:                                           ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2014 to %"core::panic::location::Location"*)) #11
  unreachable

bb60:                                             ; preds = %bb62, %bb59
  %_152 = load i32, i32* %i, align 4
  %_151 = icmp sge i32 %_152, 0
  br i1 %_151, label %bb61, label %bb63

bb63:                                             ; preds = %bb60
  %_163 = load double, double* %t, align 8
  store double %_163, double* %a, align 8
  store double 1.000000e+00, double* %b, align 8
  %_167 = load double, double* %w, align 8
; call libm::math::fabs::fabs
  %_166 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_167)
  br label %bb64

bb61:                                             ; preds = %bb60
  %_158 = load i32, i32* %i, align 4
  %_157 = sitofp i32 %_158 to double
  %_156 = fadd double %_157, %nf
  %_155 = fmul double 2.000000e+00, %_156
  %_160 = load double, double* %x, align 8
  %_154 = fdiv double %_155, %_160
  %_161 = load double, double* %t, align 8
  %_153 = fsub double %_154, %_161
  %62 = fdiv double 1.000000e+00, %_153
  store double %62, double* %t, align 8
  %63 = load i32, i32* %i, align 4
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 1)
  %_162.0 = extractvalue { i32, i1 } %64, 0
  %_162.1 = extractvalue { i32, i1 } %64, 1
  %65 = call i1 @llvm.expect.i1(i1 %_162.1, i1 false)
  br i1 %65, label %panic7, label %bb62

bb62:                                             ; preds = %bb61
  store i32 %_162.0, i32* %i, align 4
  br label %bb60

panic7:                                           ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2016 to %"core::panic::location::Location"*)) #11
  unreachable

bb64:                                             ; preds = %bb63
; call libm::math::log::log
  %_165 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_166)
  br label %bb65

bb65:                                             ; preds = %bb64
  %66 = fmul double %nf, %_165
  store double %66, double* %tmp, align 8
  %_169 = load double, double* %tmp, align 8
  %_168 = fcmp olt double %_169, 0x40862E42FEFA39EF
  br i1 %_168, label %bb66, label %bb70

bb70:                                             ; preds = %bb65
  %_184 = load i32, i32* %nm1, align 4
  store i32 %_184, i32* %i, align 4
  br label %bb71

bb66:                                             ; preds = %bb65
  %_170 = load i32, i32* %nm1, align 4
  store i32 %_170, i32* %i, align 4
  br label %bb67

bb67:                                             ; preds = %bb69, %bb66
  %_172 = load i32, i32* %i, align 4
  %_171 = icmp sgt i32 %_172, 0
  br i1 %_171, label %bb68, label %bb77

bb77:                                             ; preds = %bb71, %bb67
  %_205 = load double, double* %x, align 8
; call libm::math::j0::j0
  %_204 = call double @_ZN4libm4math2j02j017h7f90eb7a5d325e4cE(double %_205)
  br label %bb78

bb68:                                             ; preds = %bb67
  %_173 = load double, double* %b, align 8
  store double %_173, double* %temp, align 8
  %_176 = load double, double* %b, align 8
  %_179 = load i32, i32* %i, align 4
  %_178 = sitofp i32 %_179 to double
  %_177 = fmul double 2.000000e+00, %_178
  %_175 = fmul double %_176, %_177
  %_180 = load double, double* %x, align 8
  %_174 = fdiv double %_175, %_180
  %_181 = load double, double* %a, align 8
  %67 = fsub double %_174, %_181
  store double %67, double* %b, align 8
  %_182 = load double, double* %temp, align 8
  store double %_182, double* %a, align 8
  %68 = load i32, i32* %i, align 4
  %69 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %68, i32 1)
  %_183.0 = extractvalue { i32, i1 } %69, 0
  %_183.1 = extractvalue { i32, i1 } %69, 1
  %70 = call i1 @llvm.expect.i1(i1 %_183.1, i1 false)
  br i1 %70, label %panic8, label %bb69

bb69:                                             ; preds = %bb68
  store i32 %_183.0, i32* %i, align 4
  br label %bb67

panic8:                                           ; preds = %bb68
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2018 to %"core::panic::location::Location"*)) #11
  unreachable

bb71:                                             ; preds = %bb76, %bb70
  %_186 = load i32, i32* %i, align 4
  %_185 = icmp sgt i32 %_186, 0
  br i1 %_185, label %bb72, label %bb77

bb72:                                             ; preds = %bb71
  %_187 = load double, double* %b, align 8
  store double %_187, double* %temp, align 8
  %_190 = load double, double* %b, align 8
  %_193 = load i32, i32* %i, align 4
  %_192 = sitofp i32 %_193 to double
  %_191 = fmul double 2.000000e+00, %_192
  %_189 = fmul double %_190, %_191
  %_194 = load double, double* %x, align 8
  %_188 = fdiv double %_189, %_194
  %_195 = load double, double* %a, align 8
  %71 = fsub double %_188, %_195
  store double %71, double* %b, align 8
  %_196 = load double, double* %temp, align 8
  store double %_196, double* %a, align 8
; call core::f64::<impl f64>::from_bits
  %x1p500 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 6858982232485265408)
  br label %bb73

bb73:                                             ; preds = %bb72
  %_199 = load double, double* %b, align 8
  %_198 = fcmp ogt double %_199, %x1p500
  br i1 %_198, label %bb74, label %bb75

bb75:                                             ; preds = %bb74, %bb73
  %72 = load i32, i32* %i, align 4
  %73 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %72, i32 1)
  %_203.0 = extractvalue { i32, i1 } %73, 0
  %_203.1 = extractvalue { i32, i1 } %73, 1
  %74 = call i1 @llvm.expect.i1(i1 %_203.1, i1 false)
  br i1 %74, label %panic9, label %bb76

bb74:                                             ; preds = %bb73
  %_201 = load double, double* %b, align 8
  %75 = load double, double* %a, align 8
  %76 = fdiv double %75, %_201
  store double %76, double* %a, align 8
  %_202 = load double, double* %b, align 8
  %77 = load double, double* %t, align 8
  %78 = fdiv double %77, %_202
  store double %78, double* %t, align 8
  store double 1.000000e+00, double* %b, align 8
  br label %bb75

bb76:                                             ; preds = %bb75
  store i32 %_203.0, i32* %i, align 4
  br label %bb71

panic9:                                           ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2020 to %"core::panic::location::Location"*)) #11
  unreachable

bb78:                                             ; preds = %bb77
  store double %_204, double* %z, align 8
  %_207 = load double, double* %x, align 8
; call libm::math::j1::j1
  %_206 = call double @_ZN4libm4math2j12j117he1fc7b912048e475E(double %_207)
  br label %bb79

bb79:                                             ; preds = %bb78
  store double %_206, double* %w, align 8
  %_210 = load double, double* %z, align 8
; call libm::math::fabs::fabs
  %_209 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_210)
  br label %bb80

bb80:                                             ; preds = %bb79
  %_212 = load double, double* %w, align 8
; call libm::math::fabs::fabs
  %_211 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %_212)
  br label %bb81

bb81:                                             ; preds = %bb80
  %_208 = fcmp oge double %_209, %_211
  br i1 %_208, label %bb82, label %bb83

bb83:                                             ; preds = %bb81
  %_218 = load double, double* %t, align 8
  %_219 = load double, double* %w, align 8
  %_217 = fmul double %_218, %_219
  %_220 = load double, double* %a, align 8
  %79 = fdiv double %_217, %_220
  store double %79, double* %b, align 8
  br label %bb84

bb82:                                             ; preds = %bb81
  %_214 = load double, double* %t, align 8
  %_215 = load double, double* %z, align 8
  %_213 = fmul double %_214, %_215
  %_216 = load double, double* %b, align 8
  %80 = fdiv double %_213, %_216
  store double %80, double* %b, align 8
  br label %bb84

bb86:                                             ; preds = %bb84
  %81 = load double, double* %b, align 8
  store double %81, double* %1, align 8
  br label %bb87

bb85:                                             ; preds = %bb84
  %_222 = load double, double* %b, align 8
  %82 = fneg double %_222
  store double %82, double* %1, align 8
  br label %bb87
}

; libm::math::jn::yn
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math2jn2yn17h3f78f5f28b812685E(i32 %n, double %x) unnamed_addr #1 {
start:
  %_86 = alloca i8, align 1
  %_55 = alloca double, align 8
  %_29 = alloca i8, align 1
  %temp = alloca double, align 8
  %b = alloca double, align 8
  %a = alloca double, align 8
  %i = alloca i32, align 4
  %sign = alloca i8, align 1
  %nm1 = alloca i32, align 4
  %ib = alloca i32, align 4
  %ix = alloca i32, align 4
  %0 = alloca double, align 8
; call libm::math::get_high_word
  %_12 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_12, i32* %ix, align 4
; call libm::math::get_low_word
  %_14 = call i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_17 = load i32, i32* %ix, align 4
  %_18.0 = lshr i32 %_17, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = icmp ne i32 %_18.0, 0
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %sign, align 1
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_21 = load i32, i32* %ix, align 4
  %_26 = xor i32 %_14, -1
  %5 = add i32 %_26, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_23 = or i32 %_14, %5
  %_28.0 = lshr i32 %_23, 31
  br label %bb5

bb5:                                              ; preds = %bb4
  %_20 = or i32 %_21, %_28.0
  %_19 = icmp ugt i32 %_20, 2146435072
  br i1 %_19, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %6 = load i8, i8* %sign, align 1, !range !3
  %_30 = trunc i8 %6 to i1
  br i1 %_30, label %bb9, label %bb8

bb6:                                              ; preds = %bb5
  store double %x, double* %0, align 8
  br label %bb57

bb57:                                             ; preds = %bb13, %bb15, %bb26, %bb25, %bb56, %bb55, %bb11, %bb6
  %7 = load double, double* %0, align 8
  ret double %7

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_29, align 1
  br label %bb10

bb9:                                              ; preds = %bb7
  %_33 = load i32, i32* %ix, align 4
  %_32 = or i32 %_33, %_14
  %_31 = icmp ne i32 %_32, 0
  %8 = zext i1 %_31 to i8
  store i8 %8, i8* %_29, align 1
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %9 = load i8, i8* %_29, align 1, !range !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %_35 = load i32, i32* %ix, align 4
  %11 = icmp eq i32 %_35, 2146435072
  br i1 %11, label %bb13, label %bb14

bb11:                                             ; preds = %bb10
  store double 0x7FF8000000000000, double* %0, align 8
  br label %bb57

bb13:                                             ; preds = %bb12
  store double 0.000000e+00, double* %0, align 8
  br label %bb57

bb14:                                             ; preds = %bb12
  %12 = icmp eq i32 %n, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
; call libm::math::j0::y0
  %13 = call double @_ZN4libm4math2j02y017haf1ce0e0a6cf39ccE(double %x)
  store double %13, double* %0, align 8
  br label %bb57

bb16:                                             ; preds = %bb14
  %_38 = icmp slt i32 %n, 0
  br i1 %_38, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %n, i32 1)
  %_47.0 = extractvalue { i32, i1 } %14, 0
  %_47.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %15, label %panic2, label %bb21

bb17:                                             ; preds = %bb16
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %n, i32 1)
  %_42.0 = extractvalue { i32, i1 } %16, 0
  %_42.1 = extractvalue { i32, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false)
  br i1 %17, label %panic, label %bb19

bb19:                                             ; preds = %bb17
  %_43 = icmp eq i32 %_42.0, -2147483648
  %18 = call i1 @llvm.expect.i1(i1 %_43, i1 false)
  br i1 %18, label %panic1, label %bb20

panic:                                            ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2022 to %"core::panic::location::Location"*)) #11
  unreachable

bb20:                                             ; preds = %bb19
  %19 = sub i32 0, %_42.0
  store i32 %19, i32* %nm1, align 4
  %_44 = and i32 %n, 1
  %20 = icmp ne i32 %_44, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %sign, align 1
  br label %bb22

panic1:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2024 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21, %bb20
  %_48 = load i32, i32* %nm1, align 4
  %22 = icmp eq i32 %_48, 0
  br i1 %22, label %bb23, label %bb27

bb21:                                             ; preds = %bb18
  store i32 %_47.0, i32* %nm1, align 4
  store i8 0, i8* %sign, align 1
  br label %bb22

panic2:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2026 to %"core::panic::location::Location"*)) #11
  unreachable

bb23:                                             ; preds = %bb22
  %23 = load i8, i8* %sign, align 1, !range !3
  %_49 = trunc i8 %23 to i1
  br i1 %_49, label %bb24, label %bb26

bb27:                                             ; preds = %bb22
  %_54 = load i32, i32* %ix, align 4
  %_53 = icmp uge i32 %_54, 1389363200
  br i1 %_53, label %bb28, label %bb29

bb29:                                             ; preds = %bb27
; call libm::math::j0::y0
  %_80 = call double @_ZN4libm4math2j02y017haf1ce0e0a6cf39ccE(double %x)
  br label %bb44

bb28:                                             ; preds = %bb27
  %_57 = load i32, i32* %nm1, align 4
  %_56 = and i32 %_57, 3
  switch i32 %_56, label %bb39 [
    i32 0, label %bb30
    i32 1, label %bb33
    i32 2, label %bb36
    i32 3, label %bb39
  ]

bb39:                                             ; preds = %bb28, %bb28
; call libm::math::sin::sin
  %_72 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb40

bb30:                                             ; preds = %bb28
; call libm::math::sin::sin
  %_59 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb31

bb33:                                             ; preds = %bb28
; call libm::math::sin::sin
  %_64 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb34

bb36:                                             ; preds = %bb28
; call libm::math::sin::sin
  %_68 = call double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x)
  br label %bb37

bb40:                                             ; preds = %bb39
; call libm::math::cos::cos
  %_74 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb41

bb41:                                             ; preds = %bb40
  %24 = fsub double %_72, %_74
  store double %24, double* %_55, align 8
  br label %bb42

bb42:                                             ; preds = %bb32, %bb35, %bb38, %bb41
  %25 = load double, double* %_55, align 8
  store double %25, double* %temp, align 8
  %_77 = load double, double* %temp, align 8
  %_76 = fmul double 0x3FE20DD750429B6D, %_77
; call libm::math::sqrt::sqrt
  %_78 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %x)
  br label %bb43

bb37:                                             ; preds = %bb36
; call libm::math::cos::cos
  %_70 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb38

bb38:                                             ; preds = %bb37
  %26 = fadd double %_68, %_70
  store double %26, double* %_55, align 8
  br label %bb42

bb34:                                             ; preds = %bb33
  %_63 = fneg double %_64
; call libm::math::cos::cos
  %_66 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb35

bb35:                                             ; preds = %bb34
  %27 = fadd double %_63, %_66
  store double %27, double* %_55, align 8
  br label %bb42

bb31:                                             ; preds = %bb30
  %_58 = fneg double %_59
; call libm::math::cos::cos
  %_61 = call double @_ZN4libm4math3cos3cos17h68f7db37084ab801E(double %x)
  br label %bb32

bb32:                                             ; preds = %bb31
  %28 = fsub double %_58, %_61
  store double %28, double* %_55, align 8
  br label %bb42

bb43:                                             ; preds = %bb42
  %29 = fdiv double %_76, %_78
  store double %29, double* %b, align 8
  br label %bb54

bb54:                                             ; preds = %bb50, %bb43
  %30 = load i8, i8* %sign, align 1, !range !3
  %_105 = trunc i8 %30 to i1
  br i1 %_105, label %bb55, label %bb56

bb44:                                             ; preds = %bb29
  store double %_80, double* %a, align 8
; call libm::math::j1::y1
  %_82 = call double @_ZN4libm4math2j12y117h5ad9ec61126aa48fE(double %x)
  br label %bb45

bb45:                                             ; preds = %bb44
  store double %_82, double* %b, align 8
  %_85 = load double, double* %b, align 8
; call libm::math::get_high_word
  %_84 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_85)
  br label %bb46

bb46:                                             ; preds = %bb45
  store i32 %_84, i32* %ib, align 4
  store i32 0, i32* %i, align 4
  br label %bb47

bb47:                                             ; preds = %bb53, %bb46
  %_88 = load i32, i32* %i, align 4
  %_89 = load i32, i32* %nm1, align 4
  %_87 = icmp slt i32 %_88, %_89
  br i1 %_87, label %bb49, label %bb48

bb48:                                             ; preds = %bb47
  store i8 0, i8* %_86, align 1
  br label %bb50

bb49:                                             ; preds = %bb47
  %_91 = load i32, i32* %ib, align 4
  %_90 = icmp ne i32 %_91, -1048576
  %31 = zext i1 %_90 to i8
  store i8 %31, i8* %_86, align 1
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %32 = load i8, i8* %_86, align 1, !range !3
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb51, label %bb54

bb51:                                             ; preds = %bb50
  %34 = load i32, i32* %i, align 4
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 1)
  %_92.0 = extractvalue { i32, i1 } %35, 0
  %_92.1 = extractvalue { i32, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_92.1, i1 false)
  br i1 %36, label %panic3, label %bb52

bb52:                                             ; preds = %bb51
  store i32 %_92.0, i32* %i, align 4
  %_93 = load double, double* %b, align 8
  store double %_93, double* %temp, align 8
  %_98 = load i32, i32* %i, align 4
  %_97 = sitofp i32 %_98 to double
  %_96 = fmul double 2.000000e+00, %_97
  %_95 = fdiv double %_96, %x
  %_100 = load double, double* %b, align 8
  %_94 = fmul double %_95, %_100
  %_101 = load double, double* %a, align 8
  %37 = fsub double %_94, %_101
  store double %37, double* %b, align 8
  %_103 = load double, double* %b, align 8
; call libm::math::get_high_word
  %_102 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_103)
  br label %bb53

panic3:                                           ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2028 to %"core::panic::location::Location"*)) #11
  unreachable

bb53:                                             ; preds = %bb52
  store i32 %_102, i32* %ib, align 4
  %_104 = load double, double* %temp, align 8
  store double %_104, double* %a, align 8
  br label %bb47

bb56:                                             ; preds = %bb54
  %38 = load double, double* %b, align 8
  store double %38, double* %0, align 8
  br label %bb57

bb55:                                             ; preds = %bb54
  %_106 = load double, double* %b, align 8
  %39 = fneg double %_106
  store double %39, double* %0, align 8
  br label %bb57

bb26:                                             ; preds = %bb23
; call libm::math::j1::y1
  %40 = call double @_ZN4libm4math2j12y117h5ad9ec61126aa48fE(double %x)
  store double %40, double* %0, align 8
  br label %bb57

bb24:                                             ; preds = %bb23
; call libm::math::j1::y1
  %_50 = call double @_ZN4libm4math2j12y117h5ad9ec61126aa48fE(double %x)
  br label %bb25

bb25:                                             ; preds = %bb24
  %41 = fneg double %_50
  store double %41, double* %0, align 8
  br label %bb57
}

; libm::math::jnf::jnf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3jnf3jnf17hcfaafe152aee9ffeE(i32 %n, float %0) unnamed_addr #1 {
start:
  %k = alloca i32, align 4
  %tmp = alloca float, align 4
  %z = alloca float, align 4
  %w = alloca float, align 4
  %q1 = alloca float, align 4
  %q0 = alloca float, align 4
  %t = alloca float, align 4
  %_36 = alloca i8, align 1
  %temp = alloca float, align 4
  %b = alloca float, align 4
  %a = alloca float, align 4
  %i = alloca i32, align 4
  %sign = alloca i8, align 1
  %nm1 = alloca i32, align 4
  %ix = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_11 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_10 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_11)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_10, i32* %ix, align 4
  %_13 = load i32, i32* %ix, align 4
  %_14.0 = lshr i32 %_13, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp ne i32 %_14.0, 0
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %sign, align 1
  %4 = load i32, i32* %ix, align 4
  %5 = and i32 %4, 2147483647
  store i32 %5, i32* %ix, align 4
  %_16 = load i32, i32* %ix, align 4
  %_15 = icmp ugt i32 %_16, 2139095040
  br i1 %_15, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %6 = icmp eq i32 %n, 0
  br i1 %6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %7 = load float, float* %x, align 4
  store float %7, float* %1, align 4
  br label %bb68

bb68:                                             ; preds = %bb5, %bb13, %bb67, %bb66, %bb3
  %8 = load float, float* %1, align 4
  ret float %8

bb5:                                              ; preds = %bb4
  %_18 = load float, float* %x, align 4
; call libm::math::j0f::j0f
  %9 = call float @_ZN4libm4math3j0f3j0f17h25cd59ecf73abe6dE(float %_18)
  store float %9, float* %1, align 4
  br label %bb68

bb6:                                              ; preds = %bb4
  %_19 = icmp slt i32 %n, 0
  br i1 %_19, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %n, i32 1)
  %_28.0 = extractvalue { i32, i1 } %10, 0
  %_28.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %11, label %panic2, label %bb11

bb7:                                              ; preds = %bb6
  %12 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %n, i32 1)
  %_23.0 = extractvalue { i32, i1 } %12, 0
  %_23.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %13, label %panic, label %bb9

bb9:                                              ; preds = %bb7
  %_24 = icmp eq i32 %_23.0, -2147483648
  %14 = call i1 @llvm.expect.i1(i1 %_24, i1 false)
  br i1 %14, label %panic1, label %bb10

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2030 to %"core::panic::location::Location"*)) #11
  unreachable

bb10:                                             ; preds = %bb9
  %15 = sub i32 0, %_23.0
  store i32 %15, i32* %nm1, align 4
  %_25 = load float, float* %x, align 4
  %16 = fneg float %_25
  store float %16, float* %x, align 4
  %17 = load i8, i8* %sign, align 1, !range !3
  %_26 = trunc i8 %17 to i1
  %18 = xor i1 %_26, true
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %sign, align 1
  br label %bb12

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2032 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11, %bb10
  %_29 = load i32, i32* %nm1, align 4
  %20 = icmp eq i32 %_29, 0
  br i1 %20, label %bb13, label %bb14

bb11:                                             ; preds = %bb8
  store i32 %_28.0, i32* %nm1, align 4
  br label %bb12

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2034 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  %_30 = load float, float* %x, align 4
; call libm::math::j1f::j1f
  %21 = call float @_ZN4libm4math3j1f3j1f17he8d30f1f465a970dE(float %_30)
  store float %21, float* %1, align 4
  br label %bb68

bb14:                                             ; preds = %bb12
  %_32 = and i32 %n, 1
  %_31 = icmp ne i32 %_32, 0
  %22 = load i8, i8* %sign, align 1, !range !3
  %23 = trunc i8 %22 to i1
  %24 = and i1 %23, %_31
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %sign, align 1
  %_35 = load float, float* %x, align 4
; call libm::math::fabsf::fabsf
  %_34 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_35)
  br label %bb15

bb15:                                             ; preds = %bb14
  store float %_34, float* %x, align 4
  %_37 = load i32, i32* %ix, align 4
  %26 = icmp eq i32 %_37, 0
  br i1 %26, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i8 1, i8* %_36, align 1
  br label %bb18

bb17:                                             ; preds = %bb15
  %_39 = load i32, i32* %ix, align 4
  %_38 = icmp eq i32 %_39, 2139095040
  %27 = zext i1 %_38 to i8
  store i8 %27, i8* %_36, align 1
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %28 = load i8, i8* %_36, align 1, !range !3
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb19, label %bb20

bb20:                                             ; preds = %bb18
  %_42 = load i32, i32* %nm1, align 4
  %_41 = sitofp i32 %_42 to float
  %_43 = load float, float* %x, align 4
  %_40 = fcmp olt float %_41, %_43
  br i1 %_40, label %bb21, label %bb27

bb19:                                             ; preds = %bb18
  store float 0.000000e+00, float* %b, align 4
  br label %bb65

bb65:                                             ; preds = %bb64, %bb63, %bb35, %bb24, %bb19
  %30 = load i8, i8* %sign, align 1, !range !3
  %_181 = trunc i8 %30 to i1
  br i1 %_181, label %bb66, label %bb67

bb27:                                             ; preds = %bb20
  %_63 = load i32, i32* %ix, align 4
  %_62 = icmp ult i32 %_63, 897581056
  br i1 %_62, label %bb28, label %bb36

bb21:                                             ; preds = %bb20
  %_45 = load float, float* %x, align 4
; call libm::math::j0f::j0f
  %_44 = call float @_ZN4libm4math3j0f3j0f17h25cd59ecf73abe6dE(float %_45)
  br label %bb22

bb22:                                             ; preds = %bb21
  store float %_44, float* %a, align 4
  %_47 = load float, float* %x, align 4
; call libm::math::j1f::j1f
  %_46 = call float @_ZN4libm4math3j1f3j1f17he8d30f1f465a970dE(float %_47)
  br label %bb23

bb23:                                             ; preds = %bb22
  store float %_46, float* %b, align 4
  store i32 0, i32* %i, align 4
  br label %bb24

bb24:                                             ; preds = %bb26, %bb23
  %_49 = load i32, i32* %i, align 4
  %_50 = load i32, i32* %nm1, align 4
  %_48 = icmp slt i32 %_49, %_50
  br i1 %_48, label %bb25, label %bb65

bb25:                                             ; preds = %bb24
  %31 = load i32, i32* %i, align 4
  %32 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 1)
  %_51.0 = extractvalue { i32, i1 } %32, 0
  %_51.1 = extractvalue { i32, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false)
  br i1 %33, label %panic3, label %bb26

bb26:                                             ; preds = %bb25
  store i32 %_51.0, i32* %i, align 4
  %_52 = load float, float* %b, align 4
  store float %_52, float* %temp, align 4
  %_54 = load float, float* %b, align 4
  %_58 = load i32, i32* %i, align 4
  %_57 = sitofp i32 %_58 to float
  %_56 = fmul float 2.000000e+00, %_57
  %_59 = load float, float* %x, align 4
  %_55 = fdiv float %_56, %_59
  %_53 = fmul float %_54, %_55
  %_60 = load float, float* %a, align 4
  %34 = fsub float %_53, %_60
  store float %34, float* %b, align 4
  %_61 = load float, float* %temp, align 4
  store float %_61, float* %a, align 4
  br label %bb24

panic3:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2036 to %"core::panic::location::Location"*)) #11
  unreachable

bb36:                                             ; preds = %bb27
  %_89 = load i32, i32* %nm1, align 4
  %_88 = sitofp i32 %_89 to float
  %nf = fadd float %_88, 1.000000e+00
  %_90 = fmul float 2.000000e+00, %nf
  %_92 = load float, float* %x, align 4
  %35 = fdiv float %_90, %_92
  store float %35, float* %w, align 4
  %_93 = load float, float* %x, align 4
  %h = fdiv float 2.000000e+00, %_93
  %_94 = load float, float* %w, align 4
  %36 = fadd float %_94, %h
  store float %36, float* %z, align 4
  %_96 = load float, float* %w, align 4
  store float %_96, float* %q0, align 4
  %_98 = load float, float* %w, align 4
  %_99 = load float, float* %z, align 4
  %_97 = fmul float %_98, %_99
  %37 = fsub float %_97, 1.000000e+00
  store float %37, float* %q1, align 4
  store i32 1, i32* %k, align 4
  br label %bb37

bb28:                                             ; preds = %bb27
  %_65 = load i32, i32* %nm1, align 4
  %_64 = icmp sgt i32 %_65, 8
  br i1 %_64, label %bb29, label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %_66 = load float, float* %x, align 4
  %38 = fmul float 5.000000e-01, %_66
  store float %38, float* %temp, align 4
  %_67 = load float, float* %temp, align 4
  store float %_67, float* %b, align 4
  store float 1.000000e+00, float* %a, align 4
  store i32 2, i32* %i, align 4
  br label %bb31

bb29:                                             ; preds = %bb28
  store i32 8, i32* %nm1, align 4
  br label %bb30

bb31:                                             ; preds = %bb34, %bb30
  %_69 = load i32, i32* %i, align 4
  %_71 = load i32, i32* %nm1, align 4
  %39 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_71, i32 1)
  %_72.0 = extractvalue { i32, i1 } %39, 0
  %_72.1 = extractvalue { i32, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_72.1, i1 false)
  br i1 %40, label %panic4, label %bb32

bb32:                                             ; preds = %bb31
  %_68 = icmp sle i32 %_69, %_72.0
  br i1 %_68, label %bb33, label %bb35

panic4:                                           ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2038 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb32
  %_77 = load float, float* %b, align 4
  %_78 = load float, float* %a, align 4
  %41 = fdiv float %_77, %_78
  store float %41, float* %b, align 4
  br label %bb65

bb33:                                             ; preds = %bb32
  %_74 = load i32, i32* %i, align 4
  %_73 = sitofp i32 %_74 to float
  %42 = load float, float* %a, align 4
  %43 = fmul float %42, %_73
  store float %43, float* %a, align 4
  %_75 = load float, float* %temp, align 4
  %44 = load float, float* %b, align 4
  %45 = fmul float %44, %_75
  store float %45, float* %b, align 4
  %46 = load i32, i32* %i, align 4
  %47 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 1)
  %_76.0 = extractvalue { i32, i1 } %47, 0
  %_76.1 = extractvalue { i32, i1 } %47, 1
  %48 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %48, label %panic5, label %bb34

bb34:                                             ; preds = %bb33
  store i32 %_76.0, i32* %i, align 4
  br label %bb31

panic5:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2040 to %"core::panic::location::Location"*)) #11
  unreachable

bb37:                                             ; preds = %bb39, %bb36
  %_101 = load float, float* %q1, align 4
  %_100 = fcmp olt float %_101, 1.000000e+04
  br i1 %_100, label %bb38, label %bb40

bb40:                                             ; preds = %bb37
  store float 0.000000e+00, float* %t, align 4
  %_110 = load i32, i32* %k, align 4
  store i32 %_110, i32* %i, align 4
  br label %bb41

bb38:                                             ; preds = %bb37
  %49 = load i32, i32* %k, align 4
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 1)
  %_102.0 = extractvalue { i32, i1 } %50, 0
  %_102.1 = extractvalue { i32, i1 } %50, 1
  %51 = call i1 @llvm.expect.i1(i1 %_102.1, i1 false)
  br i1 %51, label %panic6, label %bb39

bb39:                                             ; preds = %bb38
  store i32 %_102.0, i32* %k, align 4
  %52 = load float, float* %z, align 4
  %53 = fadd float %52, %h
  store float %53, float* %z, align 4
  %_105 = load float, float* %z, align 4
  %_106 = load float, float* %q1, align 4
  %_104 = fmul float %_105, %_106
  %_107 = load float, float* %q0, align 4
  %54 = fsub float %_104, %_107
  store float %54, float* %tmp, align 4
  %_108 = load float, float* %q1, align 4
  store float %_108, float* %q0, align 4
  %_109 = load float, float* %tmp, align 4
  store float %_109, float* %q1, align 4
  br label %bb37

panic6:                                           ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2042 to %"core::panic::location::Location"*)) #11
  unreachable

bb41:                                             ; preds = %bb43, %bb40
  %_112 = load i32, i32* %i, align 4
  %_111 = icmp sge i32 %_112, 0
  br i1 %_111, label %bb42, label %bb44

bb44:                                             ; preds = %bb41
  %_123 = load float, float* %t, align 4
  store float %_123, float* %a, align 4
  store float 1.000000e+00, float* %b, align 4
  %_127 = load float, float* %w, align 4
; call libm::math::fabsf::fabsf
  %_126 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_127)
  br label %bb45

bb42:                                             ; preds = %bb41
  %_118 = load i32, i32* %i, align 4
  %_117 = sitofp i32 %_118 to float
  %_116 = fadd float %_117, %nf
  %_115 = fmul float 2.000000e+00, %_116
  %_120 = load float, float* %x, align 4
  %_114 = fdiv float %_115, %_120
  %_121 = load float, float* %t, align 4
  %_113 = fsub float %_114, %_121
  %55 = fdiv float 1.000000e+00, %_113
  store float %55, float* %t, align 4
  %56 = load i32, i32* %i, align 4
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 1)
  %_122.0 = extractvalue { i32, i1 } %57, 0
  %_122.1 = extractvalue { i32, i1 } %57, 1
  %58 = call i1 @llvm.expect.i1(i1 %_122.1, i1 false)
  br i1 %58, label %panic7, label %bb43

bb43:                                             ; preds = %bb42
  store i32 %_122.0, i32* %i, align 4
  br label %bb41

panic7:                                           ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2044 to %"core::panic::location::Location"*)) #11
  unreachable

bb45:                                             ; preds = %bb44
; call libm::math::logf::logf
  %_125 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_126)
  br label %bb46

bb46:                                             ; preds = %bb45
  %59 = fmul float %nf, %_125
  store float %59, float* %tmp, align 4
  %_129 = load float, float* %tmp, align 4
  %_128 = fcmp olt float %_129, 0x40562E3000000000
  br i1 %_128, label %bb47, label %bb51

bb51:                                             ; preds = %bb46
  %_144 = load i32, i32* %nm1, align 4
  store i32 %_144, i32* %i, align 4
  br label %bb52

bb47:                                             ; preds = %bb46
  %_130 = load i32, i32* %nm1, align 4
  store i32 %_130, i32* %i, align 4
  br label %bb48

bb48:                                             ; preds = %bb50, %bb47
  %_132 = load i32, i32* %i, align 4
  %_131 = icmp sgt i32 %_132, 0
  br i1 %_131, label %bb49, label %bb58

bb58:                                             ; preds = %bb52, %bb48
  %_165 = load float, float* %x, align 4
; call libm::math::j0f::j0f
  %_164 = call float @_ZN4libm4math3j0f3j0f17h25cd59ecf73abe6dE(float %_165)
  br label %bb59

bb49:                                             ; preds = %bb48
  %_133 = load float, float* %b, align 4
  store float %_133, float* %temp, align 4
  %_138 = load i32, i32* %i, align 4
  %_137 = sitofp i32 %_138 to float
  %_136 = fmul float 2.000000e+00, %_137
  %_139 = load float, float* %b, align 4
  %_135 = fmul float %_136, %_139
  %_140 = load float, float* %x, align 4
  %_134 = fdiv float %_135, %_140
  %_141 = load float, float* %a, align 4
  %60 = fsub float %_134, %_141
  store float %60, float* %b, align 4
  %_142 = load float, float* %temp, align 4
  store float %_142, float* %a, align 4
  %61 = load i32, i32* %i, align 4
  %62 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %61, i32 1)
  %_143.0 = extractvalue { i32, i1 } %62, 0
  %_143.1 = extractvalue { i32, i1 } %62, 1
  %63 = call i1 @llvm.expect.i1(i1 %_143.1, i1 false)
  br i1 %63, label %panic8, label %bb50

bb50:                                             ; preds = %bb49
  store i32 %_143.0, i32* %i, align 4
  br label %bb48

panic8:                                           ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2046 to %"core::panic::location::Location"*)) #11
  unreachable

bb52:                                             ; preds = %bb57, %bb51
  %_146 = load i32, i32* %i, align 4
  %_145 = icmp sgt i32 %_146, 0
  br i1 %_145, label %bb53, label %bb58

bb53:                                             ; preds = %bb52
  %_147 = load float, float* %b, align 4
  store float %_147, float* %temp, align 4
  %_152 = load i32, i32* %i, align 4
  %_151 = sitofp i32 %_152 to float
  %_150 = fmul float 2.000000e+00, %_151
  %_153 = load float, float* %b, align 4
  %_149 = fmul float %_150, %_153
  %_154 = load float, float* %x, align 4
  %_148 = fdiv float %_149, %_154
  %_155 = load float, float* %a, align 4
  %64 = fsub float %_148, %_155
  store float %64, float* %b, align 4
  %_156 = load float, float* %temp, align 4
  store float %_156, float* %a, align 4
; call core::f32::<impl f32>::from_bits
  %x1p60 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1568669696)
  br label %bb54

bb54:                                             ; preds = %bb53
  %_159 = load float, float* %b, align 4
  %_158 = fcmp ogt float %_159, %x1p60
  br i1 %_158, label %bb55, label %bb56

bb56:                                             ; preds = %bb55, %bb54
  %65 = load i32, i32* %i, align 4
  %66 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 1)
  %_163.0 = extractvalue { i32, i1 } %66, 0
  %_163.1 = extractvalue { i32, i1 } %66, 1
  %67 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false)
  br i1 %67, label %panic9, label %bb57

bb55:                                             ; preds = %bb54
  %_161 = load float, float* %b, align 4
  %68 = load float, float* %a, align 4
  %69 = fdiv float %68, %_161
  store float %69, float* %a, align 4
  %_162 = load float, float* %b, align 4
  %70 = load float, float* %t, align 4
  %71 = fdiv float %70, %_162
  store float %71, float* %t, align 4
  store float 1.000000e+00, float* %b, align 4
  br label %bb56

bb57:                                             ; preds = %bb56
  store i32 %_163.0, i32* %i, align 4
  br label %bb52

panic9:                                           ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2048 to %"core::panic::location::Location"*)) #11
  unreachable

bb59:                                             ; preds = %bb58
  store float %_164, float* %z, align 4
  %_167 = load float, float* %x, align 4
; call libm::math::j1f::j1f
  %_166 = call float @_ZN4libm4math3j1f3j1f17he8d30f1f465a970dE(float %_167)
  br label %bb60

bb60:                                             ; preds = %bb59
  store float %_166, float* %w, align 4
  %_170 = load float, float* %z, align 4
; call libm::math::fabsf::fabsf
  %_169 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_170)
  br label %bb61

bb61:                                             ; preds = %bb60
  %_172 = load float, float* %w, align 4
; call libm::math::fabsf::fabsf
  %_171 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %_172)
  br label %bb62

bb62:                                             ; preds = %bb61
  %_168 = fcmp oge float %_169, %_171
  br i1 %_168, label %bb63, label %bb64

bb64:                                             ; preds = %bb62
  %_178 = load float, float* %t, align 4
  %_179 = load float, float* %w, align 4
  %_177 = fmul float %_178, %_179
  %_180 = load float, float* %a, align 4
  %72 = fdiv float %_177, %_180
  store float %72, float* %b, align 4
  br label %bb65

bb63:                                             ; preds = %bb62
  %_174 = load float, float* %t, align 4
  %_175 = load float, float* %z, align 4
  %_173 = fmul float %_174, %_175
  %_176 = load float, float* %b, align 4
  %73 = fdiv float %_173, %_176
  store float %73, float* %b, align 4
  br label %bb65

bb67:                                             ; preds = %bb65
  %74 = load float, float* %b, align 4
  store float %74, float* %1, align 4
  br label %bb68

bb66:                                             ; preds = %bb65
  %_182 = load float, float* %b, align 4
  %75 = fneg float %_182
  store float %75, float* %1, align 4
  br label %bb68
}

; libm::math::jnf::ynf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math3jnf3ynf17hffb5b9195f029bb5E(i32 %n, float %x) unnamed_addr #1 {
start:
  %_46 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %b = alloca float, align 4
  %a = alloca float, align 4
  %i = alloca i32, align 4
  %sign = alloca i8, align 1
  %nm1 = alloca i32, align 4
  %ib = alloca i32, align 4
  %ix = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_11 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_11, i32* %ix, align 4
  %_14 = load i32, i32* %ix, align 4
  %_15.0 = lshr i32 %_14, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp ne i32 %_15.0, 0
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %sign, align 1
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp ugt i32 %_17, 2139095040
  br i1 %_16, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %5 = load i8, i8* %sign, align 1, !range !3
  %_19 = trunc i8 %5 to i1
  br i1 %_19, label %bb6, label %bb5

bb3:                                              ; preds = %bb2
  store float %x, float* %0, align 4
  br label %bb38

bb38:                                             ; preds = %bb10, %bb12, %bb23, %bb22, %bb37, %bb36, %bb8, %bb3
  %6 = load float, float* %0, align 4
  ret float %6

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  br label %bb7

bb6:                                              ; preds = %bb4
  %_21 = load i32, i32* %ix, align 4
  %_20 = icmp ne i32 %_21, 0
  %7 = zext i1 %_20 to i8
  store i8 %7, i8* %_18, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %8 = load i8, i8* %_18, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb8, label %bb9

bb9:                                              ; preds = %bb7
  %_22 = load i32, i32* %ix, align 4
  %10 = icmp eq i32 %_22, 2139095040
  br i1 %10, label %bb10, label %bb11

bb8:                                              ; preds = %bb7
  store float 0x7FF8000000000000, float* %0, align 4
  br label %bb38

bb10:                                             ; preds = %bb9
  store float 0.000000e+00, float* %0, align 4
  br label %bb38

bb11:                                             ; preds = %bb9
  %11 = icmp eq i32 %n, 0
  br i1 %11, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
; call libm::math::j0f::y0f
  %12 = call float @_ZN4libm4math3j0f3y0f17h78ad8b03df33fe62E(float %x)
  store float %12, float* %0, align 4
  br label %bb38

bb13:                                             ; preds = %bb11
  %_25 = icmp slt i32 %n, 0
  br i1 %_25, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %n, i32 1)
  %_34.0 = extractvalue { i32, i1 } %13, 0
  %_34.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %14, label %panic2, label %bb18

bb14:                                             ; preds = %bb13
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %n, i32 1)
  %_29.0 = extractvalue { i32, i1 } %15, 0
  %_29.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %16, label %panic, label %bb16

bb16:                                             ; preds = %bb14
  %_30 = icmp eq i32 %_29.0, -2147483648
  %17 = call i1 @llvm.expect.i1(i1 %_30, i1 false)
  br i1 %17, label %panic1, label %bb17

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2050 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
  %18 = sub i32 0, %_29.0
  store i32 %18, i32* %nm1, align 4
  %_31 = and i32 %n, 1
  %19 = icmp ne i32 %_31, 0
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %sign, align 1
  br label %bb19

panic1:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2052 to %"core::panic::location::Location"*)) #11
  unreachable

bb19:                                             ; preds = %bb18, %bb17
  %_35 = load i32, i32* %nm1, align 4
  %21 = icmp eq i32 %_35, 0
  br i1 %21, label %bb20, label %bb24

bb18:                                             ; preds = %bb15
  store i32 %_34.0, i32* %nm1, align 4
  store i8 0, i8* %sign, align 1
  br label %bb19

panic2:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2054 to %"core::panic::location::Location"*)) #11
  unreachable

bb20:                                             ; preds = %bb19
  %22 = load i8, i8* %sign, align 1, !range !3
  %_36 = trunc i8 %22 to i1
  br i1 %_36, label %bb21, label %bb23

bb24:                                             ; preds = %bb19
; call libm::math::j0f::y0f
  %_40 = call float @_ZN4libm4math3j0f3y0f17h78ad8b03df33fe62E(float %x)
  br label %bb25

bb25:                                             ; preds = %bb24
  store float %_40, float* %a, align 4
; call libm::math::j1f::y1f
  %_42 = call float @_ZN4libm4math3j1f3y1f17h4e16702f4db988d8E(float %x)
  br label %bb26

bb26:                                             ; preds = %bb25
  store float %_42, float* %b, align 4
  %_45 = load float, float* %b, align 4
; call core::f32::<impl f32>::to_bits
  %_44 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_45)
  br label %bb27

bb27:                                             ; preds = %bb26
  store i32 %_44, i32* %ib, align 4
  store i32 0, i32* %i, align 4
  br label %bb28

bb28:                                             ; preds = %bb34, %bb27
  %_48 = load i32, i32* %i, align 4
  %_49 = load i32, i32* %nm1, align 4
  %_47 = icmp slt i32 %_48, %_49
  br i1 %_47, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  store i8 0, i8* %_46, align 1
  br label %bb31

bb30:                                             ; preds = %bb28
  %_51 = load i32, i32* %ib, align 4
  %_50 = icmp ne i32 %_51, -8388608
  %23 = zext i1 %_50 to i8
  store i8 %23, i8* %_46, align 1
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %24 = load i8, i8* %_46, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb32, label %bb35

bb35:                                             ; preds = %bb31
  %26 = load i8, i8* %sign, align 1, !range !3
  %_65 = trunc i8 %26 to i1
  br i1 %_65, label %bb36, label %bb37

bb32:                                             ; preds = %bb31
  %27 = load i32, i32* %i, align 4
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 1)
  %_52.0 = extractvalue { i32, i1 } %28, 0
  %_52.1 = extractvalue { i32, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false)
  br i1 %29, label %panic3, label %bb33

bb33:                                             ; preds = %bb32
  store i32 %_52.0, i32* %i, align 4
  %_53 = load float, float* %b, align 4
  %_58 = load i32, i32* %i, align 4
  %_57 = sitofp i32 %_58 to float
  %_56 = fmul float 2.000000e+00, %_57
  %_55 = fdiv float %_56, %x
  %_60 = load float, float* %b, align 4
  %_54 = fmul float %_55, %_60
  %_61 = load float, float* %a, align 4
  %30 = fsub float %_54, %_61
  store float %30, float* %b, align 4
  %_63 = load float, float* %b, align 4
; call core::f32::<impl f32>::to_bits
  %_62 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_63)
  br label %bb34

panic3:                                           ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2056 to %"core::panic::location::Location"*)) #11
  unreachable

bb34:                                             ; preds = %bb33
  store i32 %_62, i32* %ib, align 4
  store float %_53, float* %a, align 4
  br label %bb28

bb37:                                             ; preds = %bb35
  %31 = load float, float* %b, align 4
  store float %31, float* %0, align 4
  br label %bb38

bb36:                                             ; preds = %bb35
  %_66 = load float, float* %b, align 4
  %32 = fneg float %_66
  store float %32, float* %0, align 4
  br label %bb38

bb23:                                             ; preds = %bb20
; call libm::math::j1f::y1f
  %33 = call float @_ZN4libm4math3j1f3y1f17h4e16702f4db988d8E(float %x)
  store float %33, float* %0, align 4
  br label %bb38

bb21:                                             ; preds = %bb20
; call libm::math::j1f::y1f
  %_37 = call float @_ZN4libm4math3j1f3y1f17h4e16702f4db988d8E(float %x)
  br label %bb22

bb22:                                             ; preds = %bb21
  %34 = fneg float %_37
  store float %34, float* %0, align 4
  br label %bb38
}

; libm::math::ldexp::ldexp
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5ldexp5ldexp17h1ba373985b580248E(double %x, i32 %n) unnamed_addr #1 {
start:
; call libm::math::scalbn::scalbn
  %0 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %x, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
  ret double %0
}

; libm::math::ldexpf::ldexpf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6ldexpf6ldexpf17hb9181b0381068337E(float %x, i32 %n) unnamed_addr #1 {
start:
; call libm::math::scalbnf::scalbnf
  %0 = call float @_ZN4libm4math7scalbnf7scalbnf17h465599e40fffdd16E(float %x, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
  ret float %0
}

; libm::math::lgamma::lgamma
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math6lgamma6lgamma17h94f71c0762b563f3E(double %x) unnamed_addr #1 {
start:
; call libm::math::lgamma_r::lgamma_r
  %0 = call { double, i32 } @_ZN4libm4math8lgamma_r8lgamma_r17hd59f0726214009b8E(double %x)
  %_2.0 = extractvalue { double, i32 } %0, 0
  %_2.1 = extractvalue { double, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret double %_2.0
}

; libm::math::lgamma_r::sin_pi
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math8lgamma_r6sin_pi17he40ac43a74b56c5aE(double %0) unnamed_addr #1 {
start:
  %n = alloca i32, align 4
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_5 = load double, double* %x, align 8
  %_4 = fmul double %_5, 5.000000e-01
  %_8 = load double, double* %x, align 8
  %_7 = fmul double %_8, 5.000000e-01
; call libm::math::floor::floor
  %_6 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_7)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = fsub double %_4, %_6
  %2 = fmul double 2.000000e+00, %_3
  store double %2, double* %x, align 8
  %_10 = load double, double* %x, align 8
  %_9 = fmul double %_10, 4.000000e+00
  %3 = call i32 @llvm.fptosi.sat.i32.f64(double %_9)
  store i32 %3, i32* %n, align 4
  %_12 = load i32, i32* %n, align 4
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_12, i32 1)
  %_13.0 = extractvalue { i32, i1 } %4, 0
  %_13.1 = extractvalue { i32, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %5, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %_15 = icmp eq i32 %_13.0, -2147483648
  %_16 = and i1 false, %_15
  %6 = call i1 @llvm.expect.i1(i1 %_16, i1 false)
  br i1 %6, label %panic1, label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2058 to %"core::panic::location::Location"*)) #11
  unreachable

bb3:                                              ; preds = %bb2
  %7 = sdiv i32 %_13.0, 2
  store i32 %7, i32* %n, align 4
  %_19 = load i32, i32* %n, align 4
  %_18 = sitofp i32 %_19 to double
  %_17 = fmul double %_18, 5.000000e-01
  %8 = load double, double* %x, align 8
  %9 = fsub double %8, %_17
  store double %9, double* %x, align 8
  %10 = load double, double* %x, align 8
  %11 = fmul double %10, 0x400921FB54442D18
  store double %11, double* %x, align 8
  %12 = load i32, i32* %n, align 4
  switch i32 %12, label %bb8 [
    i32 1, label %bb4
    i32 2, label %bb5
    i32 3, label %bb6
    i32 0, label %bb8
  ]

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2058 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb3, %bb3
  %_25 = load double, double* %x, align 8
; call libm::math::k_sin::k_sin
  %13 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %_25, double 0.000000e+00, i32 0)
  store double %13, double* %1, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %_20 = load double, double* %x, align 8
; call libm::math::k_cos::k_cos
  %14 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %_20, double 0.000000e+00)
  store double %14, double* %1, align 8
  br label %bb9

bb5:                                              ; preds = %bb3
  %_22 = load double, double* %x, align 8
  %_21 = fneg double %_22
; call libm::math::k_sin::k_sin
  %15 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %_21, double 0.000000e+00, i32 0)
  store double %15, double* %1, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_24 = load double, double* %x, align 8
; call libm::math::k_cos::k_cos
  %_23 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %_24, double 0.000000e+00)
  br label %bb7

bb9:                                              ; preds = %bb4, %bb5, %bb7, %bb8
  %16 = load double, double* %1, align 8
  ret double %16

bb7:                                              ; preds = %bb6
  %17 = fneg double %_23
  store double %17, double* %1, align 8
  br label %bb9
}

; libm::math::lgamma_r::lgamma_r
; Function Attrs: nonlazybind uwtable
define { double, i32 } @_ZN4libm4math8lgamma_r8lgamma_r17hd59f0726214009b8E(double %0) unnamed_addr #1 {
start:
  %_61 = alloca i8, align 1
  %_60 = alloca i8, align 1
  %signgam = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca double, align 8
  %r = alloca double, align 8
  %p2 = alloca double, align 8
  %p1 = alloca double, align 8
  %p = alloca double, align 8
  %nadj = alloca double, align 8
  %z = alloca double, align 8
  %y = alloca double, align 8
  %t = alloca double, align 8
  %1 = alloca { double, i32 }, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_3 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_3)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 1, i32* %signgam, align 4
  %_21.0 = lshr i64 %u, 63
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i64 %_21.0, 0
  %_25.0 = lshr i64 %u, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %_22 = trunc i64 %_25.0 to i32
  %ix = and i32 %_22, 2147483647
  %_26 = icmp uge i32 %ix, 2146435072
  br i1 %_26, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_32 = icmp ult i32 %ix, 999292928
  br i1 %_32, label %bb6, label %bb10

bb4:                                              ; preds = %bb3
  %_29 = load double, double* %x, align 8
  %_30 = load double, double* %x, align 8
  %_28 = fmul double %_29, %_30
  %_31 = load i32, i32* %signgam, align 4
  %2 = bitcast { double, i32 }* %1 to double*
  store double %_28, double* %2, align 8
  %3 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  store i32 %_31, i32* %3, align 8
  br label %bb66

bb66:                                             ; preds = %bb65, %bb14, %bb9, %bb4
  %4 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { double, i32 } undef, double %5, 0
  %9 = insertvalue { double, i32 } %8, i32 %7, 1
  ret { double, i32 } %9

bb10:                                             ; preds = %bb5
  br i1 %sign, label %bb11, label %bb12

bb6:                                              ; preds = %bb5
  br i1 %sign, label %bb7, label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %_39 = load double, double* %x, align 8
; call libm::math::log::log
  %_38 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_39)
  br label %bb9

bb7:                                              ; preds = %bb6
  %_36 = load double, double* %x, align 8
  %10 = fneg double %_36
  store double %10, double* %x, align 8
  store i32 -1, i32* %signgam, align 4
  br label %bb8

bb9:                                              ; preds = %bb8
  %_37 = fneg double %_38
  %_40 = load i32, i32* %signgam, align 4
  %11 = bitcast { double, i32 }* %1 to double*
  store double %_37, double* %11, align 8
  %12 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  store i32 %_40, i32* %12, align 8
  br label %bb66

bb12:                                             ; preds = %bb10
  store double 0.000000e+00, double* %nadj, align 8
  br label %bb20

bb11:                                             ; preds = %bb10
  %_42 = load double, double* %x, align 8
  %13 = fneg double %_42
  store double %13, double* %x, align 8
  %_44 = load double, double* %x, align 8
; call libm::math::lgamma_r::sin_pi
  %_43 = call double @_ZN4libm4math8lgamma_r6sin_pi17he40ac43a74b56c5aE(double %_44)
  br label %bb13

bb13:                                             ; preds = %bb11
  store double %_43, double* %t, align 8
  %_46 = load double, double* %t, align 8
  %_45 = fcmp oeq double %_46, 0.000000e+00
  br i1 %_45, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %_53 = load double, double* %t, align 8
  %_52 = fcmp ogt double %_53, 0.000000e+00
  br i1 %_52, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  %_49 = load double, double* %x, align 8
  %_50 = load double, double* %x, align 8
  %_48 = fsub double %_49, %_50
  %_47 = fdiv double 1.000000e+00, %_48
  %_51 = load i32, i32* %signgam, align 4
  %14 = bitcast { double, i32 }* %1 to double*
  store double %_47, double* %14, align 8
  %15 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  store i32 %_51, i32* %15, align 8
  br label %bb66

bb17:                                             ; preds = %bb15
  %_54 = load double, double* %t, align 8
  %16 = fneg double %_54
  store double %16, double* %t, align 8
  br label %bb18

bb16:                                             ; preds = %bb15
  store i32 -1, i32* %signgam, align 4
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16
  %_58 = load double, double* %t, align 8
  %_59 = load double, double* %x, align 8
  %_57 = fmul double %_58, %_59
  %_56 = fdiv double 0x400921FB54442D18, %_57
; call libm::math::log::log
  %_55 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_56)
  br label %bb19

bb19:                                             ; preds = %bb18
  store double %_55, double* %nadj, align 8
  br label %bb20

bb20:                                             ; preds = %bb12, %bb19
  %17 = icmp eq i32 %ix, 1072693248
  br i1 %17, label %bb24, label %bb25

bb24:                                             ; preds = %bb20
  store i8 1, i8* %_61, align 1
  br label %bb26

bb25:                                             ; preds = %bb20
  %_63 = icmp eq i32 %ix, 1073741824
  %18 = zext i1 %_63 to i8
  store i8 %18, i8* %_61, align 1
  br label %bb26

bb26:                                             ; preds = %bb24, %bb25
  %19 = load i8, i8* %_61, align 1, !range !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb22, label %bb21

bb21:                                             ; preds = %bb26
  store i8 0, i8* %_60, align 1
  br label %bb23

bb22:                                             ; preds = %bb26
  %_66 = and i64 %u, 4294967295
  %_65 = icmp eq i64 %_66, 0
  %21 = zext i1 %_65 to i8
  store i8 %21, i8* %_60, align 1
  br label %bb23

bb23:                                             ; preds = %bb21, %bb22
  %22 = load i8, i8* %_60, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb27, label %bb28

bb28:                                             ; preds = %bb23
  %_68 = icmp ult i32 %ix, 1073741824
  br i1 %_68, label %bb29, label %bb46

bb27:                                             ; preds = %bb23
  store double 0.000000e+00, double* %r, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb60, %bb57, %bb55, %bb43, %bb44, %bb45, %bb27
  br i1 %sign, label %bb64, label %bb65

bb46:                                             ; preds = %bb28
  %_215 = icmp ult i32 %ix, 1075838976
  br i1 %_215, label %bb47, label %bb58

bb29:                                             ; preds = %bb28
  %_70 = icmp ule i32 %ix, 1072483532
  br i1 %_70, label %bb30, label %bb36

bb36:                                             ; preds = %bb29
  store double 0.000000e+00, double* %r, align 8
  %_82 = icmp uge i32 %ix, 1073460419
  br i1 %_82, label %bb37, label %bb38

bb30:                                             ; preds = %bb29
  %_73 = load double, double* %x, align 8
; call libm::math::log::log
  %_72 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_73)
  br label %bb31

bb31:                                             ; preds = %bb30
  %24 = fneg double %_72
  store double %24, double* %r, align 8
  %_74 = icmp uge i32 %ix, 1072130372
  br i1 %_74, label %bb32, label %bb33

bb33:                                             ; preds = %bb31
  %_77 = icmp uge i32 %ix, 1070442081
  br i1 %_77, label %bb34, label %bb35

bb32:                                             ; preds = %bb31
  %_76 = load double, double* %x, align 8
  %25 = fsub double 1.000000e+00, %_76
  store double %25, double* %y, align 8
  store i32 0, i32* %i, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %bb39, %bb37, %bb35, %bb34, %bb32
  %26 = load i32, i32* %i, align 4
  switch i32 %26, label %bb42 [
    i32 0, label %bb43
    i32 1, label %bb44
    i32 2, label %bb45
  ]

bb35:                                             ; preds = %bb33
  %_81 = load double, double* %x, align 8
  store double %_81, double* %y, align 8
  store i32 2, i32* %i, align 4
  br label %bb41

bb34:                                             ; preds = %bb33
  %_79 = load double, double* %x, align 8
  %27 = fsub double %_79, 0x3FDD8B618D5AF8FC
  store double %27, double* %y, align 8
  store i32 1, i32* %i, align 4
  br label %bb41

bb38:                                             ; preds = %bb36
  %_85 = icmp uge i32 %ix, 1072936132
  br i1 %_85, label %bb39, label %bb40

bb37:                                             ; preds = %bb36
  %_84 = load double, double* %x, align 8
  %28 = fsub double 2.000000e+00, %_84
  store double %28, double* %y, align 8
  store i32 0, i32* %i, align 4
  br label %bb41

bb40:                                             ; preds = %bb38
  %_88 = load double, double* %x, align 8
  %29 = fsub double %_88, 1.000000e+00
  store double %29, double* %y, align 8
  store i32 2, i32* %i, align 4
  br label %bb41

bb39:                                             ; preds = %bb38
  %_87 = load double, double* %x, align 8
  %30 = fsub double %_87, 0x3FF762D86356BE3F
  store double %30, double* %y, align 8
  store i32 1, i32* %i, align 4
  br label %bb41

bb42:                                             ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2589 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2061 to %"core::panic::location::Location"*)) #11
  unreachable

bb43:                                             ; preds = %bb41
  %_89 = load double, double* %y, align 8
  %_90 = load double, double* %y, align 8
  %31 = fmul double %_89, %_90
  store double %31, double* %z, align 8
  %_92 = load double, double* %z, align 8
  %_95 = load double, double* %z, align 8
  %_98 = load double, double* %z, align 8
  %_101 = load double, double* %z, align 8
  %_104 = load double, double* %z, align 8
  %_103 = fmul double %_104, 0x3EFA7074428CFA52
  %_102 = fadd double 0x3F2CF2ECED10E54D, %_103
  %_100 = fmul double %_101, %_102
  %_99 = fadd double 0x3F538A94116F3F5D, %_100
  %_97 = fmul double %_98, %_99
  %_96 = fadd double 0x3F7E404FB68FEFE8, %_97
  %_94 = fmul double %_95, %_96
  %_93 = fadd double 0x3FB13E001A5562A7, %_94
  %_91 = fmul double %_92, %_93
  %32 = fadd double 0x3FB3C467E37DB0C8, %_91
  store double %32, double* %p1, align 8
  %_105 = load double, double* %z, align 8
  %_108 = load double, double* %z, align 8
  %_111 = load double, double* %z, align 8
  %_114 = load double, double* %z, align 8
  %_117 = load double, double* %z, align 8
  %_120 = load double, double* %z, align 8
  %_119 = fmul double %_120, 0x3F07858E90A45837
  %_118 = fadd double 0x3F1C5088987DFB07, %_119
  %_116 = fmul double %_117, %_118
  %_115 = fadd double 0x3F40B6C689B99C00, %_116
  %_113 = fmul double %_114, %_115
  %_112 = fadd double 0x3F67ADD8CCB7926B, %_113
  %_110 = fmul double %_111, %_112
  %_109 = fadd double 0x3F951322AC92547B, %_110
  %_107 = fmul double %_108, %_109
  %_106 = fadd double 0x3FD4A34CC4A60FAD, %_107
  %33 = fmul double %_105, %_106
  store double %33, double* %p2, align 8
  %_122 = load double, double* %y, align 8
  %_123 = load double, double* %p1, align 8
  %_121 = fmul double %_122, %_123
  %_124 = load double, double* %p2, align 8
  %34 = fadd double %_121, %_124
  store double %34, double* %p, align 8
  %_126 = load double, double* %p, align 8
  %_128 = load double, double* %y, align 8
  %_127 = fmul double 5.000000e-01, %_128
  %_125 = fsub double %_126, %_127
  %35 = load double, double* %r, align 8
  %36 = fadd double %35, %_125
  store double %36, double* %r, align 8
  br label %bb63

bb44:                                             ; preds = %bb41
  %_129 = load double, double* %y, align 8
  %_130 = load double, double* %y, align 8
  %37 = fmul double %_129, %_130
  store double %37, double* %z, align 8
  %_131 = load double, double* %z, align 8
  %_132 = load double, double* %y, align 8
  %38 = fmul double %_131, %_132
  store double %38, double* %w, align 8
  %_134 = load double, double* %w, align 8
  %_137 = load double, double* %w, align 8
  %_140 = load double, double* %w, align 8
  %_143 = load double, double* %w, align 8
  %_142 = fmul double %_143, 0x3F34AF6D6C0EBBF7
  %_141 = fadd double 0xBF56FE8EBF2D1AF1, %_142
  %_139 = fmul double %_140, %_141
  %_138 = fadd double 0x3F78FCE0E370E344, %_139
  %_136 = fmul double %_137, %_138
  %_135 = fadd double 0xBFA0C9A8DF35B713, %_136
  %_133 = fmul double %_134, %_135
  %39 = fadd double 0x3FDEF72BC8EE38A2, %_133
  store double %39, double* %p1, align 8
  %_145 = load double, double* %w, align 8
  %_148 = load double, double* %w, align 8
  %_151 = load double, double* %w, align 8
  %_154 = load double, double* %w, align 8
  %_153 = fmul double %_154, 0xBF347F24ECC38C38
  %_152 = fadd double 0x3F4CDF0CEF61A8E9, %_153
  %_150 = fmul double %_151, %_152
  %_149 = fadd double 0xBF6E2EFFB3E914D7, %_150
  %_147 = fmul double %_148, %_149
  %_146 = fadd double 0x3F9266E7970AF9EC, %_147
  %_144 = fmul double %_145, %_146
  %40 = fadd double 0xBFC2E4278DC6C509, %_144
  store double %40, double* %p2, align 8
  %_156 = load double, double* %w, align 8
  %_159 = load double, double* %w, align 8
  %_162 = load double, double* %w, align 8
  %_165 = load double, double* %w, align 8
  %_164 = fmul double %_165, 0x3F35FD3EE8C2D3F4
  %_163 = fadd double 0xBF41A6109C73E0EC, %_164
  %_161 = fmul double %_162, %_163
  %_160 = fadd double 0x3F6282D32E15C915, %_161
  %_158 = fmul double %_159, %_160
  %_157 = fadd double 0xBF851F9FBA91EC6A, %_158
  %_155 = fmul double %_156, %_157
  %p3 = fadd double 0x3FB08B4294D5419B, %_155
  %_167 = load double, double* %z, align 8
  %_168 = load double, double* %p1, align 8
  %_166 = fmul double %_167, %_168
  %_171 = load double, double* %w, align 8
  %_173 = load double, double* %p2, align 8
  %_175 = load double, double* %y, align 8
  %_174 = fmul double %_175, %p3
  %_172 = fadd double %_173, %_174
  %_170 = fmul double %_171, %_172
  %_169 = fsub double 0xBC50C7CAA48A971F, %_170
  %41 = fsub double %_166, %_169
  store double %41, double* %p, align 8
  %_178 = load double, double* %p, align 8
  %_177 = fadd double 0xBFBF19B9BCC38A42, %_178
  %42 = load double, double* %r, align 8
  %43 = fadd double %42, %_177
  store double %43, double* %r, align 8
  br label %bb63

bb45:                                             ; preds = %bb41
  %_179 = load double, double* %y, align 8
  %_182 = load double, double* %y, align 8
  %_185 = load double, double* %y, align 8
  %_188 = load double, double* %y, align 8
  %_191 = load double, double* %y, align 8
  %_194 = load double, double* %y, align 8
  %_193 = fmul double %_194, 0x3F8B678BBF2BAB09
  %_192 = fadd double 0x3FCD4EAEF6010924, %_193
  %_190 = fmul double %_191, %_192
  %_189 = fadd double 0x3FEF497644EA8450, %_190
  %_187 = fmul double %_188, %_189
  %_186 = fadd double 0x3FF7475CD119BD6F, %_187
  %_184 = fmul double %_185, %_186
  %_183 = fadd double 0x3FE4401E8B005DFF, %_184
  %_181 = fmul double %_182, %_183
  %_180 = fadd double 0xBFB3C467E37DB0C8, %_181
  %44 = fmul double %_179, %_180
  store double %44, double* %p1, align 8
  %_196 = load double, double* %y, align 8
  %_199 = load double, double* %y, align 8
  %_202 = load double, double* %y, align 8
  %_205 = load double, double* %y, align 8
  %_208 = load double, double* %y, align 8
  %_207 = fmul double %_208, 0x3F6A5ABB57D0CF61
  %_206 = fadd double 0x3FBAAE55D6537C88, %_207
  %_204 = fmul double %_205, %_206
  %_203 = fadd double 0x3FE89DFBE45050AF, %_204
  %_201 = fmul double %_202, %_203
  %_200 = fadd double 0x40010725A42B18F5, %_201
  %_198 = fmul double %_199, %_200
  %_197 = fadd double 0x4003A5D7C2BD619C, %_198
  %_195 = fmul double %_196, %_197
  %45 = fadd double 1.000000e+00, %_195
  store double %45, double* %p2, align 8
  %_211 = load double, double* %y, align 8
  %_210 = fmul double -5.000000e-01, %_211
  %_213 = load double, double* %p1, align 8
  %_214 = load double, double* %p2, align 8
  %_212 = fdiv double %_213, %_214
  %_209 = fadd double %_210, %_212
  %46 = load double, double* %r, align 8
  %47 = fadd double %46, %_209
  store double %47, double* %r, align 8
  br label %bb63

bb58:                                             ; preds = %bb46
  %_284 = icmp ult i32 %ix, 1133510656
  br i1 %_284, label %bb59, label %bb61

bb47:                                             ; preds = %bb46
  %_217 = load double, double* %x, align 8
  %48 = call i32 @llvm.fptosi.sat.i32.f64(double %_217)
  store i32 %48, i32* %i, align 4
  %_218 = load double, double* %x, align 8
  %_220 = load i32, i32* %i, align 4
  %_219 = sitofp i32 %_220 to double
  %49 = fsub double %_218, %_219
  store double %49, double* %y, align 8
  %_221 = load double, double* %y, align 8
  %_224 = load double, double* %y, align 8
  %_227 = load double, double* %y, align 8
  %_230 = load double, double* %y, align 8
  %_233 = load double, double* %y, align 8
  %_236 = load double, double* %y, align 8
  %_239 = load double, double* %y, align 8
  %_238 = fmul double %_239, 0x3F00BFECDD17E945
  %_237 = fadd double 0x3F5E26B67368F239, %_238
  %_235 = fmul double %_236, %_237
  %_234 = fadd double 0x3F9B481C7E939961, %_235
  %_232 = fmul double %_233, %_234
  %_231 = fadd double 0x3FC2BB9CBEE5F2F7, %_232
  %_229 = fmul double %_230, %_231
  %_228 = fadd double 0x3FD4D98F4F139F59, %_229
  %_226 = fmul double %_227, %_228
  %_225 = fadd double 0x3FCB848B36E20878, %_226
  %_223 = fmul double %_224, %_225
  %_222 = fadd double 0xBFB3C467E37DB0C8, %_223
  %50 = fmul double %_221, %_222
  store double %50, double* %p, align 8
  %_241 = load double, double* %y, align 8
  %_244 = load double, double* %y, align 8
  %_247 = load double, double* %y, align 8
  %_250 = load double, double* %y, align 8
  %_253 = load double, double* %y, align 8
  %_256 = load double, double* %y, align 8
  %_255 = fmul double %_256, 0x3EDEBAF7A5B38140
  %_254 = fadd double 0x3F497DDACA41A95B, %_255
  %_252 = fmul double %_253, %_254
  %_251 = fadd double 0x3F9317EA742ED475, %_252
  %_249 = fmul double %_250, %_251
  %_248 = fadd double 0x3FC601EDCCFBDF27, %_249
  %_246 = fmul double %_247, %_248
  %_245 = fadd double 0x3FE71A1893D3DCDC, %_246
  %_243 = fmul double %_244, %_245
  %_242 = fadd double 0x3FF645A762C4AB74, %_243
  %_240 = fmul double %_241, %_242
  %q = fadd double 1.000000e+00, %_240
  %_258 = load double, double* %y, align 8
  %_257 = fmul double 5.000000e-01, %_258
  %_260 = load double, double* %p, align 8
  %_259 = fdiv double %_260, %q
  %51 = fadd double %_257, %_259
  store double %51, double* %r, align 8
  store double 1.000000e+00, double* %z, align 8
  %_263 = load i32, i32* %i, align 4
  %_262 = icmp sge i32 %_263, 7
  br i1 %_262, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %_267 = load i32, i32* %i, align 4
  %_266 = icmp sge i32 %_267, 6
  br i1 %_266, label %bb50, label %bb51

bb48:                                             ; preds = %bb47
  %_265 = load double, double* %y, align 8
  %_264 = fadd double %_265, 6.000000e+00
  %52 = load double, double* %z, align 8
  %53 = fmul double %52, %_264
  store double %53, double* %z, align 8
  br label %bb49

bb51:                                             ; preds = %bb50, %bb49
  %_271 = load i32, i32* %i, align 4
  %_270 = icmp sge i32 %_271, 5
  br i1 %_270, label %bb52, label %bb53

bb50:                                             ; preds = %bb49
  %_269 = load double, double* %y, align 8
  %_268 = fadd double %_269, 5.000000e+00
  %54 = load double, double* %z, align 8
  %55 = fmul double %54, %_268
  store double %55, double* %z, align 8
  br label %bb51

bb53:                                             ; preds = %bb52, %bb51
  %_275 = load i32, i32* %i, align 4
  %_274 = icmp sge i32 %_275, 4
  br i1 %_274, label %bb54, label %bb55

bb52:                                             ; preds = %bb51
  %_273 = load double, double* %y, align 8
  %_272 = fadd double %_273, 4.000000e+00
  %56 = load double, double* %z, align 8
  %57 = fmul double %56, %_272
  store double %57, double* %z, align 8
  br label %bb53

bb55:                                             ; preds = %bb54, %bb53
  %_279 = load i32, i32* %i, align 4
  %_278 = icmp sge i32 %_279, 3
  br i1 %_278, label %bb56, label %bb63

bb54:                                             ; preds = %bb53
  %_277 = load double, double* %y, align 8
  %_276 = fadd double %_277, 3.000000e+00
  %58 = load double, double* %z, align 8
  %59 = fmul double %58, %_276
  store double %59, double* %z, align 8
  br label %bb55

bb56:                                             ; preds = %bb55
  %_281 = load double, double* %y, align 8
  %_280 = fadd double %_281, 2.000000e+00
  %60 = load double, double* %z, align 8
  %61 = fmul double %60, %_280
  store double %61, double* %z, align 8
  %_283 = load double, double* %z, align 8
; call libm::math::log::log
  %_282 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_283)
  br label %bb57

bb57:                                             ; preds = %bb56
  %62 = load double, double* %r, align 8
  %63 = fadd double %62, %_282
  store double %63, double* %r, align 8
  br label %bb63

bb61:                                             ; preds = %bb58
  %_314 = load double, double* %x, align 8
  %_317 = load double, double* %x, align 8
; call libm::math::log::log
  %_316 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_317)
  br label %bb62

bb59:                                             ; preds = %bb58
  %_287 = load double, double* %x, align 8
; call libm::math::log::log
  %_286 = call double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %_287)
  br label %bb60

bb60:                                             ; preds = %bb59
  store double %_286, double* %t, align 8
  %_288 = load double, double* %x, align 8
  %64 = fdiv double 1.000000e+00, %_288
  store double %64, double* %z, align 8
  %_289 = load double, double* %z, align 8
  %_290 = load double, double* %z, align 8
  %65 = fmul double %_289, %_290
  store double %65, double* %y, align 8
  %_292 = load double, double* %z, align 8
  %_295 = load double, double* %y, align 8
  %_298 = load double, double* %y, align 8
  %_301 = load double, double* %y, align 8
  %_304 = load double, double* %y, align 8
  %_307 = load double, double* %y, align 8
  %_306 = fmul double %_307, 0xBF5AB89D0B9E43E4
  %_305 = fadd double 0x3F4B67BA4CDAD5D1, %_306
  %_303 = fmul double %_304, %_305
  %_302 = fadd double 0xBF4380CB8C0FE741, %_303
  %_300 = fmul double %_301, %_302
  %_299 = fadd double 0x3F4A019F98CF38B6, %_300
  %_297 = fmul double %_298, %_299
  %_296 = fadd double 0xBF66C16C16B02E5C, %_297
  %_294 = fmul double %_295, %_296
  %_293 = fadd double 0x3FB555555555553B, %_294
  %_291 = fmul double %_292, %_293
  %66 = fadd double 0x3FDACFE390C97D69, %_291
  store double %66, double* %w, align 8
  %_310 = load double, double* %x, align 8
  %_309 = fsub double %_310, 5.000000e-01
  %_312 = load double, double* %t, align 8
  %_311 = fsub double %_312, 1.000000e+00
  %_308 = fmul double %_309, %_311
  %_313 = load double, double* %w, align 8
  %67 = fadd double %_308, %_313
  store double %67, double* %r, align 8
  br label %bb63

bb62:                                             ; preds = %bb61
  %_315 = fsub double %_316, 1.000000e+00
  %68 = fmul double %_314, %_315
  store double %68, double* %r, align 8
  br label %bb63

bb65:                                             ; preds = %bb64, %bb63
  %_321 = load double, double* %r, align 8
  %_322 = load i32, i32* %signgam, align 4
  %69 = bitcast { double, i32 }* %1 to double*
  store double %_321, double* %69, align 8
  %70 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  store i32 %_322, i32* %70, align 8
  br label %bb66

bb64:                                             ; preds = %bb63
  %_319 = load double, double* %nadj, align 8
  %_320 = load double, double* %r, align 8
  %71 = fsub double %_319, %_320
  store double %71, double* %r, align 8
  br label %bb65
}

; libm::math::lgammaf::lgammaf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math7lgammaf7lgammaf17h0192d521c0e065efE(float %x) unnamed_addr #1 {
start:
; call libm::math::lgammaf_r::lgammaf_r
  %0 = call { float, i32 } @_ZN4libm4math9lgammaf_r9lgammaf_r17h0a7c553e74f8ae6cE(float %x)
  %_2.0 = extractvalue { float, i32 } %0, 0
  %_2.1 = extractvalue { float, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret float %_2.0
}

; libm::math::lgammaf_r::sin_pi
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math9lgammaf_r6sin_pi17h24d9b356b4a8dd76E(float %0) unnamed_addr #1 {
start:
  %n = alloca i64, align 8
  %y = alloca double, align 8
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_6 = load float, float* %x, align 4
  %_5 = fmul float %_6, 5.000000e-01
  %_9 = load float, float* %x, align 4
  %_8 = fmul float %_9, 5.000000e-01
; call libm::math::floorf::floorf
  %_7 = call float @_ZN4libm4math6floorf6floorf17h6aac356f5f94488cE(float %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = fsub float %_5, %_7
  %2 = fmul float 2.000000e+00, %_4
  store float %2, float* %x, align 4
  %_11 = load float, float* %x, align 4
  %_10 = fmul float %_11, 4.000000e+00
  %3 = call i64 @llvm.fptosi.sat.i64.f32(float %_10)
  store i64 %3, i64* %n, align 8
  %_13 = load i64, i64* %n, align 8
  %4 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_13, i64 1)
  %_14.0 = extractvalue { i64, i1 } %4, 0
  %_14.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %5, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %_16 = icmp eq i64 %_14.0, -9223372036854775808
  %_17 = and i1 false, %_16
  %6 = call i1 @llvm.expect.i1(i1 %_17, i1 false)
  br i1 %6, label %panic1, label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2063 to %"core::panic::location::Location"*)) #11
  unreachable

bb3:                                              ; preds = %bb2
  %7 = sdiv i64 %_14.0, 2
  store i64 %7, i64* %n, align 8
  %_19 = load float, float* %x, align 4
  %_18 = fpext float %_19 to double
  %_22 = load i64, i64* %n, align 8
  %_21 = sitofp i64 %_22 to double
  %_20 = fmul double %_21, 5.000000e-01
  %8 = fsub double %_18, %_20
  store double %8, double* %y, align 8
  %9 = load double, double* %y, align 8
  %10 = fmul double %9, 0x400921FB54442D18
  store double %10, double* %y, align 8
  %11 = load i64, i64* %n, align 8
  switch i64 %11, label %bb8 [
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 0, label %bb8
  ]

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2063 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb3, %bb3
  %_28 = load double, double* %y, align 8
; call libm::math::k_sinf::k_sinf
  %12 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_28)
  store float %12, float* %1, align 4
  br label %bb9

bb4:                                              ; preds = %bb3
  %_23 = load double, double* %y, align 8
; call libm::math::k_cosf::k_cosf
  %13 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_23)
  store float %13, float* %1, align 4
  br label %bb9

bb5:                                              ; preds = %bb3
  %_25 = load double, double* %y, align 8
  %_24 = fneg double %_25
; call libm::math::k_sinf::k_sinf
  %14 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_24)
  store float %14, float* %1, align 4
  br label %bb9

bb6:                                              ; preds = %bb3
  %_27 = load double, double* %y, align 8
; call libm::math::k_cosf::k_cosf
  %_26 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_27)
  br label %bb7

bb9:                                              ; preds = %bb4, %bb5, %bb7, %bb8
  %15 = load float, float* %1, align 4
  ret float %15

bb7:                                              ; preds = %bb6
  %16 = fneg float %_26
  store float %16, float* %1, align 4
  br label %bb9
}

; libm::math::lgammaf_r::lgammaf_r
; Function Attrs: nonlazybind uwtable
define { float, i32 } @_ZN4libm4math9lgammaf_r9lgammaf_r17h0a7c553e74f8ae6cE(float %0) unnamed_addr #1 {
start:
  %_56 = alloca i8, align 1
  %signgam = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca float, align 4
  %r = alloca float, align 4
  %p2 = alloca float, align 4
  %p1 = alloca float, align 4
  %p = alloca float, align 4
  %nadj = alloca float, align 4
  %z = alloca float, align 4
  %y = alloca float, align 4
  %t = alloca float, align 4
  %1 = alloca { float, i32 }, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_3 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %u = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_3)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 1, i32* %signgam, align 4
  %_21.0 = lshr i32 %u, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_21.0, 0
  %ix = and i32 %u, 2147483647
  %_23 = icmp uge i32 %ix, 2139095040
  br i1 %_23, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_29 = icmp ult i32 %ix, 889192448
  br i1 %_29, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_26 = load float, float* %x, align 4
  %_27 = load float, float* %x, align 4
  %_25 = fmul float %_26, %_27
  %_28 = load i32, i32* %signgam, align 4
  %2 = bitcast { float, i32 }* %1 to float*
  store float %_25, float* %2, align 4
  %3 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 1
  store i32 %_28, i32* %3, align 4
  br label %bb62

bb62:                                             ; preds = %bb61, %bb13, %bb9, %bb3
  %4 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = insertvalue { float, i32 } undef, float %5, 0
  %9 = insertvalue { float, i32 } %8, i32 %7, 1
  ret { float, i32 } %9

bb6:                                              ; preds = %bb4
  br i1 %sign, label %bb10, label %bb11

bb5:                                              ; preds = %bb4
  br i1 %sign, label %bb7, label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %_35 = load float, float* %x, align 4
; call libm::math::logf::logf
  %_34 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_35)
  br label %bb9

bb7:                                              ; preds = %bb5
  store i32 -1, i32* %signgam, align 4
  %_32 = load float, float* %x, align 4
  %10 = fneg float %_32
  store float %10, float* %x, align 4
  br label %bb8

bb9:                                              ; preds = %bb8
  %_33 = fneg float %_34
  %_36 = load i32, i32* %signgam, align 4
  %11 = bitcast { float, i32 }* %1 to float*
  store float %_33, float* %11, align 4
  %12 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 1
  store i32 %_36, i32* %12, align 4
  br label %bb62

bb11:                                             ; preds = %bb6
  store float 0.000000e+00, float* %nadj, align 4
  br label %bb19

bb10:                                             ; preds = %bb6
  %_38 = load float, float* %x, align 4
  %13 = fneg float %_38
  store float %13, float* %x, align 4
  %_40 = load float, float* %x, align 4
; call libm::math::lgammaf_r::sin_pi
  %_39 = call float @_ZN4libm4math9lgammaf_r6sin_pi17h24d9b356b4a8dd76E(float %_40)
  br label %bb12

bb12:                                             ; preds = %bb10
  store float %_39, float* %t, align 4
  %_42 = load float, float* %t, align 4
  %_41 = fcmp oeq float %_42, 0.000000e+00
  br i1 %_41, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %_49 = load float, float* %t, align 4
  %_48 = fcmp ogt float %_49, 0.000000e+00
  br i1 %_48, label %bb15, label %bb16

bb13:                                             ; preds = %bb12
  %_45 = load float, float* %x, align 4
  %_46 = load float, float* %x, align 4
  %_44 = fsub float %_45, %_46
  %_43 = fdiv float 1.000000e+00, %_44
  %_47 = load i32, i32* %signgam, align 4
  %14 = bitcast { float, i32 }* %1 to float*
  store float %_43, float* %14, align 4
  %15 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 1
  store i32 %_47, i32* %15, align 4
  br label %bb62

bb16:                                             ; preds = %bb14
  %_50 = load float, float* %t, align 4
  %16 = fneg float %_50
  store float %16, float* %t, align 4
  br label %bb17

bb15:                                             ; preds = %bb14
  store i32 -1, i32* %signgam, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %_54 = load float, float* %t, align 4
  %_55 = load float, float* %x, align 4
  %_53 = fmul float %_54, %_55
  %_52 = fdiv float 0x400921FB60000000, %_53
; call libm::math::logf::logf
  %_51 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_52)
  br label %bb18

bb18:                                             ; preds = %bb17
  store float %_51, float* %nadj, align 4
  br label %bb19

bb19:                                             ; preds = %bb11, %bb18
  %17 = icmp eq i32 %ix, 1065353216
  br i1 %17, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  store i8 1, i8* %_56, align 1
  br label %bb22

bb21:                                             ; preds = %bb19
  %_58 = icmp eq i32 %ix, 1073741824
  %18 = zext i1 %_58 to i8
  store i8 %18, i8* %_56, align 1
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %19 = load i8, i8* %_56, align 1, !range !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb23, label %bb24

bb24:                                             ; preds = %bb22
  %_60 = icmp ult i32 %ix, 1073741824
  br i1 %_60, label %bb25, label %bb42

bb23:                                             ; preds = %bb22
  store float 0.000000e+00, float* %r, align 4
  br label %bb59

bb59:                                             ; preds = %bb58, %bb56, %bb53, %bb51, %bb39, %bb40, %bb41, %bb23
  br i1 %sign, label %bb60, label %bb61

bb42:                                             ; preds = %bb24
  %_207 = icmp ult i32 %ix, 1090519040
  br i1 %_207, label %bb43, label %bb54

bb25:                                             ; preds = %bb24
  %_62 = icmp ule i32 %ix, 1063675494
  br i1 %_62, label %bb26, label %bb32

bb32:                                             ; preds = %bb25
  store float 0.000000e+00, float* %r, align 4
  %_74 = icmp uge i32 %ix, 1071490584
  br i1 %_74, label %bb33, label %bb34

bb26:                                             ; preds = %bb25
  %_65 = load float, float* %x, align 4
; call libm::math::logf::logf
  %_64 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_65)
  br label %bb27

bb27:                                             ; preds = %bb26
  %21 = fneg float %_64
  store float %21, float* %r, align 4
  %_66 = icmp uge i32 %ix, 1060850208
  br i1 %_66, label %bb28, label %bb29

bb29:                                             ; preds = %bb27
  %_69 = icmp uge i32 %ix, 1047343880
  br i1 %_69, label %bb30, label %bb31

bb28:                                             ; preds = %bb27
  %_68 = load float, float* %x, align 4
  %22 = fsub float 1.000000e+00, %_68
  store float %22, float* %y, align 4
  store i32 0, i32* %i, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35, %bb33, %bb31, %bb30, %bb28
  %23 = load i32, i32* %i, align 4
  switch i32 %23, label %bb38 [
    i32 0, label %bb39
    i32 1, label %bb40
    i32 2, label %bb41
  ]

bb31:                                             ; preds = %bb29
  %_73 = load float, float* %x, align 4
  store float %_73, float* %y, align 4
  store i32 2, i32* %i, align 4
  br label %bb37

bb30:                                             ; preds = %bb29
  %_71 = load float, float* %x, align 4
  %24 = fsub float %_71, 0x3FDD8B6180000000
  store float %24, float* %y, align 4
  store i32 1, i32* %i, align 4
  br label %bb37

bb34:                                             ; preds = %bb32
  %_77 = icmp uge i32 %ix, 1067296288
  br i1 %_77, label %bb35, label %bb36

bb33:                                             ; preds = %bb32
  %_76 = load float, float* %x, align 4
  %25 = fsub float 2.000000e+00, %_76
  store float %25, float* %y, align 4
  store i32 0, i32* %i, align 4
  br label %bb37

bb36:                                             ; preds = %bb34
  %_80 = load float, float* %x, align 4
  %26 = fsub float %_80, 1.000000e+00
  store float %26, float* %y, align 4
  store i32 2, i32* %i, align 4
  br label %bb37

bb35:                                             ; preds = %bb34
  %_79 = load float, float* %x, align 4
  %27 = fsub float %_79, 0x3FF762D860000000
  store float %27, float* %y, align 4
  store i32 1, i32* %i, align 4
  br label %bb37

bb38:                                             ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2589 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2066 to %"core::panic::location::Location"*)) #11
  unreachable

bb39:                                             ; preds = %bb37
  %_81 = load float, float* %y, align 4
  %_82 = load float, float* %y, align 4
  %28 = fmul float %_81, %_82
  store float %28, float* %z, align 4
  %_84 = load float, float* %z, align 4
  %_87 = load float, float* %z, align 4
  %_90 = load float, float* %z, align 4
  %_93 = load float, float* %z, align 4
  %_96 = load float, float* %z, align 4
  %_95 = fmul float %_96, 0x3EFA707440000000
  %_94 = fadd float 0x3F2CF2ECE0000000, %_95
  %_92 = fmul float %_93, %_94
  %_91 = fadd float 0x3F538A9420000000, %_92
  %_89 = fmul float %_90, %_91
  %_88 = fadd float 0x3F7E404FC0000000, %_89
  %_86 = fmul float %_87, %_88
  %_85 = fadd float 0x3FB13E0020000000, %_86
  %_83 = fmul float %_84, %_85
  %29 = fadd float 0x3FB3C467E0000000, %_83
  store float %29, float* %p1, align 4
  %_97 = load float, float* %z, align 4
  %_100 = load float, float* %z, align 4
  %_103 = load float, float* %z, align 4
  %_106 = load float, float* %z, align 4
  %_109 = load float, float* %z, align 4
  %_112 = load float, float* %z, align 4
  %_111 = fmul float %_112, 0x3F07858EA0000000
  %_110 = fadd float 0x3F1C5088A0000000, %_111
  %_108 = fmul float %_109, %_110
  %_107 = fadd float 0x3F40B6C680000000, %_108
  %_105 = fmul float %_106, %_107
  %_104 = fadd float 0x3F67ADD8C0000000, %_105
  %_102 = fmul float %_103, %_104
  %_101 = fadd float 0x3F951322A0000000, %_102
  %_99 = fmul float %_100, %_101
  %_98 = fadd float 0x3FD4A34CC0000000, %_99
  %30 = fmul float %_97, %_98
  store float %30, float* %p2, align 4
  %_114 = load float, float* %y, align 4
  %_115 = load float, float* %p1, align 4
  %_113 = fmul float %_114, %_115
  %_116 = load float, float* %p2, align 4
  %31 = fadd float %_113, %_116
  store float %31, float* %p, align 4
  %_118 = load float, float* %p, align 4
  %_120 = load float, float* %y, align 4
  %_119 = fmul float 5.000000e-01, %_120
  %_117 = fsub float %_118, %_119
  %32 = load float, float* %r, align 4
  %33 = fadd float %32, %_117
  store float %33, float* %r, align 4
  br label %bb59

bb40:                                             ; preds = %bb37
  %_121 = load float, float* %y, align 4
  %_122 = load float, float* %y, align 4
  %34 = fmul float %_121, %_122
  store float %34, float* %z, align 4
  %_123 = load float, float* %z, align 4
  %_124 = load float, float* %y, align 4
  %35 = fmul float %_123, %_124
  store float %35, float* %w, align 4
  %_126 = load float, float* %w, align 4
  %_129 = load float, float* %w, align 4
  %_132 = load float, float* %w, align 4
  %_135 = load float, float* %w, align 4
  %_134 = fmul float %_135, 0x3F34AF6D60000000
  %_133 = fadd float 0xBF56FE8EC0000000, %_134
  %_131 = fmul float %_132, %_133
  %_130 = fadd float 0x3F78FCE0E0000000, %_131
  %_128 = fmul float %_129, %_130
  %_127 = fadd float 0xBFA0C9A8E0000000, %_128
  %_125 = fmul float %_126, %_127
  %36 = fadd float 0x3FDEF72BC0000000, %_125
  store float %36, float* %p1, align 4
  %_137 = load float, float* %w, align 4
  %_140 = load float, float* %w, align 4
  %_143 = load float, float* %w, align 4
  %_146 = load float, float* %w, align 4
  %_145 = fmul float %_146, 0xBF347F24E0000000
  %_144 = fadd float 0x3F4CDF0CE0000000, %_145
  %_142 = fmul float %_143, %_144
  %_141 = fadd float 0xBF6E2EFFC0000000, %_142
  %_139 = fmul float %_140, %_141
  %_138 = fadd float 0x3F9266E7A0000000, %_139
  %_136 = fmul float %_137, %_138
  %37 = fadd float 0xBFC2E42780000000, %_136
  store float %37, float* %p2, align 4
  %_148 = load float, float* %w, align 4
  %_151 = load float, float* %w, align 4
  %_154 = load float, float* %w, align 4
  %_157 = load float, float* %w, align 4
  %_156 = fmul float %_157, 0x3F35FD3EE0000000
  %_155 = fadd float 0xBF41A610A0000000, %_156
  %_153 = fmul float %_154, %_155
  %_152 = fadd float 0x3F6282D320000000, %_153
  %_150 = fmul float %_151, %_152
  %_149 = fadd float 0xBF851F9FC0000000, %_150
  %_147 = fmul float %_148, %_149
  %p3 = fadd float 0x3FB08B42A0000000, %_147
  %_159 = load float, float* %z, align 4
  %_160 = load float, float* %p1, align 4
  %_158 = fmul float %_159, %_160
  %_163 = load float, float* %w, align 4
  %_165 = load float, float* %p2, align 4
  %_167 = load float, float* %y, align 4
  %_166 = fmul float %_167, %p3
  %_164 = fadd float %_165, %_166
  %_162 = fmul float %_163, %_164
  %_161 = fsub float 0x3E3CC38A40000000, %_162
  %38 = fsub float %_158, %_161
  store float %38, float* %p, align 4
  %_170 = load float, float* %p, align 4
  %_169 = fadd float 0xBFBF19B9A0000000, %_170
  %39 = load float, float* %r, align 4
  %40 = fadd float %39, %_169
  store float %40, float* %r, align 4
  br label %bb59

bb41:                                             ; preds = %bb37
  %_171 = load float, float* %y, align 4
  %_174 = load float, float* %y, align 4
  %_177 = load float, float* %y, align 4
  %_180 = load float, float* %y, align 4
  %_183 = load float, float* %y, align 4
  %_186 = load float, float* %y, align 4
  %_185 = fmul float %_186, 0x3F8B678BC0000000
  %_184 = fadd float 0x3FCD4EAF00000000, %_185
  %_182 = fmul float %_183, %_184
  %_181 = fadd float 0x3FEF497640000000, %_182
  %_179 = fmul float %_180, %_181
  %_178 = fadd float 0x3FF7475CE0000000, %_179
  %_176 = fmul float %_177, %_178
  %_175 = fadd float 0x3FE4401E80000000, %_176
  %_173 = fmul float %_174, %_175
  %_172 = fadd float 0xBFB3C467E0000000, %_173
  %41 = fmul float %_171, %_172
  store float %41, float* %p1, align 4
  %_188 = load float, float* %y, align 4
  %_191 = load float, float* %y, align 4
  %_194 = load float, float* %y, align 4
  %_197 = load float, float* %y, align 4
  %_200 = load float, float* %y, align 4
  %_199 = fmul float %_200, 0x3F6A5ABB60000000
  %_198 = fadd float 0x3FBAAE55E0000000, %_199
  %_196 = fmul float %_197, %_198
  %_195 = fadd float 0x3FE89DFBE0000000, %_196
  %_193 = fmul float %_194, %_195
  %_192 = fadd float 0x40010725A0000000, %_193
  %_190 = fmul float %_191, %_192
  %_189 = fadd float 0x4003A5D7C0000000, %_190
  %_187 = fmul float %_188, %_189
  %42 = fadd float 1.000000e+00, %_187
  store float %42, float* %p2, align 4
  %_203 = load float, float* %y, align 4
  %_202 = fmul float -5.000000e-01, %_203
  %_205 = load float, float* %p1, align 4
  %_206 = load float, float* %p2, align 4
  %_204 = fdiv float %_205, %_206
  %_201 = fadd float %_202, %_204
  %43 = load float, float* %r, align 4
  %44 = fadd float %43, %_201
  store float %44, float* %r, align 4
  br label %bb59

bb54:                                             ; preds = %bb42
  %_276 = icmp ult i32 %ix, 1551892480
  br i1 %_276, label %bb55, label %bb57

bb43:                                             ; preds = %bb42
  %_209 = load float, float* %x, align 4
  %45 = call i32 @llvm.fptosi.sat.i32.f32(float %_209)
  store i32 %45, i32* %i, align 4
  %_210 = load float, float* %x, align 4
  %_212 = load i32, i32* %i, align 4
  %_211 = sitofp i32 %_212 to float
  %46 = fsub float %_210, %_211
  store float %46, float* %y, align 4
  %_213 = load float, float* %y, align 4
  %_216 = load float, float* %y, align 4
  %_219 = load float, float* %y, align 4
  %_222 = load float, float* %y, align 4
  %_225 = load float, float* %y, align 4
  %_228 = load float, float* %y, align 4
  %_231 = load float, float* %y, align 4
  %_230 = fmul float %_231, 0x3F00BFECE0000000
  %_229 = fadd float 0x3F5E26B680000000, %_230
  %_227 = fmul float %_228, %_229
  %_226 = fadd float 0x3F9B481C80000000, %_227
  %_224 = fmul float %_225, %_226
  %_223 = fadd float 0x3FC2BB9CC0000000, %_224
  %_221 = fmul float %_222, %_223
  %_220 = fadd float 0x3FD4D98F40000000, %_221
  %_218 = fmul float %_219, %_220
  %_217 = fadd float 0x3FCB848B40000000, %_218
  %_215 = fmul float %_216, %_217
  %_214 = fadd float 0xBFB3C467E0000000, %_215
  %47 = fmul float %_213, %_214
  store float %47, float* %p, align 4
  %_233 = load float, float* %y, align 4
  %_236 = load float, float* %y, align 4
  %_239 = load float, float* %y, align 4
  %_242 = load float, float* %y, align 4
  %_245 = load float, float* %y, align 4
  %_248 = load float, float* %y, align 4
  %_247 = fmul float %_248, 0x3EDEBAF7A0000000
  %_246 = fadd float 0x3F497DDAC0000000, %_247
  %_244 = fmul float %_245, %_246
  %_243 = fadd float 0x3F9317EA80000000, %_244
  %_241 = fmul float %_242, %_243
  %_240 = fadd float 0x3FC601EDC0000000, %_241
  %_238 = fmul float %_239, %_240
  %_237 = fadd float 0x3FE71A18A0000000, %_238
  %_235 = fmul float %_236, %_237
  %_234 = fadd float 0x3FF645A760000000, %_235
  %_232 = fmul float %_233, %_234
  %q = fadd float 1.000000e+00, %_232
  %_250 = load float, float* %y, align 4
  %_249 = fmul float 5.000000e-01, %_250
  %_252 = load float, float* %p, align 4
  %_251 = fdiv float %_252, %q
  %48 = fadd float %_249, %_251
  store float %48, float* %r, align 4
  store float 1.000000e+00, float* %z, align 4
  %_255 = load i32, i32* %i, align 4
  %_254 = icmp sge i32 %_255, 7
  br i1 %_254, label %bb44, label %bb45

bb45:                                             ; preds = %bb44, %bb43
  %_259 = load i32, i32* %i, align 4
  %_258 = icmp sge i32 %_259, 6
  br i1 %_258, label %bb46, label %bb47

bb44:                                             ; preds = %bb43
  %_257 = load float, float* %y, align 4
  %_256 = fadd float %_257, 6.000000e+00
  %49 = load float, float* %z, align 4
  %50 = fmul float %49, %_256
  store float %50, float* %z, align 4
  br label %bb45

bb47:                                             ; preds = %bb46, %bb45
  %_263 = load i32, i32* %i, align 4
  %_262 = icmp sge i32 %_263, 5
  br i1 %_262, label %bb48, label %bb49

bb46:                                             ; preds = %bb45
  %_261 = load float, float* %y, align 4
  %_260 = fadd float %_261, 5.000000e+00
  %51 = load float, float* %z, align 4
  %52 = fmul float %51, %_260
  store float %52, float* %z, align 4
  br label %bb47

bb49:                                             ; preds = %bb48, %bb47
  %_267 = load i32, i32* %i, align 4
  %_266 = icmp sge i32 %_267, 4
  br i1 %_266, label %bb50, label %bb51

bb48:                                             ; preds = %bb47
  %_265 = load float, float* %y, align 4
  %_264 = fadd float %_265, 4.000000e+00
  %53 = load float, float* %z, align 4
  %54 = fmul float %53, %_264
  store float %54, float* %z, align 4
  br label %bb49

bb51:                                             ; preds = %bb50, %bb49
  %_271 = load i32, i32* %i, align 4
  %_270 = icmp sge i32 %_271, 3
  br i1 %_270, label %bb52, label %bb59

bb50:                                             ; preds = %bb49
  %_269 = load float, float* %y, align 4
  %_268 = fadd float %_269, 3.000000e+00
  %55 = load float, float* %z, align 4
  %56 = fmul float %55, %_268
  store float %56, float* %z, align 4
  br label %bb51

bb52:                                             ; preds = %bb51
  %_273 = load float, float* %y, align 4
  %_272 = fadd float %_273, 2.000000e+00
  %57 = load float, float* %z, align 4
  %58 = fmul float %57, %_272
  store float %58, float* %z, align 4
  %_275 = load float, float* %z, align 4
; call libm::math::logf::logf
  %_274 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_275)
  br label %bb53

bb53:                                             ; preds = %bb52
  %59 = load float, float* %r, align 4
  %60 = fadd float %59, %_274
  store float %60, float* %r, align 4
  br label %bb59

bb57:                                             ; preds = %bb54
  %_306 = load float, float* %x, align 4
  %_309 = load float, float* %x, align 4
; call libm::math::logf::logf
  %_308 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_309)
  br label %bb58

bb55:                                             ; preds = %bb54
  %_279 = load float, float* %x, align 4
; call libm::math::logf::logf
  %_278 = call float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %_279)
  br label %bb56

bb56:                                             ; preds = %bb55
  store float %_278, float* %t, align 4
  %_280 = load float, float* %x, align 4
  %61 = fdiv float 1.000000e+00, %_280
  store float %61, float* %z, align 4
  %_281 = load float, float* %z, align 4
  %_282 = load float, float* %z, align 4
  %62 = fmul float %_281, %_282
  store float %62, float* %y, align 4
  %_284 = load float, float* %z, align 4
  %_287 = load float, float* %y, align 4
  %_290 = load float, float* %y, align 4
  %_293 = load float, float* %y, align 4
  %_296 = load float, float* %y, align 4
  %_299 = load float, float* %y, align 4
  %_298 = fmul float %_299, 0xBF5AB89D00000000
  %_297 = fadd float 0x3F4B67BA40000000, %_298
  %_295 = fmul float %_296, %_297
  %_294 = fadd float 0xBF4380CB80000000, %_295
  %_292 = fmul float %_293, %_294
  %_291 = fadd float 0x3F4A019FA0000000, %_292
  %_289 = fmul float %_290, %_291
  %_288 = fadd float 0xBF66C16C20000000, %_289
  %_286 = fmul float %_287, %_288
  %_285 = fadd float 0x3FB5555560000000, %_286
  %_283 = fmul float %_284, %_285
  %63 = fadd float 0x3FDACFE3A0000000, %_283
  store float %63, float* %w, align 4
  %_302 = load float, float* %x, align 4
  %_301 = fsub float %_302, 5.000000e-01
  %_304 = load float, float* %t, align 4
  %_303 = fsub float %_304, 1.000000e+00
  %_300 = fmul float %_301, %_303
  %_305 = load float, float* %w, align 4
  %64 = fadd float %_300, %_305
  store float %64, float* %r, align 4
  br label %bb59

bb58:                                             ; preds = %bb57
  %_307 = fsub float %_308, 1.000000e+00
  %65 = fmul float %_306, %_307
  store float %65, float* %r, align 4
  br label %bb59

bb61:                                             ; preds = %bb60, %bb59
  %_313 = load float, float* %r, align 4
  %_314 = load i32, i32* %signgam, align 4
  %66 = bitcast { float, i32 }* %1 to float*
  store float %_313, float* %66, align 4
  %67 = getelementptr inbounds { float, i32 }, { float, i32 }* %1, i32 0, i32 1
  store i32 %_314, i32* %67, align 4
  br label %bb62

bb60:                                             ; preds = %bb59
  %_311 = load float, float* %nadj, align 4
  %_312 = load float, float* %r, align 4
  %68 = fsub float %_311, %_312
  store float %68, float* %r, align 4
  br label %bb61
}

; libm::math::log::log
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3log3log17h6158149f6f5594b5E(double %0) unnamed_addr #1 {
start:
  %_38 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %ui = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
; call core::f64::<impl f64>::from_bits
  %x1p54 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4850376798678024192)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  store i64 %2, i64* %ui, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = load i64, i64* %ui, align 8
  %_8.0 = lshr i64 %_7, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = trunc i64 %_8.0 to i32
  store i32 %3, i32* %hx, align 4
  store i32 0, i32* %k, align 4
  %_12 = load i32, i32* %hx, align 4
  %_11 = icmp ult i32 %_12, 1048576
  br i1 %_11, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_15 = load i32, i32* %hx, align 4
  %_16.0 = lshr i32 %_15, 31
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_10, align 1
  br label %bb6

bb6:                                              ; preds = %bb7, %bb4
  %4 = load i8, i8* %_10, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb8, label %bb18

bb7:                                              ; preds = %bb5
  %_13 = icmp ne i32 %_16.0, 0
  %6 = zext i1 %_13 to i8
  store i8 %6, i8* %_10, align 1
  br label %bb6

bb18:                                             ; preds = %bb6
  %_37 = load i32, i32* %hx, align 4
  %_36 = icmp uge i32 %_37, 2146435072
  br i1 %_36, label %bb19, label %bb20

bb8:                                              ; preds = %bb6
  %_18 = load i64, i64* %ui, align 8
  %_19.0 = shl i64 %_18, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %7 = icmp eq i64 %_19.0, 0
  br i1 %7, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %_21 = load double, double* %x, align 8
  %_22 = load double, double* %x, align 8
  %_20 = fmul double %_21, %_22
  %8 = fdiv double -1.000000e+00, %_20
  store double %8, double* %1, align 8
  br label %bb34

bb11:                                             ; preds = %bb9
  %_24 = load i32, i32* %hx, align 4
  %_25.0 = lshr i32 %_24, 31
  br label %bb12

bb12:                                             ; preds = %bb11
  %9 = icmp eq i32 %_25.0, 0
  br i1 %9, label %bb14, label %bb13

bb14:                                             ; preds = %bb12
  %10 = load i32, i32* %k, align 4
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 54)
  %_29.0 = extractvalue { i32, i1 } %11, 0
  %_29.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %12, label %panic, label %bb15

bb13:                                             ; preds = %bb12
  %_27 = load double, double* %x, align 8
  %_28 = load double, double* %x, align 8
  %_26 = fsub double %_27, %_28
  %13 = fdiv double %_26, 0.000000e+00
  store double %13, double* %1, align 8
  br label %bb34

bb34:                                             ; preds = %bb33, %bb25, %bb19, %bb10, %bb13
  %14 = load double, double* %1, align 8
  ret double %14

bb15:                                             ; preds = %bb14
  store i32 %_29.0, i32* %k, align 4
  %15 = load double, double* %x, align 8
  %16 = fmul double %15, %x1p54
  store double %16, double* %x, align 8
  %_32 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %_31 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_32)
  br label %bb16

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2068 to %"core::panic::location::Location"*)) #11
  unreachable

bb16:                                             ; preds = %bb15
  store i64 %_31, i64* %ui, align 8
  %_34 = load i64, i64* %ui, align 8
  %_35.0 = lshr i64 %_34, 32
  br label %bb17

bb17:                                             ; preds = %bb16
  %17 = trunc i64 %_35.0 to i32
  store i32 %17, i32* %hx, align 4
  br label %bb26

bb26:                                             ; preds = %bb23, %bb17
  %18 = load i32, i32* %hx, align 4
  %19 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %18, i32 614242)
  %_45.0 = extractvalue { i32, i1 } %19, 0
  %_45.1 = extractvalue { i32, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_45.1, i1 false)
  br i1 %20, label %panic1, label %bb27

bb20:                                             ; preds = %bb18
  %_39 = load i32, i32* %hx, align 4
  %21 = icmp eq i32 %_39, 1072693248
  br i1 %21, label %bb22, label %bb21

bb19:                                             ; preds = %bb18
  %22 = load double, double* %x, align 8
  store double %22, double* %1, align 8
  br label %bb34

bb22:                                             ; preds = %bb20
  %_42 = load i64, i64* %ui, align 8
  %_43.0 = shl i64 %_42, 32
  br label %bb24

bb21:                                             ; preds = %bb20
  store i8 0, i8* %_38, align 1
  br label %bb23

bb23:                                             ; preds = %bb24, %bb21
  %23 = load i8, i8* %_38, align 1, !range !3
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb25, label %bb26

bb24:                                             ; preds = %bb22
  %_40 = icmp eq i64 %_43.0, 0
  %25 = zext i1 %_40 to i8
  store i8 %25, i8* %_38, align 1
  br label %bb23

bb25:                                             ; preds = %bb23
  store double 0.000000e+00, double* %1, align 8
  br label %bb34

bb27:                                             ; preds = %bb26
  store i32 %_45.0, i32* %hx, align 4
  %_49 = load i32, i32* %hx, align 4
  %_50.0 = lshr i32 %_49, 20
  br label %bb28

panic1:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2070 to %"core::panic::location::Location"*)) #11
  unreachable

bb28:                                             ; preds = %bb27
  %26 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_50.0, i32 1023)
  %_51.0 = extractvalue { i32, i1 } %26, 0
  %_51.1 = extractvalue { i32, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false)
  br i1 %27, label %panic2, label %bb29

bb29:                                             ; preds = %bb28
  %28 = load i32, i32* %k, align 4
  %29 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %_51.0)
  %_52.0 = extractvalue { i32, i1 } %29, 0
  %_52.1 = extractvalue { i32, i1 } %29, 1
  %30 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false)
  br i1 %30, label %panic3, label %bb30

panic2:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2072 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_52.0, i32* %k, align 4
  %_54 = load i32, i32* %hx, align 4
  %_53 = and i32 %_54, 1048575
  %31 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_53, i32 1072079006)
  %_55.0 = extractvalue { i32, i1 } %31, 0
  %_55.1 = extractvalue { i32, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %32, label %panic4, label %bb31

panic3:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2074 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i32 %_55.0, i32* %hx, align 4
  %_58 = load i32, i32* %hx, align 4
  %_57 = zext i32 %_58 to i64
  %_59.0 = shl i64 %_57, 32
  br label %bb32

panic4:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2076 to %"core::panic::location::Location"*)) #11
  unreachable

bb32:                                             ; preds = %bb31
  %_61 = load i64, i64* %ui, align 8
  %_60 = and i64 %_61, 4294967295
  %33 = or i64 %_59.0, %_60
  store i64 %33, i64* %ui, align 8
  %_63 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_62 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_63)
  br label %bb33

bb33:                                             ; preds = %bb32
  store double %_62, double* %x, align 8
  %_65 = load double, double* %x, align 8
  %f = fsub double %_65, 1.000000e+00
  %_67 = fmul double 5.000000e-01, %f
  %hfsq = fmul double %_67, %f
  %_72 = fadd double 2.000000e+00, %f
  %s = fdiv double %f, %_72
  %z = fmul double %s, %s
  %w = fmul double %z, %z
  %_86 = fmul double %w, 0x3FC39A09D078C69F
  %_85 = fadd double 0x3FCC71C51D8E78AF, %_86
  %_83 = fmul double %w, %_85
  %_82 = fadd double 0x3FD999999997FA04, %_83
  %t1 = fmul double %w, %_82
  %_97 = fmul double %w, 0x3FC2F112DF3E5244
  %_96 = fadd double 0x3FC7466496CB03DE, %_97
  %_94 = fmul double %w, %_96
  %_93 = fadd double 0x3FD2492494229359, %_94
  %_91 = fmul double %w, %_93
  %_90 = fadd double 0x3FE5555555555593, %_91
  %t2 = fmul double %z, %_90
  %r = fadd double %t2, %t1
  %_103 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_103 to double
  %_109 = fadd double %hfsq, %r
  %_107 = fmul double %s, %_109
  %_112 = fmul double %dk, 0x3DEA39EF35793C76
  %_106 = fadd double %_107, %_112
  %_105 = fsub double %_106, %hfsq
  %_104 = fadd double %_105, %f
  %_116 = fmul double %dk, 0x3FE62E42FEE00000
  %34 = fadd double %_104, %_116
  store double %34, double* %1, align 8
  br label %bb34
}

; libm::math::log10::log10
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5log105log1017hb12a8fce4c56fd2aE(double %0) unnamed_addr #1 {
start:
  %_53 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %val_lo = alloca double, align 8
  %val_hi = alloca double, align 8
  %hi = alloca double, align 8
  %w = alloca double, align 8
  %ui = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
; call core::f64::<impl f64>::from_bits
  %x1p54 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4850376798678024192)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  store i64 %2, i64* %ui, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_22 = load i64, i64* %ui, align 8
  %_23.0 = lshr i64 %_22, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = trunc i64 %_23.0 to i32
  store i32 %3, i32* %hx, align 4
  store i32 0, i32* %k, align 4
  %_26 = load i32, i32* %hx, align 4
  %_25 = icmp ult i32 %_26, 1048576
  br i1 %_25, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_29 = load i32, i32* %hx, align 4
  %_30.0 = lshr i32 %_29, 31
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_24, align 1
  br label %bb6

bb6:                                              ; preds = %bb7, %bb4
  %4 = load i8, i8* %_24, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb8, label %bb18

bb7:                                              ; preds = %bb5
  %_27 = icmp ugt i32 %_30.0, 0
  %6 = zext i1 %_27 to i8
  store i8 %6, i8* %_24, align 1
  br label %bb6

bb18:                                             ; preds = %bb6
  %_52 = load i32, i32* %hx, align 4
  %_51 = icmp uge i32 %_52, 2146435072
  br i1 %_51, label %bb19, label %bb20

bb8:                                              ; preds = %bb6
  %_32 = load i64, i64* %ui, align 8
  %_33.0 = shl i64 %_32, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %7 = icmp eq i64 %_33.0, 0
  br i1 %7, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %_35 = load double, double* %x, align 8
  %_36 = load double, double* %x, align 8
  %_34 = fmul double %_35, %_36
  %8 = fdiv double -1.000000e+00, %_34
  store double %8, double* %1, align 8
  br label %bb36

bb11:                                             ; preds = %bb9
  %_39 = load i32, i32* %hx, align 4
  %_40.0 = lshr i32 %_39, 31
  br label %bb12

bb12:                                             ; preds = %bb11
  %_37 = icmp ugt i32 %_40.0, 0
  br i1 %_37, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %9 = load i32, i32* %k, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 54)
  %_44.0 = extractvalue { i32, i1 } %10, 0
  %_44.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %11, label %panic, label %bb15

bb13:                                             ; preds = %bb12
  %_42 = load double, double* %x, align 8
  %_43 = load double, double* %x, align 8
  %_41 = fsub double %_42, %_43
  %12 = fdiv double %_41, 0.000000e+00
  store double %12, double* %1, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb25, %bb19, %bb10, %bb13
  %13 = load double, double* %1, align 8
  ret double %13

bb15:                                             ; preds = %bb14
  store i32 %_44.0, i32* %k, align 4
  %14 = load double, double* %x, align 8
  %15 = fmul double %14, %x1p54
  store double %15, double* %x, align 8
  %_47 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %_46 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_47)
  br label %bb16

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2078 to %"core::panic::location::Location"*)) #11
  unreachable

bb16:                                             ; preds = %bb15
  store i64 %_46, i64* %ui, align 8
  %_49 = load i64, i64* %ui, align 8
  %_50.0 = lshr i64 %_49, 32
  br label %bb17

bb17:                                             ; preds = %bb16
  %16 = trunc i64 %_50.0 to i32
  store i32 %16, i32* %hx, align 4
  br label %bb26

bb26:                                             ; preds = %bb23, %bb17
  %17 = load i32, i32* %hx, align 4
  %18 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %17, i32 614242)
  %_60.0 = extractvalue { i32, i1 } %18, 0
  %_60.1 = extractvalue { i32, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false)
  br i1 %19, label %panic1, label %bb27

bb20:                                             ; preds = %bb18
  %_54 = load i32, i32* %hx, align 4
  %20 = icmp eq i32 %_54, 1072693248
  br i1 %20, label %bb22, label %bb21

bb19:                                             ; preds = %bb18
  %21 = load double, double* %x, align 8
  store double %21, double* %1, align 8
  br label %bb36

bb22:                                             ; preds = %bb20
  %_57 = load i64, i64* %ui, align 8
  %_58.0 = shl i64 %_57, 32
  br label %bb24

bb21:                                             ; preds = %bb20
  store i8 0, i8* %_53, align 1
  br label %bb23

bb23:                                             ; preds = %bb24, %bb21
  %22 = load i8, i8* %_53, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb25, label %bb26

bb24:                                             ; preds = %bb22
  %_55 = icmp eq i64 %_58.0, 0
  %24 = zext i1 %_55 to i8
  store i8 %24, i8* %_53, align 1
  br label %bb23

bb25:                                             ; preds = %bb23
  store double 0.000000e+00, double* %1, align 8
  br label %bb36

bb27:                                             ; preds = %bb26
  store i32 %_60.0, i32* %hx, align 4
  %_64 = load i32, i32* %hx, align 4
  %_65.0 = lshr i32 %_64, 20
  br label %bb28

panic1:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2080 to %"core::panic::location::Location"*)) #11
  unreachable

bb28:                                             ; preds = %bb27
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_65.0, i32 1023)
  %_66.0 = extractvalue { i32, i1 } %25, 0
  %_66.1 = extractvalue { i32, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false)
  br i1 %26, label %panic2, label %bb29

bb29:                                             ; preds = %bb28
  %27 = load i32, i32* %k, align 4
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %_66.0)
  %_67.0 = extractvalue { i32, i1 } %28, 0
  %_67.1 = extractvalue { i32, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false)
  br i1 %29, label %panic3, label %bb30

panic2:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2082 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_67.0, i32* %k, align 4
  %_69 = load i32, i32* %hx, align 4
  %_68 = and i32 %_69, 1048575
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_68, i32 1072079006)
  %_70.0 = extractvalue { i32, i1 } %30, 0
  %_70.1 = extractvalue { i32, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_70.1, i1 false)
  br i1 %31, label %panic4, label %bb31

panic3:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2084 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i32 %_70.0, i32* %hx, align 4
  %_73 = load i32, i32* %hx, align 4
  %_72 = zext i32 %_73 to i64
  %_74.0 = shl i64 %_72, 32
  br label %bb32

panic4:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2086 to %"core::panic::location::Location"*)) #11
  unreachable

bb32:                                             ; preds = %bb31
  %_76 = load i64, i64* %ui, align 8
  %_75 = and i64 %_76, 4294967295
  %32 = or i64 %_74.0, %_75
  store i64 %32, i64* %ui, align 8
  %_78 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_77 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_78)
  br label %bb33

bb33:                                             ; preds = %bb32
  store double %_77, double* %x, align 8
  %_79 = load double, double* %x, align 8
  %f = fsub double %_79, 1.000000e+00
  %_80 = fmul double 5.000000e-01, %f
  %hfsq = fmul double %_80, %f
  %_84 = fadd double 2.000000e+00, %f
  %s = fdiv double %f, %_84
  %z = fmul double %s, %s
  %33 = fmul double %z, %z
  store double %33, double* %w, align 8
  %_90 = load double, double* %w, align 8
  %_93 = load double, double* %w, align 8
  %_96 = load double, double* %w, align 8
  %_95 = fmul double %_96, 0x3FC39A09D078C69F
  %_94 = fadd double 0x3FCC71C51D8E78AF, %_95
  %_92 = fmul double %_93, %_94
  %_91 = fadd double 0x3FD999999997FA04, %_92
  %t1 = fmul double %_90, %_91
  %_100 = load double, double* %w, align 8
  %_103 = load double, double* %w, align 8
  %_106 = load double, double* %w, align 8
  %_105 = fmul double %_106, 0x3FC2F112DF3E5244
  %_104 = fadd double 0x3FC7466496CB03DE, %_105
  %_102 = fmul double %_103, %_104
  %_101 = fadd double 0x3FD2492494229359, %_102
  %_99 = fmul double %_100, %_101
  %_98 = fadd double 0x3FE5555555555593, %_99
  %t2 = fmul double %z, %_98
  %r = fadd double %t2, %t1
  %34 = fsub double %f, %hfsq
  store double %34, double* %hi, align 8
  %_112 = load double, double* %hi, align 8
; call core::f64::<impl f64>::to_bits
  %_111 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_112)
  br label %bb34

bb34:                                             ; preds = %bb33
  store i64 %_111, i64* %ui, align 8
  %35 = load i64, i64* %ui, align 8
  %36 = and i64 %35, -4294967296
  store i64 %36, i64* %ui, align 8
  %_115 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_114 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_115)
  br label %bb35

bb35:                                             ; preds = %bb34
  store double %_114, double* %hi, align 8
  %_119 = load double, double* %hi, align 8
  %_117 = fsub double %f, %_119
  %_116 = fsub double %_117, %hfsq
  %_123 = fadd double %hfsq, %r
  %_121 = fmul double %s, %_123
  %lo = fadd double %_116, %_121
  %_126 = load double, double* %hi, align 8
  %37 = fmul double %_126, 0x3FDBCB7B15200000
  store double %37, double* %val_hi, align 8
  %_127 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_127 to double
  %y = fmul double %dk, 0x3FD34413509F6000
  %_130 = fmul double %dk, 0x3D59FEF311F12B36
  %_135 = load double, double* %hi, align 8
  %_133 = fadd double %lo, %_135
  %_132 = fmul double %_133, 0x3DBB9438CA9AADD5
  %_129 = fadd double %_130, %_132
  %_136 = fmul double %lo, 0x3FDBCB7B15200000
  %38 = fadd double %_129, %_136
  store double %38, double* %val_lo, align 8
  %_139 = load double, double* %val_hi, align 8
  %39 = fadd double %y, %_139
  store double %39, double* %w, align 8
  %_143 = load double, double* %w, align 8
  %_141 = fsub double %y, %_143
  %_144 = load double, double* %val_hi, align 8
  %_140 = fadd double %_141, %_144
  %40 = load double, double* %val_lo, align 8
  %41 = fadd double %40, %_140
  store double %41, double* %val_lo, align 8
  %_145 = load double, double* %w, align 8
  store double %_145, double* %val_hi, align 8
  %_146 = load double, double* %val_lo, align 8
  %_147 = load double, double* %val_hi, align 8
  %42 = fadd double %_146, %_147
  store double %42, double* %1, align 8
  br label %bb36
}

; libm::math::log10f::log10f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6log10f6log10f17hcffa3f096c766d59E(float %0) unnamed_addr #1 {
start:
  %_19 = alloca i8, align 1
  %k = alloca i32, align 4
  %ix = alloca i32, align 4
  %hi = alloca float, align 4
  %ui = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p25f = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1275068416)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  store i32 %2, i32* %ui, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_18 = load i32, i32* %ui, align 4
  store i32 %_18, i32* %ix, align 4
  store i32 0, i32* %k, align 4
  %_21 = load i32, i32* %ix, align 4
  %_20 = icmp ult i32 %_21, 8388608
  br i1 %_20, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_24 = load i32, i32* %ix, align 4
  %_25.0 = lshr i32 %_24, 31
  br label %bb6

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_19, align 1
  br label %bb5

bb5:                                              ; preds = %bb6, %bb3
  %3 = load i8, i8* %_19, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb16

bb6:                                              ; preds = %bb4
  %_22 = icmp ugt i32 %_25.0, 0
  %5 = zext i1 %_22 to i8
  store i8 %5, i8* %_19, align 1
  br label %bb5

bb16:                                             ; preds = %bb5
  %_45 = load i32, i32* %ix, align 4
  %_44 = icmp uge i32 %_45, 2139095040
  br i1 %_44, label %bb17, label %bb18

bb7:                                              ; preds = %bb5
  %_27 = load i32, i32* %ix, align 4
  %_28.0 = shl i32 %_27, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = icmp eq i32 %_28.0, 0
  br i1 %6, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %_30 = load float, float* %x, align 4
  %_31 = load float, float* %x, align 4
  %_29 = fmul float %_30, %_31
  %7 = fdiv float -1.000000e+00, %_29
  store float %7, float* %1, align 4
  br label %bb29

bb10:                                             ; preds = %bb8
  %_34 = load i32, i32* %ix, align 4
  %_35.0 = lshr i32 %_34, 31
  br label %bb11

bb11:                                             ; preds = %bb10
  %_32 = icmp ugt i32 %_35.0, 0
  br i1 %_32, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %8 = load i32, i32* %k, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 25)
  %_39.0 = extractvalue { i32, i1 } %9, 0
  %_39.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %10, label %panic, label %bb14

bb12:                                             ; preds = %bb11
  %_37 = load float, float* %x, align 4
  %_38 = load float, float* %x, align 4
  %_36 = fsub float %_37, %_38
  %11 = fdiv float %_36, 0.000000e+00
  store float %11, float* %1, align 4
  br label %bb29

bb29:                                             ; preds = %bb19, %bb28, %bb17, %bb9, %bb12
  %12 = load float, float* %1, align 4
  ret float %12

bb14:                                             ; preds = %bb13
  store i32 %_39.0, i32* %k, align 4
  %13 = load float, float* %x, align 4
  %14 = fmul float %13, %x1p25f
  store float %14, float* %x, align 4
  %_42 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_41 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_42)
  br label %bb15

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2088 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14
  store i32 %_41, i32* %ui, align 4
  %_43 = load i32, i32* %ui, align 4
  store i32 %_43, i32* %ix, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb15
  %15 = load i32, i32* %ix, align 4
  %16 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %15, i32 4913933)
  %_48.0 = extractvalue { i32, i1 } %16, 0
  %_48.1 = extractvalue { i32, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %17, label %panic1, label %bb21

bb18:                                             ; preds = %bb16
  %_46 = load i32, i32* %ix, align 4
  %18 = icmp eq i32 %_46, 1065353216
  br i1 %18, label %bb19, label %bb20

bb17:                                             ; preds = %bb16
  %19 = load float, float* %x, align 4
  store float %19, float* %1, align 4
  br label %bb29

bb19:                                             ; preds = %bb18
  store float 0.000000e+00, float* %1, align 4
  br label %bb29

bb21:                                             ; preds = %bb20
  store i32 %_48.0, i32* %ix, align 4
  %_52 = load i32, i32* %ix, align 4
  %_53.0 = lshr i32 %_52, 23
  br label %bb22

panic1:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2090 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  %20 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_53.0, i32 127)
  %_54.0 = extractvalue { i32, i1 } %20, 0
  %_54.1 = extractvalue { i32, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %21, label %panic2, label %bb23

bb23:                                             ; preds = %bb22
  %22 = load i32, i32* %k, align 4
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %_54.0)
  %_55.0 = extractvalue { i32, i1 } %23, 0
  %_55.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %24, label %panic3, label %bb24

panic2:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2092 to %"core::panic::location::Location"*)) #11
  unreachable

bb24:                                             ; preds = %bb23
  store i32 %_55.0, i32* %k, align 4
  %_57 = load i32, i32* %ix, align 4
  %_56 = and i32 %_57, 8388607
  %25 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_56, i32 1060439283)
  %_58.0 = extractvalue { i32, i1 } %25, 0
  %_58.1 = extractvalue { i32, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %26, label %panic4, label %bb25

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2094 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  store i32 %_58.0, i32* %ix, align 4
  %_59 = load i32, i32* %ix, align 4
  store i32 %_59, i32* %ui, align 4
  %_61 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_60 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_61)
  br label %bb26

panic4:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2096 to %"core::panic::location::Location"*)) #11
  unreachable

bb26:                                             ; preds = %bb25
  store float %_60, float* %x, align 4
  %_62 = load float, float* %x, align 4
  %f = fsub float %_62, 1.000000e+00
  %_64 = fadd float 2.000000e+00, %f
  %s = fdiv float %f, %_64
  %z = fmul float %s, %s
  %w = fmul float %z, %z
  %_72 = fmul float %w, 0x3FCF13C4C0000000
  %_71 = fadd float 0x3FD999C260000000, %_72
  %t1 = fmul float %w, %_71
  %_76 = fmul float %w, 0x3FD23D3DC0000000
  %_75 = fadd float 0x3FE5555540000000, %_76
  %t2 = fmul float %z, %_75
  %r = fadd float %t2, %t1
  %_80 = fmul float 5.000000e-01, %f
  %hfsq = fmul float %_80, %f
  %27 = fsub float %f, %hfsq
  store float %27, float* %hi, align 4
  %_86 = load float, float* %hi, align 4
; call core::f32::<impl f32>::to_bits
  %_85 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_86)
  br label %bb27

bb27:                                             ; preds = %bb26
  store i32 %_85, i32* %ui, align 4
  %28 = load i32, i32* %ui, align 4
  %29 = and i32 %28, -4096
  store i32 %29, i32* %ui, align 4
  %_88 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_87 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_88)
  br label %bb28

bb28:                                             ; preds = %bb27
  store float %_87, float* %hi, align 4
  %_92 = load float, float* %hi, align 4
  %_90 = fsub float %f, %_92
  %_89 = fsub float %_90, %hfsq
  %_96 = fadd float %hfsq, %r
  %_94 = fmul float %s, %_96
  %lo = fadd float %_89, %_94
  %_99 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_99 to float
  %_103 = fmul float %dk, 0x3EAA84FB60000000
  %_108 = load float, float* %hi, align 4
  %_106 = fadd float %lo, %_108
  %_105 = fmul float %_106, 0xBF009D5B20000000
  %_102 = fadd float %_103, %_105
  %_109 = fmul float %lo, 0x3FDBCC0000000000
  %_101 = fadd float %_102, %_109
  %_112 = load float, float* %hi, align 4
  %_111 = fmul float %_112, 0x3FDBCC0000000000
  %_100 = fadd float %_101, %_111
  %_113 = fmul float %dk, 0x3FD3441000000000
  %30 = fadd float %_100, %_113
  store float %30, float* %1, align 4
  br label %bb29
}

; libm::math::log1p::log1p
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5log1p5log1p17ha55fac024960e744E(double %x) unnamed_addr #1 {
start:
  %_69 = alloca double, align 8
  %_45 = alloca float, align 4
  %_20 = alloca i8, align 1
  %k = alloca i32, align 4
  %hu = alloca i32, align 4
  %c = alloca double, align 8
  %f = alloca double, align 8
  %ui = alloca i64, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %ui, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store double 0.000000e+00, double* %f, align 8
  store double 0.000000e+00, double* %c, align 8
  %_18 = load i64, i64* %ui, align 8
  %_19.0 = lshr i64 %_18, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %hx = trunc i64 %_19.0 to i32
  store i32 1, i32* %k, align 4
  %_21 = icmp ult i32 %hx, 1071284858
  br i1 %_21, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_26.0 = lshr i32 %hx, 31
  br label %bb6

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_20, align 1
  br label %bb5

bb5:                                              ; preds = %bb6, %bb3
  %2 = load i8, i8* %_20, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb18

bb6:                                              ; preds = %bb4
  %_23 = icmp ugt i32 %_26.0, 0
  %4 = zext i1 %_23 to i8
  store i8 %4, i8* %_20, align 1
  br label %bb5

bb18:                                             ; preds = %bb5
  %_50 = icmp uge i32 %hx, 2146435072
  br i1 %_50, label %bb19, label %bb20

bb7:                                              ; preds = %bb5
  %_27 = icmp uge i32 %hx, -1074790400
  br i1 %_27, label %bb8, label %bb11

bb11:                                             ; preds = %bb7
  %_38.0 = shl i32 %hx, 1
  br label %bb12

bb8:                                              ; preds = %bb7
  %_29 = fcmp oeq double %x, -1.000000e+00
  br i1 %_29, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %_32 = fsub double %x, %x
  %5 = fdiv double %_32, 0.000000e+00
  store double %5, double* %0, align 8
  br label %bb40

bb9:                                              ; preds = %bb8
  %6 = fdiv double %x, 0.000000e+00
  store double %6, double* %0, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb19, %bb15, %bb10, %bb9
  %7 = load double, double* %0, align 8
  ret double %7

bb12:                                             ; preds = %bb11
  %_35 = icmp ult i32 %_38.0, 2034237440
  br i1 %_35, label %bb13, label %bb16

bb16:                                             ; preds = %bb12
  %_47 = icmp ule i32 %hx, -1076707644
  br i1 %_47, label %bb17, label %bb20

bb13:                                             ; preds = %bb12
  %_40 = and i32 %hx, 2146435072
  %8 = icmp eq i32 %_40, 0
  br i1 %8, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  %9 = fptrunc double %x to float
  store float %9, float* %_45, align 4
; call core::ptr::read_volatile
  %_42 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_45)
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  store double %x, double* %0, align 8
  br label %bb40

bb20:                                             ; preds = %bb18, %bb17, %bb16
  %_53 = load i32, i32* %k, align 4
  %_52 = icmp sgt i32 %_53, 0
  br i1 %_52, label %bb21, label %bb39

bb17:                                             ; preds = %bb16
  store i32 0, i32* %k, align 4
  store double 0.000000e+00, double* %c, align 8
  store double %x, double* %f, align 8
  br label %bb20

bb19:                                             ; preds = %bb18
  store double %x, double* %0, align 8
  br label %bb40

bb39:                                             ; preds = %bb38, %bb20
  %_94 = load double, double* %f, align 8
  %_93 = fmul double 5.000000e-01, %_94
  %_95 = load double, double* %f, align 8
  %hfsq = fmul double %_93, %_95
  %_96 = load double, double* %f, align 8
  %_98 = load double, double* %f, align 8
  %_97 = fadd double 2.000000e+00, %_98
  %s = fdiv double %_96, %_97
  %z = fmul double %s, %s
  %w = fmul double %z, %z
  %_108 = fmul double %w, 0x3FC39A09D078C69F
  %_107 = fadd double 0x3FCC71C51D8E78AF, %_108
  %_105 = fmul double %w, %_107
  %_104 = fadd double 0x3FD999999997FA04, %_105
  %t1 = fmul double %w, %_104
  %_118 = fmul double %w, 0x3FC2F112DF3E5244
  %_117 = fadd double 0x3FC7466496CB03DE, %_118
  %_115 = fmul double %w, %_117
  %_114 = fadd double 0x3FD2492494229359, %_115
  %_112 = fmul double %w, %_114
  %_111 = fadd double 0x3FE5555555555593, %_112
  %t2 = fmul double %z, %_111
  %r = fadd double %t2, %t1
  %_122 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_122 to double
  %_128 = fadd double %hfsq, %r
  %_126 = fmul double %s, %_128
  %_132 = fmul double %dk, 0x3DEA39EF35793C76
  %_134 = load double, double* %c, align 8
  %_131 = fadd double %_132, %_134
  %_125 = fadd double %_126, %_131
  %_124 = fsub double %_125, %hfsq
  %_136 = load double, double* %f, align 8
  %_123 = fadd double %_124, %_136
  %_137 = fmul double %dk, 0x3FE62E42FEE00000
  %10 = fadd double %_123, %_137
  store double %10, double* %0, align 8
  br label %bb40

bb21:                                             ; preds = %bb20
  %_55 = fadd double 1.000000e+00, %x
; call core::f64::<impl f64>::to_bits
  %_54 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_55)
  br label %bb22

bb22:                                             ; preds = %bb21
  store i64 %_54, i64* %ui, align 8
  %_58 = load i64, i64* %ui, align 8
  %_59.0 = lshr i64 %_58, 32
  br label %bb23

bb23:                                             ; preds = %bb22
  %11 = trunc i64 %_59.0 to i32
  store i32 %11, i32* %hu, align 4
  %12 = load i32, i32* %hu, align 4
  %13 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %12, i32 614242)
  %_61.0 = extractvalue { i32, i1 } %13, 0
  %_61.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false)
  br i1 %14, label %panic, label %bb24

bb24:                                             ; preds = %bb23
  store i32 %_61.0, i32* %hu, align 4
  %_64 = load i32, i32* %hu, align 4
  %_65.0 = lshr i32 %_64, 20
  br label %bb25

panic:                                            ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2098 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_65.0, i32 1023)
  %_66.0 = extractvalue { i32, i1 } %15, 0
  %_66.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false)
  br i1 %16, label %panic1, label %bb26

bb26:                                             ; preds = %bb25
  store i32 %_66.0, i32* %k, align 4
  %_68 = load i32, i32* %k, align 4
  %_67 = icmp slt i32 %_68, 54
  br i1 %_67, label %bb27, label %bb34

panic1:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2100 to %"core::panic::location::Location"*)) #11
  unreachable

bb34:                                             ; preds = %bb26
  store double 0.000000e+00, double* %c, align 8
  br label %bb35

bb27:                                             ; preds = %bb26
  %_71 = load i32, i32* %k, align 4
  %_70 = icmp sge i32 %_71, 2
  br i1 %_70, label %bb28, label %bb30

bb30:                                             ; preds = %bb27
  %_79 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_78 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_79)
  br label %bb31

bb28:                                             ; preds = %bb27
  %_74 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_73 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_74)
  br label %bb29

bb29:                                             ; preds = %bb28
  %_72 = fsub double %_73, %x
  %17 = fsub double 1.000000e+00, %_72
  store double %17, double* %_69, align 8
  br label %bb32

bb32:                                             ; preds = %bb31, %bb29
  %18 = load double, double* %_69, align 8
  store double %18, double* %c, align 8
  %_81 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_80 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_81)
  br label %bb33

bb31:                                             ; preds = %bb30
  %_77 = fsub double %_78, 1.000000e+00
  %19 = fsub double %x, %_77
  store double %19, double* %_69, align 8
  br label %bb32

bb33:                                             ; preds = %bb32
  %20 = load double, double* %c, align 8
  %21 = fdiv double %20, %_80
  store double %21, double* %c, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %_83 = load i32, i32* %hu, align 4
  %_82 = and i32 %_83, 1048575
  %22 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_82, i32 1072079006)
  %_84.0 = extractvalue { i32, i1 } %22, 0
  %_84.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_84.1, i1 false)
  br i1 %23, label %panic2, label %bb36

bb36:                                             ; preds = %bb35
  store i32 %_84.0, i32* %hu, align 4
  %_87 = load i32, i32* %hu, align 4
  %_86 = zext i32 %_87 to i64
  %_88.0 = shl i64 %_86, 32
  br label %bb37

panic2:                                           ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2102 to %"core::panic::location::Location"*)) #11
  unreachable

bb37:                                             ; preds = %bb36
  %_90 = load i64, i64* %ui, align 8
  %_89 = and i64 %_90, 4294967295
  %24 = or i64 %_88.0, %_89
  store i64 %24, i64* %ui, align 8
  %_92 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_91 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_92)
  br label %bb38

bb38:                                             ; preds = %bb37
  %25 = fsub double %_91, 1.000000e+00
  store double %25, double* %f, align 8
  br label %bb39
}

; libm::math::log1pf::log1pf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6log1pf6log1pf17hc0f7e233528d6ae3E(float %x) unnamed_addr #1 {
start:
  %_66 = alloca float, align 4
  %_43 = alloca float, align 4
  %_18 = alloca i8, align 1
  %k = alloca i32, align 4
  %iu = alloca i32, align 4
  %c = alloca float, align 4
  %f = alloca float, align 4
  %ui = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ui, align 4
  br label %bb1

bb1:                                              ; preds = %start
  store float 0.000000e+00, float* %f, align 4
  store float 0.000000e+00, float* %c, align 4
  %_17 = load i32, i32* %ui, align 4
  store i32 1, i32* %k, align 4
  %_19 = icmp ult i32 %_17, 1054086096
  br i1 %_19, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_24.0 = lshr i32 %_17, 31
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1
  br label %bb4

bb4:                                              ; preds = %bb5, %bb2
  %2 = load i8, i8* %_18, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb17

bb5:                                              ; preds = %bb3
  %_21 = icmp ugt i32 %_24.0, 0
  %4 = zext i1 %_21 to i8
  store i8 %4, i8* %_18, align 1
  br label %bb4

bb17:                                             ; preds = %bb4
  %_49 = icmp uge i32 %_17, 2139095040
  br i1 %_49, label %bb18, label %bb19

bb6:                                              ; preds = %bb4
  %_25 = icmp uge i32 %_17, -1082130432
  br i1 %_25, label %bb7, label %bb10

bb10:                                             ; preds = %bb6
  %_36.0 = shl i32 %_17, 1
  br label %bb11

bb7:                                              ; preds = %bb6
  %_27 = fcmp oeq float %x, -1.000000e+00
  br i1 %_27, label %bb8, label %bb9

bb9:                                              ; preds = %bb7
  %_30 = fsub float %x, %x
  %5 = fdiv float %_30, 0.000000e+00
  store float %5, float* %0, align 4
  br label %bb37

bb8:                                              ; preds = %bb7
  %6 = fdiv float %x, 0.000000e+00
  store float %6, float* %0, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %bb18, %bb14, %bb9, %bb8
  %7 = load float, float* %0, align 4
  ret float %7

bb11:                                             ; preds = %bb10
  %_33 = icmp ult i32 %_36.0, 1728053248
  br i1 %_33, label %bb12, label %bb15

bb15:                                             ; preds = %bb11
  %_46 = icmp ule i32 %_17, -1097468391
  br i1 %_46, label %bb16, label %bb19

bb12:                                             ; preds = %bb11
  %_38 = and i32 %_17, 2139095040
  %8 = icmp eq i32 %_38, 0
  br i1 %8, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %9 = fmul float %x, %x
  store float %9, float* %_43, align 4
; call core::ptr::read_volatile
  %_40 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_43)
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  store float %x, float* %0, align 4
  br label %bb37

bb19:                                             ; preds = %bb17, %bb16, %bb15
  %_52 = load i32, i32* %k, align 4
  %_51 = icmp sgt i32 %_52, 0
  br i1 %_51, label %bb20, label %bb36

bb16:                                             ; preds = %bb15
  store i32 0, i32* %k, align 4
  store float 0.000000e+00, float* %c, align 4
  store float %x, float* %f, align 4
  br label %bb19

bb18:                                             ; preds = %bb17
  store float %x, float* %0, align 4
  br label %bb37

bb36:                                             ; preds = %bb35, %bb19
  %_85 = load float, float* %f, align 4
  %_87 = load float, float* %f, align 4
  %_86 = fadd float 2.000000e+00, %_87
  %s = fdiv float %_85, %_86
  %z = fmul float %s, %s
  %w = fmul float %z, %z
  %_94 = fmul float %w, 0x3FCF13C4C0000000
  %_93 = fadd float 0x3FD999C260000000, %_94
  %t1 = fmul float %w, %_93
  %_98 = fmul float %w, 0x3FD23D3DC0000000
  %_97 = fadd float 0x3FE5555540000000, %_98
  %t2 = fmul float %z, %_97
  %r = fadd float %t2, %t1
  %_103 = load float, float* %f, align 4
  %_102 = fmul float 5.000000e-01, %_103
  %_104 = load float, float* %f, align 4
  %hfsq = fmul float %_102, %_104
  %_105 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_105 to float
  %_111 = fadd float %hfsq, %r
  %_109 = fmul float %s, %_111
  %_115 = fmul float %dk, 0x3EE2FEFA20000000
  %_117 = load float, float* %c, align 4
  %_114 = fadd float %_115, %_117
  %_108 = fadd float %_109, %_114
  %_107 = fsub float %_108, %hfsq
  %_119 = load float, float* %f, align 4
  %_106 = fadd float %_107, %_119
  %_120 = fmul float %dk, 0x3FE62E3000000000
  %10 = fadd float %_106, %_120
  store float %10, float* %0, align 4
  br label %bb37

bb20:                                             ; preds = %bb19
  %_54 = fadd float 1.000000e+00, %x
; call core::f32::<impl f32>::to_bits
  %_53 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_54)
  br label %bb21

bb21:                                             ; preds = %bb20
  store i32 %_53, i32* %ui, align 4
  %_56 = load i32, i32* %ui, align 4
  store i32 %_56, i32* %iu, align 4
  %11 = load i32, i32* %iu, align 4
  %12 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %11, i32 4913933)
  %_58.0 = extractvalue { i32, i1 } %12, 0
  %_58.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %13, label %panic, label %bb22

bb22:                                             ; preds = %bb21
  store i32 %_58.0, i32* %iu, align 4
  %_61 = load i32, i32* %iu, align 4
  %_62.0 = lshr i32 %_61, 23
  br label %bb23

panic:                                            ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2104 to %"core::panic::location::Location"*)) #11
  unreachable

bb23:                                             ; preds = %bb22
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_62.0, i32 127)
  %_63.0 = extractvalue { i32, i1 } %14, 0
  %_63.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_63.1, i1 false)
  br i1 %15, label %panic1, label %bb24

bb24:                                             ; preds = %bb23
  store i32 %_63.0, i32* %k, align 4
  %_65 = load i32, i32* %k, align 4
  %_64 = icmp slt i32 %_65, 25
  br i1 %_64, label %bb25, label %bb32

panic1:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2106 to %"core::panic::location::Location"*)) #11
  unreachable

bb32:                                             ; preds = %bb24
  store float 0.000000e+00, float* %c, align 4
  br label %bb33

bb25:                                             ; preds = %bb24
  %_68 = load i32, i32* %k, align 4
  %_67 = icmp sge i32 %_68, 2
  br i1 %_67, label %bb26, label %bb28

bb28:                                             ; preds = %bb25
  %_76 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_75 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_76)
  br label %bb29

bb26:                                             ; preds = %bb25
  %_71 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_70 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_71)
  br label %bb27

bb27:                                             ; preds = %bb26
  %_69 = fsub float %_70, %x
  %16 = fsub float 1.000000e+00, %_69
  store float %16, float* %_66, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %bb27
  %17 = load float, float* %_66, align 4
  store float %17, float* %c, align 4
  %_78 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_77 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_78)
  br label %bb31

bb29:                                             ; preds = %bb28
  %_74 = fsub float %_75, 1.000000e+00
  %18 = fsub float %x, %_74
  store float %18, float* %_66, align 4
  br label %bb30

bb31:                                             ; preds = %bb30
  %19 = load float, float* %c, align 4
  %20 = fdiv float %19, %_77
  store float %20, float* %c, align 4
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31
  %_80 = load i32, i32* %iu, align 4
  %_79 = and i32 %_80, 8388607
  %21 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_79, i32 1060439283)
  %_81.0 = extractvalue { i32, i1 } %21, 0
  %_81.1 = extractvalue { i32, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_81.1, i1 false)
  br i1 %22, label %panic2, label %bb34

bb34:                                             ; preds = %bb33
  store i32 %_81.0, i32* %iu, align 4
  %_82 = load i32, i32* %iu, align 4
  store i32 %_82, i32* %ui, align 4
  %_84 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_83 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_84)
  br label %bb35

panic2:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2108 to %"core::panic::location::Location"*)) #11
  unreachable

bb35:                                             ; preds = %bb34
  %23 = fsub float %_83, 1.000000e+00
  store float %23, float* %f, align 4
  br label %bb36
}

; libm::math::log2::log2
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4log24log217h5e9f1f1d821f2535E(double %0) unnamed_addr #1 {
start:
  %_52 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %val_lo = alloca double, align 8
  %val_hi = alloca double, align 8
  %hi = alloca double, align 8
  %w = alloca double, align 8
  %ui = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
; call core::f64::<impl f64>::from_bits
  %x1p54 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4850376798678024192)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  store i64 %2, i64* %ui, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_21 = load i64, i64* %ui, align 8
  %_22.0 = lshr i64 %_21, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = trunc i64 %_22.0 to i32
  store i32 %3, i32* %hx, align 4
  store i32 0, i32* %k, align 4
  %_25 = load i32, i32* %hx, align 4
  %_24 = icmp ult i32 %_25, 1048576
  br i1 %_24, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_28 = load i32, i32* %hx, align 4
  %_29.0 = lshr i32 %_28, 31
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_23, align 1
  br label %bb6

bb6:                                              ; preds = %bb7, %bb4
  %4 = load i8, i8* %_23, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb8, label %bb18

bb7:                                              ; preds = %bb5
  %_26 = icmp ugt i32 %_29.0, 0
  %6 = zext i1 %_26 to i8
  store i8 %6, i8* %_23, align 1
  br label %bb6

bb18:                                             ; preds = %bb6
  %_51 = load i32, i32* %hx, align 4
  %_50 = icmp uge i32 %_51, 2146435072
  br i1 %_50, label %bb19, label %bb20

bb8:                                              ; preds = %bb6
  %_31 = load i64, i64* %ui, align 8
  %_32.0 = shl i64 %_31, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %7 = icmp eq i64 %_32.0, 0
  br i1 %7, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %_34 = load double, double* %x, align 8
  %_35 = load double, double* %x, align 8
  %_33 = fmul double %_34, %_35
  %8 = fdiv double -1.000000e+00, %_33
  store double %8, double* %1, align 8
  br label %bb37

bb11:                                             ; preds = %bb9
  %_38 = load i32, i32* %hx, align 4
  %_39.0 = lshr i32 %_38, 31
  br label %bb12

bb12:                                             ; preds = %bb11
  %_36 = icmp ugt i32 %_39.0, 0
  br i1 %_36, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %9 = load i32, i32* %k, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 54)
  %_43.0 = extractvalue { i32, i1 } %10, 0
  %_43.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %11, label %panic, label %bb15

bb13:                                             ; preds = %bb12
  %_41 = load double, double* %x, align 8
  %_42 = load double, double* %x, align 8
  %_40 = fsub double %_41, %_42
  %12 = fdiv double %_40, 0.000000e+00
  store double %12, double* %1, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb25, %bb19, %bb10, %bb13
  %13 = load double, double* %1, align 8
  ret double %13

bb15:                                             ; preds = %bb14
  store i32 %_43.0, i32* %k, align 4
  %14 = load double, double* %x, align 8
  %15 = fmul double %14, %x1p54
  store double %15, double* %x, align 8
  %_46 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %_45 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_46)
  br label %bb16

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2110 to %"core::panic::location::Location"*)) #11
  unreachable

bb16:                                             ; preds = %bb15
  store i64 %_45, i64* %ui, align 8
  %_48 = load i64, i64* %ui, align 8
  %_49.0 = lshr i64 %_48, 32
  br label %bb17

bb17:                                             ; preds = %bb16
  %16 = trunc i64 %_49.0 to i32
  store i32 %16, i32* %hx, align 4
  br label %bb26

bb26:                                             ; preds = %bb23, %bb17
  %17 = load i32, i32* %hx, align 4
  %18 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %17, i32 614242)
  %_59.0 = extractvalue { i32, i1 } %18, 0
  %_59.1 = extractvalue { i32, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false)
  br i1 %19, label %panic1, label %bb27

bb20:                                             ; preds = %bb18
  %_53 = load i32, i32* %hx, align 4
  %20 = icmp eq i32 %_53, 1072693248
  br i1 %20, label %bb22, label %bb21

bb19:                                             ; preds = %bb18
  %21 = load double, double* %x, align 8
  store double %21, double* %1, align 8
  br label %bb37

bb22:                                             ; preds = %bb20
  %_56 = load i64, i64* %ui, align 8
  %_57.0 = shl i64 %_56, 32
  br label %bb24

bb21:                                             ; preds = %bb20
  store i8 0, i8* %_52, align 1
  br label %bb23

bb23:                                             ; preds = %bb24, %bb21
  %22 = load i8, i8* %_52, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb25, label %bb26

bb24:                                             ; preds = %bb22
  %_54 = icmp eq i64 %_57.0, 0
  %24 = zext i1 %_54 to i8
  store i8 %24, i8* %_52, align 1
  br label %bb23

bb25:                                             ; preds = %bb23
  store double 0.000000e+00, double* %1, align 8
  br label %bb37

bb27:                                             ; preds = %bb26
  store i32 %_59.0, i32* %hx, align 4
  %_63 = load i32, i32* %hx, align 4
  %_64.0 = lshr i32 %_63, 20
  br label %bb28

panic1:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2112 to %"core::panic::location::Location"*)) #11
  unreachable

bb28:                                             ; preds = %bb27
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_64.0, i32 1023)
  %_65.0 = extractvalue { i32, i1 } %25, 0
  %_65.1 = extractvalue { i32, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_65.1, i1 false)
  br i1 %26, label %panic2, label %bb29

bb29:                                             ; preds = %bb28
  %27 = load i32, i32* %k, align 4
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %_65.0)
  %_66.0 = extractvalue { i32, i1 } %28, 0
  %_66.1 = extractvalue { i32, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false)
  br i1 %29, label %panic3, label %bb30

panic2:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2114 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  store i32 %_66.0, i32* %k, align 4
  %_68 = load i32, i32* %hx, align 4
  %_67 = and i32 %_68, 1048575
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_67, i32 1072079006)
  %_69.0 = extractvalue { i32, i1 } %30, 0
  %_69.1 = extractvalue { i32, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_69.1, i1 false)
  br i1 %31, label %panic4, label %bb31

panic3:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2116 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i32 %_69.0, i32* %hx, align 4
  %_72 = load i32, i32* %hx, align 4
  %_71 = zext i32 %_72 to i64
  %_73.0 = shl i64 %_71, 32
  br label %bb32

panic4:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2118 to %"core::panic::location::Location"*)) #11
  unreachable

bb32:                                             ; preds = %bb31
  %_75 = load i64, i64* %ui, align 8
  %_74 = and i64 %_75, 4294967295
  %32 = or i64 %_73.0, %_74
  store i64 %32, i64* %ui, align 8
  %_77 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_76 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_77)
  br label %bb33

bb33:                                             ; preds = %bb32
  store double %_76, double* %x, align 8
  %_78 = load double, double* %x, align 8
  %f = fsub double %_78, 1.000000e+00
  %_79 = fmul double 5.000000e-01, %f
  %hfsq = fmul double %_79, %f
  %_83 = fadd double 2.000000e+00, %f
  %s = fdiv double %f, %_83
  %z = fmul double %s, %s
  %33 = fmul double %z, %z
  store double %33, double* %w, align 8
  %_89 = load double, double* %w, align 8
  %_92 = load double, double* %w, align 8
  %_95 = load double, double* %w, align 8
  %_94 = fmul double %_95, 0x3FC39A09D078C69F
  %_93 = fadd double 0x3FCC71C51D8E78AF, %_94
  %_91 = fmul double %_92, %_93
  %_90 = fadd double 0x3FD999999997FA04, %_91
  %t1 = fmul double %_89, %_90
  %_99 = load double, double* %w, align 8
  %_102 = load double, double* %w, align 8
  %_105 = load double, double* %w, align 8
  %_104 = fmul double %_105, 0x3FC2F112DF3E5244
  %_103 = fadd double 0x3FC7466496CB03DE, %_104
  %_101 = fmul double %_102, %_103
  %_100 = fadd double 0x3FD2492494229359, %_101
  %_98 = fmul double %_99, %_100
  %_97 = fadd double 0x3FE5555555555593, %_98
  %t2 = fmul double %z, %_97
  %r = fadd double %t2, %t1
  %34 = fsub double %f, %hfsq
  store double %34, double* %hi, align 8
  %_111 = load double, double* %hi, align 8
; call core::f64::<impl f64>::to_bits
  %_110 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_111)
  br label %bb34

bb34:                                             ; preds = %bb33
  store i64 %_110, i64* %ui, align 8
  %35 = load i64, i64* %ui, align 8
  %36 = and i64 %35, -4294967296
  store i64 %36, i64* %ui, align 8
  %_114 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_113 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_114)
  br label %bb35

bb35:                                             ; preds = %bb34
  store double %_113, double* %hi, align 8
  %_118 = load double, double* %hi, align 8
  %_116 = fsub double %f, %_118
  %_115 = fsub double %_116, %hfsq
  %_122 = fadd double %hfsq, %r
  %_120 = fmul double %s, %_122
  %lo = fadd double %_115, %_120
  %_125 = load double, double* %hi, align 8
  %37 = fmul double %_125, 0x3FF7154765200000
  store double %37, double* %val_hi, align 8
  %_129 = load double, double* %hi, align 8
  %_127 = fadd double %lo, %_129
  %_126 = fmul double %_127, 0x3DE705FC2EEFA200
  %_130 = fmul double %lo, 0x3FF7154765200000
  %38 = fadd double %_126, %_130
  store double %38, double* %val_lo, align 8
  %_133 = load i32, i32* %k, align 4
; call <T as core::convert::Into<U>>::into
  %_132 = call double @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5765487eb2a923b3E"(i32 %_133)
  br label %bb36

bb36:                                             ; preds = %bb35
  %_135 = load double, double* %val_hi, align 8
  %39 = fadd double %_132, %_135
  store double %39, double* %w, align 8
  %_139 = load double, double* %w, align 8
  %_137 = fsub double %_132, %_139
  %_140 = load double, double* %val_hi, align 8
  %_136 = fadd double %_137, %_140
  %40 = load double, double* %val_lo, align 8
  %41 = fadd double %40, %_136
  store double %41, double* %val_lo, align 8
  %_141 = load double, double* %w, align 8
  store double %_141, double* %val_hi, align 8
  %_142 = load double, double* %val_lo, align 8
  %_143 = load double, double* %val_hi, align 8
  %42 = fadd double %_142, %_143
  store double %42, double* %1, align 8
  br label %bb37
}

; libm::math::log2f::log2f
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5log2f5log2f17h3c7e63406618466fE(float %0) unnamed_addr #1 {
start:
  %_18 = alloca i8, align 1
  %k = alloca i32, align 4
  %ix = alloca i32, align 4
  %hi = alloca float, align 4
  %ui = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p25f = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1275068416)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  store i32 %2, i32* %ui, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_17 = load i32, i32* %ui, align 4
  store i32 %_17, i32* %ix, align 4
  store i32 0, i32* %k, align 4
  %_20 = load i32, i32* %ix, align 4
  %_19 = icmp ult i32 %_20, 8388608
  br i1 %_19, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_23 = load i32, i32* %ix, align 4
  %_24.0 = lshr i32 %_23, 31
  br label %bb6

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_18, align 1
  br label %bb5

bb5:                                              ; preds = %bb6, %bb3
  %3 = load i8, i8* %_18, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb16

bb6:                                              ; preds = %bb4
  %_21 = icmp ugt i32 %_24.0, 0
  %5 = zext i1 %_21 to i8
  store i8 %5, i8* %_18, align 1
  br label %bb5

bb16:                                             ; preds = %bb5
  %_44 = load i32, i32* %ix, align 4
  %_43 = icmp uge i32 %_44, 2139095040
  br i1 %_43, label %bb17, label %bb18

bb7:                                              ; preds = %bb5
  %_26 = load i32, i32* %ix, align 4
  %_27.0 = shl i32 %_26, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = icmp eq i32 %_27.0, 0
  br i1 %6, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %_29 = load float, float* %x, align 4
  %_30 = load float, float* %x, align 4
  %_28 = fmul float %_29, %_30
  %7 = fdiv float -1.000000e+00, %_28
  store float %7, float* %1, align 4
  br label %bb29

bb10:                                             ; preds = %bb8
  %_33 = load i32, i32* %ix, align 4
  %_34.0 = lshr i32 %_33, 31
  br label %bb11

bb11:                                             ; preds = %bb10
  %_31 = icmp ugt i32 %_34.0, 0
  br i1 %_31, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %8 = load i32, i32* %k, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 25)
  %_38.0 = extractvalue { i32, i1 } %9, 0
  %_38.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %10, label %panic, label %bb14

bb12:                                             ; preds = %bb11
  %_36 = load float, float* %x, align 4
  %_37 = load float, float* %x, align 4
  %_35 = fsub float %_36, %_37
  %11 = fdiv float %_35, 0.000000e+00
  store float %11, float* %1, align 4
  br label %bb29

bb29:                                             ; preds = %bb19, %bb28, %bb17, %bb9, %bb12
  %12 = load float, float* %1, align 4
  ret float %12

bb14:                                             ; preds = %bb13
  store i32 %_38.0, i32* %k, align 4
  %13 = load float, float* %x, align 4
  %14 = fmul float %13, %x1p25f
  store float %14, float* %x, align 4
  %_41 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_40 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_41)
  br label %bb15

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2120 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14
  store i32 %_40, i32* %ui, align 4
  %_42 = load i32, i32* %ui, align 4
  store i32 %_42, i32* %ix, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb15
  %15 = load i32, i32* %ix, align 4
  %16 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %15, i32 4913933)
  %_47.0 = extractvalue { i32, i1 } %16, 0
  %_47.1 = extractvalue { i32, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %17, label %panic1, label %bb21

bb18:                                             ; preds = %bb16
  %_45 = load i32, i32* %ix, align 4
  %18 = icmp eq i32 %_45, 1065353216
  br i1 %18, label %bb19, label %bb20

bb17:                                             ; preds = %bb16
  %19 = load float, float* %x, align 4
  store float %19, float* %1, align 4
  br label %bb29

bb19:                                             ; preds = %bb18
  store float 0.000000e+00, float* %1, align 4
  br label %bb29

bb21:                                             ; preds = %bb20
  store i32 %_47.0, i32* %ix, align 4
  %_51 = load i32, i32* %ix, align 4
  %_52.0 = lshr i32 %_51, 23
  br label %bb22

panic1:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2122 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  %20 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_52.0, i32 127)
  %_53.0 = extractvalue { i32, i1 } %20, 0
  %_53.1 = extractvalue { i32, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false)
  br i1 %21, label %panic2, label %bb23

bb23:                                             ; preds = %bb22
  %22 = load i32, i32* %k, align 4
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %_53.0)
  %_54.0 = extractvalue { i32, i1 } %23, 0
  %_54.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %24, label %panic3, label %bb24

panic2:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2124 to %"core::panic::location::Location"*)) #11
  unreachable

bb24:                                             ; preds = %bb23
  store i32 %_54.0, i32* %k, align 4
  %_56 = load i32, i32* %ix, align 4
  %_55 = and i32 %_56, 8388607
  %25 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_55, i32 1060439283)
  %_57.0 = extractvalue { i32, i1 } %25, 0
  %_57.1 = extractvalue { i32, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_57.1, i1 false)
  br i1 %26, label %panic4, label %bb25

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2126 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  store i32 %_57.0, i32* %ix, align 4
  %_58 = load i32, i32* %ix, align 4
  store i32 %_58, i32* %ui, align 4
  %_60 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_59 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_60)
  br label %bb26

panic4:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2128 to %"core::panic::location::Location"*)) #11
  unreachable

bb26:                                             ; preds = %bb25
  store float %_59, float* %x, align 4
  %_61 = load float, float* %x, align 4
  %f = fsub float %_61, 1.000000e+00
  %_63 = fadd float 2.000000e+00, %f
  %s = fdiv float %f, %_63
  %z = fmul float %s, %s
  %w = fmul float %z, %z
  %_71 = fmul float %w, 0x3FCF13C4C0000000
  %_70 = fadd float 0x3FD999C260000000, %_71
  %t1 = fmul float %w, %_70
  %_75 = fmul float %w, 0x3FD23D3DC0000000
  %_74 = fadd float 0x3FE5555540000000, %_75
  %t2 = fmul float %z, %_74
  %r = fadd float %t2, %t1
  %_79 = fmul float 5.000000e-01, %f
  %hfsq = fmul float %_79, %f
  %27 = fsub float %f, %hfsq
  store float %27, float* %hi, align 4
  %_85 = load float, float* %hi, align 4
; call core::f32::<impl f32>::to_bits
  %_84 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_85)
  br label %bb27

bb27:                                             ; preds = %bb26
  store i32 %_84, i32* %ui, align 4
  %28 = load i32, i32* %ui, align 4
  %29 = and i32 %28, -4096
  store i32 %29, i32* %ui, align 4
  %_87 = load i32, i32* %ui, align 4
; call core::f32::<impl f32>::from_bits
  %_86 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_87)
  br label %bb28

bb28:                                             ; preds = %bb27
  store float %_86, float* %hi, align 4
  %_91 = load float, float* %hi, align 4
  %_89 = fsub float %f, %_91
  %_88 = fsub float %_89, %hfsq
  %_95 = fadd float %hfsq, %r
  %_93 = fmul float %s, %_95
  %lo = fadd float %_88, %_93
  %_103 = load float, float* %hi, align 4
  %_101 = fadd float %lo, %_103
  %_100 = fmul float %_101, 0xBF27135A80000000
  %_104 = fmul float %lo, 0x3FF7160000000000
  %_99 = fadd float %_100, %_104
  %_107 = load float, float* %hi, align 4
  %_106 = fmul float %_107, 0x3FF7160000000000
  %_98 = fadd float %_99, %_106
  %_109 = load i32, i32* %k, align 4
  %_108 = sitofp i32 %_109 to float
  %30 = fadd float %_98, %_108
  store float %30, float* %1, align 4
  br label %bb29
}

; libm::math::logf::logf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4logf4logf17h6c904f72e1613e4dE(float %0) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %k = alloca i32, align 4
  %ix = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
; call core::f32::<impl f32>::from_bits
  %x1p25 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1275068416)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  store i32 %2, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32 0, i32* %k, align 4
  %_8 = load i32, i32* %ix, align 4
  %_7 = icmp ult i32 %_8, 8388608
  br i1 %_7, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_11 = load i32, i32* %ix, align 4
  %_12.0 = lshr i32 %_11, 31
  br label %bb6

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_6, align 1
  br label %bb5

bb5:                                              ; preds = %bb6, %bb3
  %3 = load i8, i8* %_6, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb16

bb6:                                              ; preds = %bb4
  %_9 = icmp ne i32 %_12.0, 0
  %5 = zext i1 %_9 to i8
  store i8 %5, i8* %_6, align 1
  br label %bb5

bb16:                                             ; preds = %bb5
  %_30 = load i32, i32* %ix, align 4
  %_29 = icmp uge i32 %_30, 2139095040
  br i1 %_29, label %bb17, label %bb18

bb7:                                              ; preds = %bb5
  %_14 = load i32, i32* %ix, align 4
  %_15.0 = shl i32 %_14, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = icmp eq i32 %_15.0, 0
  br i1 %6, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %_17 = load float, float* %x, align 4
  %_18 = load float, float* %x, align 4
  %_16 = fmul float %_17, %_18
  %7 = fdiv float -1.000000e+00, %_16
  store float %7, float* %1, align 4
  br label %bb27

bb10:                                             ; preds = %bb8
  %_20 = load i32, i32* %ix, align 4
  %_21.0 = lshr i32 %_20, 31
  br label %bb11

bb11:                                             ; preds = %bb10
  %8 = icmp eq i32 %_21.0, 0
  br i1 %8, label %bb13, label %bb12

bb13:                                             ; preds = %bb11
  %9 = load i32, i32* %k, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 25)
  %_25.0 = extractvalue { i32, i1 } %10, 0
  %_25.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %11, label %panic, label %bb14

bb12:                                             ; preds = %bb11
  %_23 = load float, float* %x, align 4
  %_24 = load float, float* %x, align 4
  %_22 = fsub float %_23, %_24
  %12 = fdiv float %_22, 0.000000e+00
  store float %12, float* %1, align 4
  br label %bb27

bb27:                                             ; preds = %bb19, %bb26, %bb17, %bb9, %bb12
  %13 = load float, float* %1, align 4
  ret float %13

bb14:                                             ; preds = %bb13
  store i32 %_25.0, i32* %k, align 4
  %14 = load float, float* %x, align 4
  %15 = fmul float %14, %x1p25
  store float %15, float* %x, align 4
  %_28 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %_27 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_28)
  br label %bb15

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2130 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14
  store i32 %_27, i32* %ix, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb15
  %16 = load i32, i32* %ix, align 4
  %17 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %16, i32 4913933)
  %_33.0 = extractvalue { i32, i1 } %17, 0
  %_33.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false)
  br i1 %18, label %panic1, label %bb21

bb18:                                             ; preds = %bb16
  %_31 = load i32, i32* %ix, align 4
  %19 = icmp eq i32 %_31, 1065353216
  br i1 %19, label %bb19, label %bb20

bb17:                                             ; preds = %bb16
  %20 = load float, float* %x, align 4
  store float %20, float* %1, align 4
  br label %bb27

bb19:                                             ; preds = %bb18
  store float 0.000000e+00, float* %1, align 4
  br label %bb27

bb21:                                             ; preds = %bb20
  store i32 %_33.0, i32* %ix, align 4
  %_37 = load i32, i32* %ix, align 4
  %_38.0 = lshr i32 %_37, 23
  br label %bb22

panic1:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2132 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  %21 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_38.0, i32 127)
  %_39.0 = extractvalue { i32, i1 } %21, 0
  %_39.1 = extractvalue { i32, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %22, label %panic2, label %bb23

bb23:                                             ; preds = %bb22
  %23 = load i32, i32* %k, align 4
  %24 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %_39.0)
  %_40.0 = extractvalue { i32, i1 } %24, 0
  %_40.1 = extractvalue { i32, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false)
  br i1 %25, label %panic3, label %bb24

panic2:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2134 to %"core::panic::location::Location"*)) #11
  unreachable

bb24:                                             ; preds = %bb23
  store i32 %_40.0, i32* %k, align 4
  %_42 = load i32, i32* %ix, align 4
  %_41 = and i32 %_42, 8388607
  %26 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_41, i32 1060439283)
  %_43.0 = extractvalue { i32, i1 } %26, 0
  %_43.1 = extractvalue { i32, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %27, label %panic4, label %bb25

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2136 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  store i32 %_43.0, i32* %ix, align 4
  %_45 = load i32, i32* %ix, align 4
; call core::f32::<impl f32>::from_bits
  %_44 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_45)
  br label %bb26

panic4:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2138 to %"core::panic::location::Location"*)) #11
  unreachable

bb26:                                             ; preds = %bb25
  store float %_44, float* %x, align 4
  %_47 = load float, float* %x, align 4
  %f = fsub float %_47, 1.000000e+00
  %_50 = fadd float 2.000000e+00, %f
  %s = fdiv float %f, %_50
  %z = fmul float %s, %s
  %w = fmul float %z, %z
  %_61 = fmul float %w, 0x3FCF13C4C0000000
  %_60 = fadd float 0x3FD999C260000000, %_61
  %t1 = fmul float %w, %_60
  %_66 = fmul float %w, 0x3FD23D3DC0000000
  %_65 = fadd float 0x3FE5555540000000, %_66
  %t2 = fmul float %z, %_65
  %r = fadd float %t2, %t1
  %_72 = fmul float 5.000000e-01, %f
  %hfsq = fmul float %_72, %f
  %_76 = load i32, i32* %k, align 4
  %dk = sitofp i32 %_76 to float
  %_82 = fadd float %hfsq, %r
  %_80 = fmul float %s, %_82
  %_85 = fmul float %dk, 0x3EE2FEFA20000000
  %_79 = fadd float %_80, %_85
  %_78 = fsub float %_79, %hfsq
  %_77 = fadd float %_78, %f
  %_89 = fmul float %dk, 0x3FE62E3000000000
  %28 = fadd float %_77, %_89
  store float %28, float* %1, align 4
  br label %bb27
}

; libm::math::modf::modf
; Function Attrs: nonlazybind uwtable
define { double, double } @_ZN4libm4math4modf4modf17ha9f5e42c1468be19E(double %x) unnamed_addr #1 {
start:
  %_16 = alloca i8, align 1
  %u = alloca i64, align 8
  %rv2 = alloca double, align 8
  %0 = alloca { double, double }, align 8
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %u, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_10 = load i64, i64* %u, align 8
  %_11.0 = lshr i64 %_10, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = and i64 %_11.0, 2047
  %_7 = trunc i64 %_8 to i32
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_7, i32 1023)
  %_12.0 = extractvalue { i32, i1 } %2, 0
  %_12.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %3, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp sge i32 %_12.0, 52
  br i1 %_13, label %bb4, label %bb12

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2140 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb3
  %_28 = icmp slt i32 %_12.0, 0
  br i1 %_28, label %bb13, label %bb14

bb4:                                              ; preds = %bb3
  store double %x, double* %rv2, align 8
  %4 = icmp eq i32 %_12.0, 1024
  br i1 %4, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %_20 = load i64, i64* %u, align 8
  %_21.0 = shl i64 %_20, 12
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_16, align 1
  br label %bb7

bb7:                                              ; preds = %bb8, %bb5
  %5 = load i8, i8* %_16, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb9, label %bb10

bb8:                                              ; preds = %bb6
  %_18 = icmp ne i64 %_21.0, 0
  %7 = zext i1 %_18 to i8
  store i8 %7, i8* %_16, align 1
  br label %bb7

bb10:                                             ; preds = %bb7
  %8 = load i64, i64* %u, align 8
  %9 = and i64 %8, -9223372036854775808
  store i64 %9, i64* %u, align 8
  %_26 = load i64, i64* %u, align 8
; call core::f64::<impl f64>::from_bits
  %_25 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_26)
  br label %bb11

bb9:                                              ; preds = %bb7
  %_23 = load double, double* %rv2, align 8
  %10 = bitcast { double, double }* %0 to double*
  store double %x, double* %10, align 8
  %11 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_23, double* %11, align 8
  br label %bb21

bb21:                                             ; preds = %bb18, %bb20, %bb15, %bb11, %bb9
  %12 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  %15 = load double, double* %14, align 8
  %16 = insertvalue { double, double } undef, double %13, 0
  %17 = insertvalue { double, double } %16, double %15, 1
  ret { double, double } %17

bb11:                                             ; preds = %bb10
  %_27 = load double, double* %rv2, align 8
  %18 = bitcast { double, double }* %0 to double*
  store double %_25, double* %18, align 8
  %19 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_27, double* %19, align 8
  br label %bb21

bb14:                                             ; preds = %bb12
  %20 = and i32 %_12.0, -64
  %_37.1 = icmp ne i32 %20, 0
  %21 = zext i32 %_12.0 to i64
  %22 = and i64 %21, 63
  %_37.0 = lshr i64 4503599627370495, %22
  %23 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %23, label %panic1, label %bb16

bb13:                                             ; preds = %bb12
  %24 = load i64, i64* %u, align 8
  %25 = and i64 %24, -9223372036854775808
  store i64 %25, i64* %u, align 8
  %_32 = load i64, i64* %u, align 8
; call core::f64::<impl f64>::from_bits
  %_31 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_32)
  br label %bb15

bb15:                                             ; preds = %bb13
  store double %_31, double* %rv2, align 8
  %_34 = load double, double* %rv2, align 8
  %26 = bitcast { double, double }* %0 to double*
  store double %x, double* %26, align 8
  %27 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_34, double* %27, align 8
  br label %bb21

bb16:                                             ; preds = %bb14
  %_39 = load i64, i64* %u, align 8
  %_38 = and i64 %_39, %_37.0
  %28 = icmp eq i64 %_38, 0
  br i1 %28, label %bb17, label %bb19

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2142 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
  store double %x, double* %rv2, align 8
  %29 = load i64, i64* %u, align 8
  %30 = and i64 %29, -9223372036854775808
  store i64 %30, i64* %u, align 8
  %_44 = load i64, i64* %u, align 8
; call core::f64::<impl f64>::from_bits
  %_43 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_44)
  br label %bb18

bb19:                                             ; preds = %bb16
  %_46 = xor i64 %_37.0, -1
  %31 = load i64, i64* %u, align 8
  %32 = and i64 %31, %_46
  store i64 %32, i64* %u, align 8
  %_49 = load i64, i64* %u, align 8
; call core::f64::<impl f64>::from_bits
  %_48 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_49)
  br label %bb20

bb20:                                             ; preds = %bb19
  store double %_48, double* %rv2, align 8
  %_52 = load double, double* %rv2, align 8
  %_50 = fsub double %x, %_52
  %_53 = load double, double* %rv2, align 8
  %33 = bitcast { double, double }* %0 to double*
  store double %_50, double* %33, align 8
  %34 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_53, double* %34, align 8
  br label %bb21

bb18:                                             ; preds = %bb17
  %_45 = load double, double* %rv2, align 8
  %35 = bitcast { double, double }* %0 to double*
  store double %_43, double* %35, align 8
  %36 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_45, double* %36, align 8
  br label %bb21
}

; libm::math::modff::modff
; Function Attrs: nonlazybind uwtable
define { float, float } @_ZN4libm4math5modff5modff17hee02bcd47adda105E(float %x) unnamed_addr #1 {
start:
  %_16 = alloca i8, align 1
  %u = alloca i32, align 4
  %rv2 = alloca float, align 4
  %0 = alloca { float, float }, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %u, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_10 = load i32, i32* %u, align 4
  %_11.0 = lshr i32 %_10, 23
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = and i32 %_11.0, 255
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_8, i32 127)
  %_12.0 = extractvalue { i32, i1 } %2, 0
  %_12.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %3, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp sge i32 %_12.0, 23
  br i1 %_13, label %bb4, label %bb12

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2144 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb3
  %_27 = icmp slt i32 %_12.0, 0
  br i1 %_27, label %bb13, label %bb14

bb4:                                              ; preds = %bb3
  store float %x, float* %rv2, align 4
  %4 = icmp eq i32 %_12.0, 128
  br i1 %4, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %_20 = load i32, i32* %u, align 4
  %_21.0 = shl i32 %_20, 9
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_16, align 1
  br label %bb7

bb7:                                              ; preds = %bb8, %bb5
  %5 = load i8, i8* %_16, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb9, label %bb10

bb8:                                              ; preds = %bb6
  %_18 = icmp ne i32 %_21.0, 0
  %7 = zext i1 %_18 to i8
  store i8 %7, i8* %_16, align 1
  br label %bb7

bb10:                                             ; preds = %bb7
  %8 = load i32, i32* %u, align 4
  %9 = and i32 %8, -2147483648
  store i32 %9, i32* %u, align 4
  %_25 = load i32, i32* %u, align 4
; call core::f32::<impl f32>::from_bits
  %_24 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_25)
  br label %bb11

bb9:                                              ; preds = %bb7
  %_23 = load float, float* %rv2, align 4
  %10 = bitcast { float, float }* %0 to float*
  store float %x, float* %10, align 4
  %11 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_23, float* %11, align 4
  br label %bb21

bb21:                                             ; preds = %bb18, %bb20, %bb15, %bb11, %bb9
  %12 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = insertvalue { float, float } undef, float %13, 0
  %17 = insertvalue { float, float } %16, float %15, 1
  ret { float, float } %17

bb11:                                             ; preds = %bb10
  %_26 = load float, float* %rv2, align 4
  %18 = bitcast { float, float }* %0 to float*
  store float %_24, float* %18, align 4
  %19 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_26, float* %19, align 4
  br label %bb21

bb14:                                             ; preds = %bb12
  %20 = and i32 %_12.0, -32
  %_34.1 = icmp ne i32 %20, 0
  %21 = and i32 %_12.0, 31
  %_34.0 = lshr i32 8388607, %21
  %22 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %22, label %panic1, label %bb16

bb13:                                             ; preds = %bb12
  %23 = load i32, i32* %u, align 4
  %24 = and i32 %23, -2147483648
  store i32 %24, i32* %u, align 4
  %_30 = load i32, i32* %u, align 4
; call core::f32::<impl f32>::from_bits
  %_29 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_30)
  br label %bb15

bb15:                                             ; preds = %bb13
  store float %_29, float* %rv2, align 4
  %_32 = load float, float* %rv2, align 4
  %25 = bitcast { float, float }* %0 to float*
  store float %x, float* %25, align 4
  %26 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_32, float* %26, align 4
  br label %bb21

bb16:                                             ; preds = %bb14
  %_36 = load i32, i32* %u, align 4
  %_35 = and i32 %_36, %_34.0
  %27 = icmp eq i32 %_35, 0
  br i1 %27, label %bb17, label %bb19

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2146 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
  store float %x, float* %rv2, align 4
  %28 = load i32, i32* %u, align 4
  %29 = and i32 %28, -2147483648
  store i32 %29, i32* %u, align 4
  %_40 = load i32, i32* %u, align 4
; call core::f32::<impl f32>::from_bits
  %_39 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_40)
  br label %bb18

bb19:                                             ; preds = %bb16
  %_42 = xor i32 %_34.0, -1
  %30 = load i32, i32* %u, align 4
  %31 = and i32 %30, %_42
  store i32 %31, i32* %u, align 4
  %_45 = load i32, i32* %u, align 4
; call core::f32::<impl f32>::from_bits
  %_44 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_45)
  br label %bb20

bb20:                                             ; preds = %bb19
  store float %_44, float* %rv2, align 4
  %_48 = load float, float* %rv2, align 4
  %_46 = fsub float %x, %_48
  %_49 = load float, float* %rv2, align 4
  %32 = bitcast { float, float }* %0 to float*
  store float %_46, float* %32, align 4
  %33 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_49, float* %33, align 4
  br label %bb21

bb18:                                             ; preds = %bb17
  %_41 = load float, float* %rv2, align 4
  %34 = bitcast { float, float }* %0 to float*
  store float %_39, float* %34, align 4
  %35 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_41, float* %35, align 4
  br label %bb21
}

; libm::math::nextafter::nextafter
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math9nextafter9nextafter17h343a0ad948ba2492E(double %x, double %y) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_56 = alloca double, align 8
  %_47 = alloca double, align 8
  %_28 = alloca i8, align 1
  %ux_i = alloca i64, align 8
  %_3 = alloca i8, align 1
  %1 = alloca double, align 8
; call core::f64::<impl f64>::is_nan
  %_4 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call core::f64::<impl f64>::is_nan
  %_6 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %y)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %2 = load i8, i8* %_3, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %4 = zext i1 %_6 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
; call core::f64::<impl f64>::to_bits
  %5 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %5, i64* %ux_i, align 8
  br label %bb8

bb6:                                              ; preds = %bb3
  %6 = fadd double %x, %y
  store double %6, double* %1, align 8
  br label %bb30

bb30:                                             ; preds = %bb13, %bb29, %bb10, %bb6
  %7 = load double, double* %1, align 8
  ret double %7

bb8:                                              ; preds = %bb7
; call core::f64::<impl f64>::to_bits
  %uy_i = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_15 = load i64, i64* %ux_i, align 8
  %_14 = icmp eq i64 %_15, %uy_i
  br i1 %_14, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %_18 = load i64, i64* %ux_i, align 8
  %ax = and i64 %_18, 9223372036854775807
  %ay = and i64 %uy_i, 9223372036854775807
  %8 = icmp eq i64 %ax, 0
  br i1 %8, label %bb12, label %bb15

bb10:                                             ; preds = %bb9
  store double %y, double* %1, align 8
  br label %bb30

bb12:                                             ; preds = %bb11
  %9 = icmp eq i64 %ay, 0
  br i1 %9, label %bb13, label %bb14

bb15:                                             ; preds = %bb11
  %_29 = icmp ugt i64 %ax, %ay
  br i1 %_29, label %bb16, label %bb17

bb17:                                             ; preds = %bb15
  %_35 = load i64, i64* %ux_i, align 8
  %_34 = xor i64 %_35, %uy_i
  %_33 = and i64 %_34, -9223372036854775808
  %_32 = icmp ne i64 %_33, 0
  %10 = zext i1 %_32 to i8
  store i8 %10, i8* %_28, align 1
  br label %bb18

bb16:                                             ; preds = %bb15
  store i8 1, i8* %_28, align 1
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16
  %11 = load i8, i8* %_28, align 1, !range !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb19, label %bb21

bb21:                                             ; preds = %bb18
  %13 = load i64, i64* %ux_i, align 8
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 1)
  %_39.0 = extractvalue { i64, i1 } %14, 0
  %_39.1 = extractvalue { i64, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %15, label %panic1, label %bb22

bb19:                                             ; preds = %bb18
  %16 = load i64, i64* %ux_i, align 8
  %17 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %16, i64 1)
  %_38.0 = extractvalue { i64, i1 } %17, 0
  %_38.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %18, label %panic, label %bb20

bb20:                                             ; preds = %bb19
  store i64 %_38.0, i64* %ux_i, align 8
  br label %bb23

panic:                                            ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2148 to %"core::panic::location::Location"*)) #11
  unreachable

bb23:                                             ; preds = %bb14, %bb22, %bb20
  %_41 = load i64, i64* %ux_i, align 8
  %19 = lshr i64 %_41, 52
  store i64 %19, i64* %0, align 8
  %20 = load i64, i64* %0, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  store i64 %_39.0, i64* %ux_i, align 8
  br label %bb23

panic1:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2150 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  store double %y, double* %1, align 8
  br label %bb30

bb14:                                             ; preds = %bb12
  %_25 = and i64 %uy_i, -9223372036854775808
  %21 = or i64 %_25, 1
  store i64 %21, i64* %ux_i, align 8
  br label %bb23

bb24:                                             ; preds = %bb23
  %22 = icmp eq i64 %20, 2047
  br i1 %22, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %23 = fadd double %x, %x
  store double %23, double* %_47, align 8
; call core::ptr::read_volatile
  %_44 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_47)
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %_51 = load i64, i64* %ux_i, align 8
; call core::f64::<impl f64>::from_bits
  %ux_f = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_51)
  br label %bb27

bb27:                                             ; preds = %bb26
  %24 = icmp eq i64 %20, 0
  br i1 %24, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %_57 = fmul double %x, %x
  %_60 = fmul double %ux_f, %ux_f
  %25 = fadd double %_57, %_60
  store double %25, double* %_56, align 8
; call core::ptr::read_volatile
  %_53 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_56)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  store double %ux_f, double* %1, align 8
  br label %bb30
}

; libm::math::nextafterf::nextafterf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math10nextafterf10nextafterf17ha660bd57a474b7d7E(float %x, float %y) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_51 = alloca float, align 4
  %_42 = alloca float, align 4
  %_25 = alloca i8, align 1
  %ux_i = alloca i32, align 4
  %_3 = alloca i8, align 1
  %1 = alloca float, align 4
; call core::f32::<impl f32>::is_nan
  %_4 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %x)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call core::f32::<impl f32>::is_nan
  %_6 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %y)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %2 = load i8, i8* %_3, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %4 = zext i1 %_6 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
; call core::f32::<impl f32>::to_bits
  %5 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %5, i32* %ux_i, align 4
  br label %bb8

bb6:                                              ; preds = %bb3
  %6 = fadd float %x, %y
  store float %6, float* %1, align 4
  br label %bb30

bb30:                                             ; preds = %bb14, %bb29, %bb10, %bb6
  %7 = load float, float* %1, align 4
  ret float %7

bb8:                                              ; preds = %bb7
; call core::f32::<impl f32>::to_bits
  %uy_i = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_15 = load i32, i32* %ux_i, align 4
  %_14 = icmp eq i32 %_15, %uy_i
  br i1 %_14, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %_18 = load i32, i32* %ux_i, align 4
  %ax = and i32 %_18, 2147483647
  %ay = and i32 %uy_i, 2147483647
  %8 = icmp eq i32 %ax, 0
  br i1 %8, label %bb12, label %bb13

bb10:                                             ; preds = %bb9
  store float %y, float* %1, align 4
  br label %bb30

bb12:                                             ; preds = %bb11
  %9 = icmp eq i32 %ay, 0
  br i1 %9, label %bb14, label %bb15

bb13:                                             ; preds = %bb11
  %_26 = icmp ugt i32 %ax, %ay
  br i1 %_26, label %bb16, label %bb17

bb17:                                             ; preds = %bb13
  %_32 = load i32, i32* %ux_i, align 4
  %_31 = xor i32 %_32, %uy_i
  %_30 = and i32 %_31, -2147483648
  %_29 = icmp ne i32 %_30, 0
  %10 = zext i1 %_29 to i8
  store i8 %10, i8* %_25, align 1
  br label %bb18

bb16:                                             ; preds = %bb13
  store i8 1, i8* %_25, align 1
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16
  %11 = load i8, i8* %_25, align 1, !range !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb19, label %bb21

bb21:                                             ; preds = %bb18
  %13 = load i32, i32* %ux_i, align 4
  %14 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %13, i32 1)
  %_35.0 = extractvalue { i32, i1 } %14, 0
  %_35.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false)
  br i1 %15, label %panic1, label %bb22

bb19:                                             ; preds = %bb18
  %16 = load i32, i32* %ux_i, align 4
  %17 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %16, i32 1)
  %_34.0 = extractvalue { i32, i1 } %17, 0
  %_34.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %18, label %panic, label %bb20

bb20:                                             ; preds = %bb19
  store i32 %_34.0, i32* %ux_i, align 4
  br label %bb23

panic:                                            ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2152 to %"core::panic::location::Location"*)) #11
  unreachable

bb23:                                             ; preds = %bb15, %bb22, %bb20
  %_37 = load i32, i32* %ux_i, align 4
  store i32 %_37, i32* %0, align 4
  %19 = load i32, i32* %0, align 4
  br label %bb24

bb22:                                             ; preds = %bb21
  store i32 %_35.0, i32* %ux_i, align 4
  br label %bb23

panic1:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2154 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb12
  store float %y, float* %1, align 4
  br label %bb30

bb15:                                             ; preds = %bb12
  %_23 = and i32 %uy_i, -2147483648
  %20 = or i32 %_23, 1
  store i32 %20, i32* %ux_i, align 4
  br label %bb23

bb24:                                             ; preds = %bb23
  %21 = icmp eq i32 %19, 2139095040
  br i1 %21, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %22 = fadd float %x, %x
  store float %22, float* %_42, align 4
; call core::ptr::read_volatile
  %_39 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_42)
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %_46 = load i32, i32* %ux_i, align 4
; call core::f32::<impl f32>::from_bits
  %ux_f = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_46)
  br label %bb27

bb27:                                             ; preds = %bb26
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %_52 = fmul float %x, %x
  %_55 = fmul float %ux_f, %ux_f
  %24 = fadd float %_52, %_55
  store float %24, float* %_51, align 4
; call core::ptr::read_volatile
  %_48 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_51)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  store float %ux_f, float* %1, align 4
  br label %bb30
}

; libm::math::pow::pow
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3pow3pow17haa9e7388182ede4dE(double %x, double %y) unnamed_addr #1 {
start:
  %z4 = alloca double, align 8
  %n3 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %p_h = alloca double, align 8
  %r = alloca double, align 8
  %k1 = alloca i32, align 4
  %n = alloca i32, align 4
  %s = alloca double, align 8
  %z = alloca double, align 8
  %_136 = alloca i8, align 1
  %_135 = alloca i8, align 1
  %ax = alloca double, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %yisint = alloca i32, align 4
  %_50 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_41 = alloca i8, align 1
  %_40 = alloca i8, align 1
  %_39 = alloca i8, align 1
  %_35 = alloca i8, align 1
  %ix = alloca i32, align 4
  %_18 = alloca { i32, i32 }, align 4
  %_7 = alloca { i32, i32 }, align 4
  %t2 = alloca double, align 8
  %t1 = alloca double, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::to_bits
  %_10 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_12.0 = lshr i64 %_10, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = trunc i64 %_12.0 to i32
; call core::f64::<impl f64>::to_bits
  %_14 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = trunc i64 %_14 to i32
  %1 = bitcast { i32, i32 }* %_7 to i32*
  store i32 %_8, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_7, i32 0, i32 1
  store i32 %_13, i32* %2, align 4
  %3 = bitcast { i32, i32 }* %_7 to i32*
  %hx = load i32, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_7, i32 0, i32 1
  %lx = load i32, i32* %4, align 4
; call core::f64::<impl f64>::to_bits
  %_21 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_23.0 = lshr i64 %_21, 32
  br label %bb5

bb5:                                              ; preds = %bb4
  %_19 = trunc i64 %_23.0 to i32
; call core::f64::<impl f64>::to_bits
  %_25 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %y)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_24 = trunc i64 %_25 to i32
  %5 = bitcast { i32, i32 }* %_18 to i32*
  store i32 %_19, i32* %5, align 4
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_18, i32 0, i32 1
  store i32 %_24, i32* %6, align 4
  %7 = bitcast { i32, i32 }* %_18 to i32*
  %hy = load i32, i32* %7, align 4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_18, i32 0, i32 1
  %ly = load i32, i32* %8, align 4
  %9 = and i32 %hx, 2147483647
  store i32 %9, i32* %ix, align 4
  %iy = and i32 %hy, 2147483647
  %_31 = or i32 %iy, %ly
  %10 = icmp eq i32 %_31, 0
  br i1 %10, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store double 1.000000e+00, double* %0, align 8
  br label %bb196

bb8:                                              ; preds = %bb6
  %11 = icmp eq i32 %hx, 1072693248
  br i1 %11, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %_37 = icmp eq i32 %lx, 0
  %12 = zext i1 %_37 to i8
  store i8 %12, i8* %_35, align 1
  br label %bb11

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_35, align 1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %13 = load i8, i8* %_35, align 1, !range !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb12, label %bb13

bb13:                                             ; preds = %bb11
  %_43 = load i32, i32* %ix, align 4
  %_42 = icmp sgt i32 %_43, 2146435072
  br i1 %_42, label %bb20, label %bb21

bb12:                                             ; preds = %bb11
  store double 1.000000e+00, double* %0, align 8
  br label %bb196

bb196:                                            ; preds = %bb7, %bb56, %bb63, %bb62, %bb60, %bb59, %bb68, %bb67, %bb69, %bb195, %bb168, %bb166, %bb162, %bb160, %bb114, %bb113, %bb109, %bb108, %bb105, %bb104, %bb101, %bb100, %bb93, %bb90, %bb72, %bb29, %bb12
  %15 = load double, double* %0, align 8
  ret double %15

bb21:                                             ; preds = %bb13
  %_45 = load i32, i32* %ix, align 4
  %16 = icmp eq i32 %_45, 2146435072
  br i1 %16, label %bb24, label %bb23

bb20:                                             ; preds = %bb13
  store i8 1, i8* %_41, align 1
  br label %bb22

bb22:                                             ; preds = %bb25, %bb20
  %17 = load i8, i8* %_41, align 1, !range !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb17, label %bb18

bb24:                                             ; preds = %bb21
  %_46 = icmp ne i32 %lx, 0
  %19 = zext i1 %_46 to i8
  store i8 %19, i8* %_44, align 1
  br label %bb25

bb23:                                             ; preds = %bb21
  store i8 0, i8* %_44, align 1
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %20 = load i8, i8* %_44, align 1, !range !3
  %21 = trunc i8 %20 to i1
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_41, align 1
  br label %bb22

bb18:                                             ; preds = %bb22
  %_48 = icmp sgt i32 %iy, 2146435072
  %23 = zext i1 %_48 to i8
  store i8 %23, i8* %_40, align 1
  br label %bb19

bb17:                                             ; preds = %bb22
  store i8 1, i8* %_40, align 1
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %24 = load i8, i8* %_40, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb14, label %bb15

bb15:                                             ; preds = %bb19
  %26 = icmp eq i32 %iy, 2146435072
  br i1 %26, label %bb27, label %bb26

bb14:                                             ; preds = %bb19
  store i8 1, i8* %_39, align 1
  br label %bb16

bb16:                                             ; preds = %bb28, %bb14
  %27 = load i8, i8* %_39, align 1, !range !3
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb29, label %bb30

bb27:                                             ; preds = %bb15
  %_52 = icmp ne i32 %ly, 0
  %29 = zext i1 %_52 to i8
  store i8 %29, i8* %_50, align 1
  br label %bb28

bb26:                                             ; preds = %bb15
  store i8 0, i8* %_50, align 1
  br label %bb28

bb28:                                             ; preds = %bb27, %bb26
  %30 = load i8, i8* %_50, align 1, !range !3
  %31 = trunc i8 %30 to i1
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %_39, align 1
  br label %bb16

bb30:                                             ; preds = %bb16
  store i32 0, i32* %yisint, align 4
  %_59 = icmp slt i32 %hx, 0
  br i1 %_59, label %bb31, label %bb52

bb29:                                             ; preds = %bb16
  %33 = fadd double %x, %y
  store double %33, double* %0, align 8
  br label %bb196

bb52:                                             ; preds = %bb51, %bb49, %bb44, %bb43, %bb41, %bb33, %bb32, %bb30
  %34 = icmp eq i32 %ly, 0
  br i1 %34, label %bb53, label %bb73

bb31:                                             ; preds = %bb30
  %_61 = icmp sge i32 %iy, 1128267776
  br i1 %_61, label %bb32, label %bb33

bb33:                                             ; preds = %bb31
  %_63 = icmp sge i32 %iy, 1072693248
  br i1 %_63, label %bb34, label %bb52

bb32:                                             ; preds = %bb31
  store i32 2, i32* %yisint, align 4
  br label %bb52

bb34:                                             ; preds = %bb33
  %_67.0 = ashr i32 %iy, 20
  br label %bb35

bb35:                                             ; preds = %bb34
  %35 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_67.0, i32 1023)
  %_68.0 = extractvalue { i32, i1 } %35, 0
  %_68.1 = extractvalue { i32, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false)
  br i1 %36, label %panic, label %bb36

bb36:                                             ; preds = %bb35
  store i32 %_68.0, i32* %k, align 4
  %_70 = load i32, i32* %k, align 4
  %_69 = icmp sgt i32 %_70, 20
  br i1 %_69, label %bb37, label %bb44

panic:                                            ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2156 to %"core::panic::location::Location"*)) #11
  unreachable

bb44:                                             ; preds = %bb36
  %37 = icmp eq i32 %ly, 0
  br i1 %37, label %bb45, label %bb52

bb37:                                             ; preds = %bb36
  %_74 = load i32, i32* %k, align 4
  %38 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 52, i32 %_74)
  %_75.0 = extractvalue { i32, i1 } %38, 0
  %_75.1 = extractvalue { i32, i1 } %38, 1
  %39 = call i1 @llvm.expect.i1(i1 %_75.1, i1 false)
  br i1 %39, label %panic5, label %bb38

bb38:                                             ; preds = %bb37
  %40 = and i32 %_75.0, -32
  %_76.1 = icmp ne i32 %40, 0
  %41 = and i32 %_75.0, 31
  %_76.0 = lshr i32 %ly, %41
  %42 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %42, label %panic6, label %bb39

panic5:                                           ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2158 to %"core::panic::location::Location"*)) #11
  unreachable

bb39:                                             ; preds = %bb38
  store i32 %_76.0, i32* %j, align 4
  %_79 = load i32, i32* %j, align 4
  %_81 = load i32, i32* %k, align 4
  %43 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 52, i32 %_81)
  %_82.0 = extractvalue { i32, i1 } %43, 0
  %_82.1 = extractvalue { i32, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_82.1, i1 false)
  br i1 %44, label %panic7, label %bb40

panic6:                                           ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2160 to %"core::panic::location::Location"*)) #11
  unreachable

bb40:                                             ; preds = %bb39
  %45 = and i32 %_82.0, -32
  %_83.1 = icmp ne i32 %45, 0
  %46 = and i32 %_82.0, 31
  %_83.0 = shl i32 %_79, %46
  %47 = call i1 @llvm.expect.i1(i1 %_83.1, i1 false)
  br i1 %47, label %panic8, label %bb41

panic7:                                           ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2162 to %"core::panic::location::Location"*)) #11
  unreachable

bb41:                                             ; preds = %bb40
  %_77 = icmp eq i32 %_83.0, %ly
  br i1 %_77, label %bb42, label %bb52

panic8:                                           ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2164 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  %_87 = load i32, i32* %j, align 4
  %_86 = and i32 %_87, 1
  %48 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2, i32 %_86)
  %_88.0 = extractvalue { i32, i1 } %48, 0
  %_88.1 = extractvalue { i32, i1 } %48, 1
  %49 = call i1 @llvm.expect.i1(i1 %_88.1, i1 false)
  br i1 %49, label %panic9, label %bb43

bb43:                                             ; preds = %bb42
  store i32 %_88.0, i32* %yisint, align 4
  br label %bb52

panic9:                                           ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2166 to %"core::panic::location::Location"*)) #11
  unreachable

bb45:                                             ; preds = %bb44
  %_92 = load i32, i32* %k, align 4
  %50 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 20, i32 %_92)
  %_93.0 = extractvalue { i32, i1 } %50, 0
  %_93.1 = extractvalue { i32, i1 } %50, 1
  %51 = call i1 @llvm.expect.i1(i1 %_93.1, i1 false)
  br i1 %51, label %panic10, label %bb46

bb46:                                             ; preds = %bb45
  %52 = and i32 %_93.0, -32
  %_94.1 = icmp ne i32 %52, 0
  %53 = and i32 %_93.0, 31
  %_94.0 = ashr i32 %iy, %53
  %54 = call i1 @llvm.expect.i1(i1 %_94.1, i1 false)
  br i1 %54, label %panic11, label %bb47

panic10:                                          ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2168 to %"core::panic::location::Location"*)) #11
  unreachable

bb47:                                             ; preds = %bb46
  store i32 %_94.0, i32* %j, align 4
  %_97 = load i32, i32* %j, align 4
  %_99 = load i32, i32* %k, align 4
  %55 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 20, i32 %_99)
  %_100.0 = extractvalue { i32, i1 } %55, 0
  %_100.1 = extractvalue { i32, i1 } %55, 1
  %56 = call i1 @llvm.expect.i1(i1 %_100.1, i1 false)
  br i1 %56, label %panic12, label %bb48

panic11:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2170 to %"core::panic::location::Location"*)) #11
  unreachable

bb48:                                             ; preds = %bb47
  %57 = and i32 %_100.0, -32
  %_101.1 = icmp ne i32 %57, 0
  %58 = and i32 %_100.0, 31
  %_101.0 = shl i32 %_97, %58
  %59 = call i1 @llvm.expect.i1(i1 %_101.1, i1 false)
  br i1 %59, label %panic13, label %bb49

panic12:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2172 to %"core::panic::location::Location"*)) #11
  unreachable

bb49:                                             ; preds = %bb48
  %_95 = icmp eq i32 %_101.0, %iy
  br i1 %_95, label %bb50, label %bb52

panic13:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2174 to %"core::panic::location::Location"*)) #11
  unreachable

bb50:                                             ; preds = %bb49
  %_104 = load i32, i32* %j, align 4
  %_103 = and i32 %_104, 1
  %60 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2, i32 %_103)
  %_105.0 = extractvalue { i32, i1 } %60, 0
  %_105.1 = extractvalue { i32, i1 } %60, 1
  %61 = call i1 @llvm.expect.i1(i1 %_105.1, i1 false)
  br i1 %61, label %panic14, label %bb51

bb51:                                             ; preds = %bb50
  store i32 %_105.0, i32* %yisint, align 4
  br label %bb52

panic14:                                          ; preds = %bb50
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2176 to %"core::panic::location::Location"*)) #11
  unreachable

bb53:                                             ; preds = %bb52
  %62 = icmp eq i32 %iy, 2146435072
  br i1 %62, label %bb54, label %bb64

bb73:                                             ; preds = %bb71, %bb70, %bb52
; call libm::math::fabs::fabs
  %63 = call double @_ZN4libm4math4fabs4fabs17he5683b921f7f1e45E(double %x)
  store double %63, double* %ax, align 8
  br label %bb74

bb54:                                             ; preds = %bb53
  %_110 = load i32, i32* %ix, align 4
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_110, i32 1072693248)
  %_111.0 = extractvalue { i32, i1 } %64, 0
  %_111.1 = extractvalue { i32, i1 } %64, 1
  %65 = call i1 @llvm.expect.i1(i1 %_111.1, i1 false)
  br i1 %65, label %panic55, label %bb55

bb64:                                             ; preds = %bb53
  %66 = icmp eq i32 %iy, 1072693248
  br i1 %66, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  %_122 = icmp sge i32 %hy, 0
  br i1 %_122, label %bb67, label %bb68

bb66:                                             ; preds = %bb64
  %67 = icmp eq i32 %hy, 1073741824
  br i1 %67, label %bb69, label %bb70

bb69:                                             ; preds = %bb66
  %68 = fmul double %x, %x
  store double %68, double* %0, align 8
  br label %bb196

bb70:                                             ; preds = %bb66
  %69 = icmp eq i32 %hy, 1071644672
  br i1 %69, label %bb71, label %bb73

bb71:                                             ; preds = %bb70
  %_129 = icmp sge i32 %hx, 0
  br i1 %_129, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
; call libm::math::sqrt::sqrt
  %70 = call double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %x)
  store double %70, double* %0, align 8
  br label %bb196

bb74:                                             ; preds = %bb73
  %71 = icmp eq i32 %lx, 0
  br i1 %71, label %bb75, label %bb91

bb75:                                             ; preds = %bb74
  %_137 = load i32, i32* %ix, align 4
  %72 = icmp eq i32 %_137, 2146435072
  br i1 %72, label %bb79, label %bb80

bb91:                                             ; preds = %bb78, %bb74
  store double 1.000000e+00, double* %s, align 8
  %_162 = icmp slt i32 %hx, 0
  br i1 %_162, label %bb92, label %bb96

bb79:                                             ; preds = %bb75
  store i8 1, i8* %_136, align 1
  br label %bb81

bb80:                                             ; preds = %bb75
  %_139 = load i32, i32* %ix, align 4
  %_138 = icmp eq i32 %_139, 0
  %73 = zext i1 %_138 to i8
  store i8 %73, i8* %_136, align 1
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %74 = load i8, i8* %_136, align 1, !range !3
  %75 = trunc i8 %74 to i1
  br i1 %75, label %bb76, label %bb77

bb77:                                             ; preds = %bb81
  %_141 = load i32, i32* %ix, align 4
  %_140 = icmp eq i32 %_141, 1072693248
  %76 = zext i1 %_140 to i8
  store i8 %76, i8* %_135, align 1
  br label %bb78

bb76:                                             ; preds = %bb81
  store i8 1, i8* %_135, align 1
  br label %bb78

bb78:                                             ; preds = %bb77, %bb76
  %77 = load i8, i8* %_135, align 1, !range !3
  %78 = trunc i8 %77 to i1
  br i1 %78, label %bb82, label %bb91

bb82:                                             ; preds = %bb78
  %79 = load double, double* %ax, align 8
  store double %79, double* %z, align 8
  %_143 = icmp slt i32 %hy, 0
  br i1 %_143, label %bb83, label %bb84

bb84:                                             ; preds = %bb83, %bb82
  %_146 = icmp slt i32 %hx, 0
  br i1 %_146, label %bb85, label %bb90

bb83:                                             ; preds = %bb82
  %_145 = load double, double* %z, align 8
  %80 = fdiv double 1.000000e+00, %_145
  store double %80, double* %z, align 8
  br label %bb84

bb90:                                             ; preds = %bb87, %bb89, %bb88, %bb84
  %81 = load double, double* %z, align 8
  store double %81, double* %0, align 8
  br label %bb196

bb85:                                             ; preds = %bb84
  %_150 = load i32, i32* %ix, align 4
  %82 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_150, i32 1072693248)
  %_151.0 = extractvalue { i32, i1 } %82, 0
  %_151.1 = extractvalue { i32, i1 } %82, 1
  %83 = call i1 @llvm.expect.i1(i1 %_151.1, i1 false)
  br i1 %83, label %panic15, label %bb86

bb86:                                             ; preds = %bb85
  %_152 = load i32, i32* %yisint, align 4
  %_148 = or i32 %_151.0, %_152
  %84 = icmp eq i32 %_148, 0
  br i1 %84, label %bb87, label %bb88

panic15:                                          ; preds = %bb85
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2178 to %"core::panic::location::Location"*)) #11
  unreachable

bb87:                                             ; preds = %bb86
  %_154 = load double, double* %z, align 8
  %_155 = load double, double* %z, align 8
  %_153 = fsub double %_154, %_155
  %_157 = load double, double* %z, align 8
  %_158 = load double, double* %z, align 8
  %_156 = fsub double %_157, %_158
  %85 = fdiv double %_153, %_156
  store double %85, double* %z, align 8
  br label %bb90

bb88:                                             ; preds = %bb86
  %_159 = load i32, i32* %yisint, align 4
  %86 = icmp eq i32 %_159, 1
  br i1 %86, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  %_160 = load double, double* %z, align 8
  %87 = fneg double %_160
  store double %87, double* %z, align 8
  br label %bb90

bb96:                                             ; preds = %bb95, %bb94, %bb91
  %_172 = icmp sgt i32 %iy, 1105199104
  br i1 %_172, label %bb97, label %bb116

bb92:                                             ; preds = %bb91
  %_164 = load i32, i32* %yisint, align 4
  %88 = icmp eq i32 %_164, 0
  br i1 %88, label %bb93, label %bb94

bb93:                                             ; preds = %bb92
  %_165 = fsub double %x, %x
  %_168 = fsub double %x, %x
  %89 = fdiv double %_165, %_168
  store double %89, double* %0, align 8
  br label %bb196

bb94:                                             ; preds = %bb92
  %_171 = load i32, i32* %yisint, align 4
  %90 = icmp eq i32 %_171, 1
  br i1 %90, label %bb95, label %bb96

bb95:                                             ; preds = %bb94
  store double -1.000000e+00, double* %s, align 8
  br label %bb96

bb116:                                            ; preds = %bb96
  store i32 0, i32* %n, align 4
  %_229 = load i32, i32* %ix, align 4
  %_228 = icmp slt i32 %_229, 1048576
  br i1 %_228, label %bb117, label %bb120

bb97:                                             ; preds = %bb96
  %_174 = icmp sgt i32 %iy, 1139802112
  br i1 %_174, label %bb98, label %bb106

bb106:                                            ; preds = %bb102, %bb97
  %_185 = load i32, i32* %ix, align 4
  %_184 = icmp slt i32 %_185, 1072693247
  br i1 %_184, label %bb107, label %bb110

bb98:                                             ; preds = %bb97
  %_177 = load i32, i32* %ix, align 4
  %_176 = icmp sle i32 %_177, 1072693247
  br i1 %_176, label %bb99, label %bb102

bb102:                                            ; preds = %bb98
  %_181 = load i32, i32* %ix, align 4
  %_180 = icmp sge i32 %_181, 1072693248
  br i1 %_180, label %bb103, label %bb106

bb99:                                             ; preds = %bb98
  %_178 = icmp slt i32 %hy, 0
  br i1 %_178, label %bb100, label %bb101

bb101:                                            ; preds = %bb99
  store double 0.000000e+00, double* %0, align 8
  br label %bb196

bb100:                                            ; preds = %bb99
  store double 0x7FF0000000000000, double* %0, align 8
  br label %bb196

bb103:                                            ; preds = %bb102
  %_182 = icmp sgt i32 %hy, 0
  br i1 %_182, label %bb104, label %bb105

bb105:                                            ; preds = %bb103
  store double 0.000000e+00, double* %0, align 8
  br label %bb196

bb104:                                            ; preds = %bb103
  store double 0x7FF0000000000000, double* %0, align 8
  br label %bb196

bb110:                                            ; preds = %bb106
  %_193 = load i32, i32* %ix, align 4
  %_192 = icmp sgt i32 %_193, 1072693248
  br i1 %_192, label %bb111, label %bb112

bb107:                                            ; preds = %bb106
  %_186 = icmp slt i32 %hy, 0
  br i1 %_186, label %bb108, label %bb109

bb109:                                            ; preds = %bb107
  %_191 = load double, double* %s, align 8
  %_190 = fmul double %_191, 1.000000e-300
  %91 = fmul double %_190, 1.000000e-300
  store double %91, double* %0, align 8
  br label %bb196

bb108:                                            ; preds = %bb107
  %_189 = load double, double* %s, align 8
  %_188 = fmul double %_189, 1.000000e+300
  %92 = fmul double %_188, 1.000000e+300
  store double %92, double* %0, align 8
  br label %bb196

bb112:                                            ; preds = %bb110
  %_201 = load double, double* %ax, align 8
  %t = fsub double %_201, 1.000000e+00
  %_203 = fmul double %t, %t
  %_210 = fmul double %t, 2.500000e-01
  %_209 = fsub double 0x3FD5555555555555, %_210
  %_207 = fmul double %t, %_209
  %_206 = fsub double 5.000000e-01, %_207
  %w = fmul double %_203, %_206
  %u = fmul double 0x3FF7154760000000, %t
  %_215 = fmul double %t, 0x3E54AE0BF85DDF44
  %_217 = fmul double %w, 0x3FF71547652B82FE
  %v = fsub double %_215, %_217
  %_220 = fadd double %u, %v
; call libm::math::with_set_low_word
  %_219 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_220, i32 0)
  br label %bb115

bb111:                                            ; preds = %bb110
  %_194 = icmp sgt i32 %hy, 0
  br i1 %_194, label %bb113, label %bb114

bb114:                                            ; preds = %bb111
  %_199 = load double, double* %s, align 8
  %_198 = fmul double %_199, 1.000000e-300
  %93 = fmul double %_198, 1.000000e-300
  store double %93, double* %0, align 8
  br label %bb196

bb113:                                            ; preds = %bb111
  %_197 = load double, double* %s, align 8
  %_196 = fmul double %_197, 1.000000e+300
  %94 = fmul double %_196, 1.000000e+300
  store double %94, double* %0, align 8
  br label %bb196

bb115:                                            ; preds = %bb112
  store double %_219, double* %t1, align 8
  %_225 = load double, double* %t1, align 8
  %_224 = fsub double %_225, %u
  %95 = fsub double %v, %_224
  store double %95, double* %t2, align 8
  br label %bb153

bb153:                                            ; preds = %bb152, %bb115
; call libm::math::with_set_low_word
  %y1 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %y, i32 0)
  br label %bb154

bb120:                                            ; preds = %bb119, %bb116
  %_235 = load i32, i32* %ix, align 4
  %_236.0 = ashr i32 %_235, 20
  br label %bb121

bb117:                                            ; preds = %bb116
  %96 = load double, double* %ax, align 8
  %97 = fmul double %96, 0x4340000000000000
  store double %97, double* %ax, align 8
  %98 = load i32, i32* %n, align 4
  %99 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 53)
  %_230.0 = extractvalue { i32, i1 } %99, 0
  %_230.1 = extractvalue { i32, i1 } %99, 1
  %100 = call i1 @llvm.expect.i1(i1 %_230.1, i1 false)
  br i1 %100, label %panic16, label %bb118

bb118:                                            ; preds = %bb117
  store i32 %_230.0, i32* %n, align 4
  %_232 = load double, double* %ax, align 8
; call libm::math::get_high_word
  %_231 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_232)
  br label %bb119

panic16:                                          ; preds = %bb117
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2180 to %"core::panic::location::Location"*)) #11
  unreachable

bb119:                                            ; preds = %bb118
  store i32 %_231, i32* %ix, align 4
  br label %bb120

bb121:                                            ; preds = %bb120
  %101 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_236.0, i32 1023)
  %_237.0 = extractvalue { i32, i1 } %101, 0
  %_237.1 = extractvalue { i32, i1 } %101, 1
  %102 = call i1 @llvm.expect.i1(i1 %_237.1, i1 false)
  br i1 %102, label %panic17, label %bb122

bb122:                                            ; preds = %bb121
  %103 = load i32, i32* %n, align 4
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %_237.0)
  %_238.0 = extractvalue { i32, i1 } %104, 0
  %_238.1 = extractvalue { i32, i1 } %104, 1
  %105 = call i1 @llvm.expect.i1(i1 %_238.1, i1 false)
  br i1 %105, label %panic18, label %bb123

panic17:                                          ; preds = %bb121
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2182 to %"core::panic::location::Location"*)) #11
  unreachable

bb123:                                            ; preds = %bb122
  store i32 %_238.0, i32* %n, align 4
  %_239 = load i32, i32* %ix, align 4
  %106 = and i32 %_239, 1048575
  store i32 %106, i32* %j, align 4
  %_241 = load i32, i32* %j, align 4
  %107 = or i32 %_241, 1072693248
  store i32 %107, i32* %ix, align 4
  %_243 = load i32, i32* %j, align 4
  %_242 = icmp sle i32 %_243, 235662
  br i1 %_242, label %bb124, label %bb125

panic18:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2184 to %"core::panic::location::Location"*)) #11
  unreachable

bb125:                                            ; preds = %bb123
  %_245 = load i32, i32* %j, align 4
  %_244 = icmp slt i32 %_245, 767610
  br i1 %_244, label %bb126, label %bb127

bb124:                                            ; preds = %bb123
  store i32 0, i32* %k1, align 4
  br label %bb130

bb130:                                            ; preds = %bb129, %bb126, %bb124
  %_249 = load double, double* %ax, align 8
  %_251 = load i32, i32* %ix, align 4
; call libm::math::with_set_high_word
  %_248 = call double @_ZN4libm4math18with_set_high_word17hf93c9d004f6408dcE(double %_249, i32 %_251)
  br label %bb131

bb127:                                            ; preds = %bb125
  store i32 0, i32* %k1, align 4
  %108 = load i32, i32* %n, align 4
  %109 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 1)
  %_246.0 = extractvalue { i32, i1 } %109, 0
  %_246.1 = extractvalue { i32, i1 } %109, 1
  %110 = call i1 @llvm.expect.i1(i1 %_246.1, i1 false)
  br i1 %110, label %panic19, label %bb128

bb126:                                            ; preds = %bb125
  store i32 1, i32* %k1, align 4
  br label %bb130

bb128:                                            ; preds = %bb127
  store i32 %_246.0, i32* %n, align 4
  %111 = load i32, i32* %ix, align 4
  %112 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %111, i32 1048576)
  %_247.0 = extractvalue { i32, i1 } %112, 0
  %_247.1 = extractvalue { i32, i1 } %112, 1
  %113 = call i1 @llvm.expect.i1(i1 %_247.1, i1 false)
  br i1 %113, label %panic20, label %bb129

panic19:                                          ; preds = %bb127
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2186 to %"core::panic::location::Location"*)) #11
  unreachable

bb129:                                            ; preds = %bb128
  store i32 %_247.0, i32* %ix, align 4
  br label %bb130

panic20:                                          ; preds = %bb128
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2188 to %"core::panic::location::Location"*)) #11
  unreachable

bb131:                                            ; preds = %bb130
  store double %_248, double* %ax, align 8
  %_253 = load double, double* %ax, align 8
  %_260 = load i32, i32* %k1, align 4
  %_259 = sext i32 %_260 to i64
; call core::slice::<impl [T]>::get
  %_256 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1111 to [0 x double]*), i64 2, i64 %_259)
  br label %bb132

bb132:                                            ; preds = %bb131
; call core::option::Option<T>::unwrap
  %_255 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2190 to %"core::panic::location::Location"*))
  br label %bb133

bb133:                                            ; preds = %bb132
  %_254 = load double, double* %_255, align 8
  %u21 = fsub double %_253, %_254
  %_263 = load double, double* %ax, align 8
  %_270 = load i32, i32* %k1, align 4
  %_269 = sext i32 %_270 to i64
; call core::slice::<impl [T]>::get
  %_266 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1111 to [0 x double]*), i64 2, i64 %_269)
  br label %bb134

bb134:                                            ; preds = %bb133
; call core::option::Option<T>::unwrap
  %_265 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_266, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2192 to %"core::panic::location::Location"*))
  br label %bb135

bb135:                                            ; preds = %bb134
  %_264 = load double, double* %_265, align 8
  %_262 = fadd double %_263, %_264
  %v22 = fdiv double 1.000000e+00, %_262
  %ss = fmul double %u21, %v22
; call libm::math::with_set_low_word
  %s_h = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %ss, i32 0)
  br label %bb136

bb136:                                            ; preds = %bb135
  %_282 = load i32, i32* %ix, align 4
  %_283.0 = lshr i32 %_282, 1
  br label %bb137

bb137:                                            ; preds = %bb136
  %_279 = or i32 %_283.0, 536870912
  %114 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_279, i32 524288)
  %_284.0 = extractvalue { i32, i1 } %114, 0
  %_284.1 = extractvalue { i32, i1 } %114, 1
  %115 = call i1 @llvm.expect.i1(i1 %_284.1, i1 false)
  br i1 %115, label %panic23, label %bb138

bb138:                                            ; preds = %bb137
  %_287 = load i32, i32* %k1, align 4
  %_288.0 = shl i32 %_287, 18
  br label %bb139

panic23:                                          ; preds = %bb137
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2194 to %"core::panic::location::Location"*)) #11
  unreachable

bb139:                                            ; preds = %bb138
  %116 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_284.0, i32 %_288.0)
  %_289.0 = extractvalue { i32, i1 } %116, 0
  %_289.1 = extractvalue { i32, i1 } %116, 1
  %117 = call i1 @llvm.expect.i1(i1 %_289.1, i1 false)
  br i1 %117, label %panic24, label %bb140

bb140:                                            ; preds = %bb139
; call libm::math::with_set_high_word
  %t_h = call double @_ZN4libm4math18with_set_high_word17hf93c9d004f6408dcE(double 0.000000e+00, i32 %_289.0)
  br label %bb141

panic24:                                          ; preds = %bb139
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2194 to %"core::panic::location::Location"*)) #11
  unreachable

bb141:                                            ; preds = %bb140
  %_291 = load double, double* %ax, align 8
  %_300 = load i32, i32* %k1, align 4
  %_299 = sext i32 %_300 to i64
; call core::slice::<impl [T]>::get
  %_296 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1111 to [0 x double]*), i64 2, i64 %_299)
  br label %bb142

bb142:                                            ; preds = %bb141
; call core::option::Option<T>::unwrap
  %_295 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_296, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2196 to %"core::panic::location::Location"*))
  br label %bb143

bb143:                                            ; preds = %bb142
  %_294 = load double, double* %_295, align 8
  %_292 = fsub double %t_h, %_294
  %t_l = fsub double %_291, %_292
  %_306 = fmul double %s_h, %t_h
  %_304 = fsub double %u21, %_306
  %_309 = fmul double %s_h, %t_l
  %_303 = fsub double %_304, %_309
  %s_l = fmul double %v22, %_303
  %s2 = fmul double %ss, %ss
  %_316 = fmul double %s2, %s2
  %_332 = fmul double %s2, 0x3FCA7E284A454EEF
  %_331 = fadd double 0x3FCD864A93C9DB65, %_332
  %_329 = fmul double %s2, %_331
  %_328 = fadd double 0x3FD17460A91D4101, %_329
  %_326 = fmul double %s2, %_328
  %_325 = fadd double 0x3FD55555518F264D, %_326
  %_323 = fmul double %s2, %_325
  %_322 = fadd double 0x3FDB6DB6DB6FABFF, %_323
  %_320 = fmul double %s2, %_322
  %_319 = fadd double 0x3FE3333333333303, %_320
  %118 = fmul double %_316, %_319
  store double %118, double* %r, align 8
  %_336 = fadd double %s_h, %ss
  %_334 = fmul double %s_l, %_336
  %119 = load double, double* %r, align 8
  %120 = fadd double %119, %_334
  store double %120, double* %r, align 8
  %s225 = fmul double %s_h, %s_h
  %_344 = fadd double 3.000000e+00, %s225
  %_346 = load double, double* %r, align 8
  %_343 = fadd double %_344, %_346
; call libm::math::with_set_low_word
  %t_h26 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_343, i32 0)
  br label %bb144

bb144:                                            ; preds = %bb143
  %_348 = load double, double* %r, align 8
  %_350 = fsub double %t_h26, 3.000000e+00
  %_349 = fsub double %_350, %s225
  %t_l27 = fsub double %_348, %_349
  %u28 = fmul double %s_h, %t_h26
  %_357 = fmul double %s_l, %t_h26
  %_360 = fmul double %t_l27, %ss
  %v29 = fadd double %_357, %_360
  %_364 = fadd double %u28, %v29
; call libm::math::with_set_low_word
  %p_h30 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_364, i32 0)
  br label %bb145

bb145:                                            ; preds = %bb144
  %_369 = fsub double %p_h30, %u28
  %p_l = fsub double %v29, %_369
  %z_h = fmul double 0x3FEEC709E0000000, %p_h30
  %_376 = fmul double 0xBE3E2FE0145B01F5, %p_h30
  %_378 = fmul double %p_l, 0x3FEEC709DC3A03FD
  %_375 = fadd double %_376, %_378
  %_386 = load i32, i32* %k1, align 4
  %_385 = sext i32 %_386 to i64
; call core::slice::<impl [T]>::get
  %_382 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1114 to [0 x double]*), i64 2, i64 %_385)
  br label %bb146

bb146:                                            ; preds = %bb145
; call core::option::Option<T>::unwrap
  %_381 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_382, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2198 to %"core::panic::location::Location"*))
  br label %bb147

bb147:                                            ; preds = %bb146
  %_380 = load double, double* %_381, align 8
  %z_l = fadd double %_375, %_380
  %_388 = load i32, i32* %n, align 4
  %t31 = sitofp i32 %_388 to double
  %_392 = fadd double %z_h, %z_l
  %_401 = load i32, i32* %k1, align 4
  %_400 = sext i32 %_401 to i64
; call core::slice::<impl [T]>::get
  %_397 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1120 to [0 x double]*), i64 2, i64 %_400)
  br label %bb148

bb148:                                            ; preds = %bb147
; call core::option::Option<T>::unwrap
  %_396 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_397, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2200 to %"core::panic::location::Location"*))
  br label %bb149

bb149:                                            ; preds = %bb148
  %_395 = load double, double* %_396, align 8
  %_391 = fadd double %_392, %_395
  %_390 = fadd double %_391, %t31
; call libm::math::with_set_low_word
  %_389 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_390, i32 0)
  br label %bb150

bb150:                                            ; preds = %bb149
  store double %_389, double* %t1, align 8
  %_407 = load double, double* %t1, align 8
  %_406 = fsub double %_407, %t31
  %_415 = load i32, i32* %k1, align 4
  %_414 = sext i32 %_415 to i64
; call core::slice::<impl [T]>::get
  %_411 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [16 x i8] }>* @alloc1120 to [0 x double]*), i64 2, i64 %_414)
  br label %bb151

bb151:                                            ; preds = %bb150
; call core::option::Option<T>::unwrap
  %_410 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_411, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2202 to %"core::panic::location::Location"*))
  br label %bb152

bb152:                                            ; preds = %bb151
  %_409 = load double, double* %_410, align 8
  %_405 = fsub double %_406, %_409
  %_404 = fsub double %_405, %z_h
  %121 = fsub double %z_l, %_404
  store double %121, double* %t2, align 8
  br label %bb153

bb154:                                            ; preds = %bb153
  %_421 = fsub double %y, %y1
  %_424 = load double, double* %t1, align 8
  %_420 = fmul double %_421, %_424
  %_427 = load double, double* %t2, align 8
  %_425 = fmul double %y, %_427
  %p_l32 = fadd double %_420, %_425
  %_430 = load double, double* %t1, align 8
  %122 = fmul double %y1, %_430
  store double %122, double* %p_h, align 8
  %_433 = load double, double* %p_h, align 8
  %z33 = fadd double %p_l32, %_433
; call core::f64::<impl f64>::to_bits
  %_436 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %z33)
  br label %bb155

bb155:                                            ; preds = %bb154
  %_438.0 = lshr i64 %_436, 32
  br label %bb156

bb156:                                            ; preds = %bb155
  %123 = trunc i64 %_438.0 to i32
  store i32 %123, i32* %j2, align 4
; call core::f64::<impl f64>::to_bits
  %_440 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %z33)
  br label %bb157

bb157:                                            ; preds = %bb156
  %i = trunc i64 %_440 to i32
  %_443 = load i32, i32* %j2, align 4
  %_442 = icmp sge i32 %_443, 1083179008
  br i1 %_442, label %bb158, label %bb163

bb163:                                            ; preds = %bb157
  %_461 = load i32, i32* %j2, align 4
  %_460 = and i32 %_461, 2147483647
  %_459 = icmp sge i32 %_460, 1083231232
  br i1 %_459, label %bb164, label %bb169

bb158:                                            ; preds = %bb157
  %_446 = load i32, i32* %j2, align 4
  %124 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_446, i32 1083179008)
  %_447.0 = extractvalue { i32, i1 } %124, 0
  %_447.1 = extractvalue { i32, i1 } %124, 1
  %125 = call i1 @llvm.expect.i1(i1 %_447.1, i1 false)
  br i1 %125, label %panic34, label %bb159

bb159:                                            ; preds = %bb158
  %_444 = or i32 %_447.0, %i
  %126 = icmp eq i32 %_444, 0
  br i1 %126, label %bb161, label %bb160

panic34:                                          ; preds = %bb158
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2204 to %"core::panic::location::Location"*)) #11
  unreachable

bb161:                                            ; preds = %bb159
  %_452 = fadd double %p_l32, 0x3C971547652B82FE
  %_456 = load double, double* %p_h, align 8
  %_454 = fsub double %z33, %_456
  %_451 = fcmp ogt double %_452, %_454
  br i1 %_451, label %bb162, label %bb169

bb160:                                            ; preds = %bb159
  %_450 = load double, double* %s, align 8
  %_449 = fmul double %_450, 1.000000e+300
  %127 = fmul double %_449, 1.000000e+300
  store double %127, double* %0, align 8
  br label %bb196

bb169:                                            ; preds = %bb167, %bb163, %bb161
  %_479 = load i32, i32* %j2, align 4
  %i36 = and i32 %_479, 2147483647
  %_483.0 = ashr i32 %i36, 20
  br label %bb170

bb162:                                            ; preds = %bb161
  %_458 = load double, double* %s, align 8
  %_457 = fmul double %_458, 1.000000e+300
  %128 = fmul double %_457, 1.000000e+300
  store double %128, double* %0, align 8
  br label %bb196

bb164:                                            ; preds = %bb163
  %_465 = load i32, i32* %j2, align 4
  %129 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %_465, i32 -1064252416)
  %_466.0 = extractvalue { i32, i1 } %129, 0
  %_466.1 = extractvalue { i32, i1 } %129, 1
  %130 = call i1 @llvm.expect.i1(i1 %_466.1, i1 false)
  br i1 %130, label %panic35, label %bb165

bb165:                                            ; preds = %bb164
  %_462 = or i32 %_466.0, %i
  %131 = icmp eq i32 %_462, 0
  br i1 %131, label %bb167, label %bb166

panic35:                                          ; preds = %bb164
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2206 to %"core::panic::location::Location"*)) #11
  unreachable

bb167:                                            ; preds = %bb165
  %_475 = load double, double* %p_h, align 8
  %_473 = fsub double %z33, %_475
  %_471 = fcmp ole double %p_l32, %_473
  br i1 %_471, label %bb168, label %bb169

bb166:                                            ; preds = %bb165
  %_470 = load double, double* %s, align 8
  %_469 = fmul double %_470, 1.000000e-300
  %132 = fmul double %_469, 1.000000e-300
  store double %132, double* %0, align 8
  br label %bb196

bb168:                                            ; preds = %bb167
  %_477 = load double, double* %s, align 8
  %_476 = fmul double %_477, 1.000000e-300
  %133 = fmul double %_476, 1.000000e-300
  store double %133, double* %0, align 8
  br label %bb196

bb170:                                            ; preds = %bb169
  %134 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_483.0, i32 1023)
  %_484.0 = extractvalue { i32, i1 } %134, 0
  %_484.1 = extractvalue { i32, i1 } %134, 1
  %135 = call i1 @llvm.expect.i1(i1 %_484.1, i1 false)
  br i1 %135, label %panic37, label %bb171

bb171:                                            ; preds = %bb170
  store i32 %_484.0, i32* %k, align 4
  store i32 0, i32* %n3, align 4
  %_486 = icmp sgt i32 %i36, 1071644672
  br i1 %_486, label %bb172, label %bb185

panic37:                                          ; preds = %bb170
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2208 to %"core::panic::location::Location"*)) #11
  unreachable

bb185:                                            ; preds = %bb184, %bb171
  %_523 = load double, double* %p_h, align 8
  %_521 = fadd double %p_l32, %_523
; call libm::math::with_set_low_word
  %t47 = call double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %_521, i32 0)
  br label %bb186

bb172:                                            ; preds = %bb171
  %_488 = load i32, i32* %j2, align 4
  %_491 = load i32, i32* %k, align 4
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_491, i32 1)
  %_492.0 = extractvalue { i32, i1 } %136, 0
  %_492.1 = extractvalue { i32, i1 } %136, 1
  %137 = call i1 @llvm.expect.i1(i1 %_492.1, i1 false)
  br i1 %137, label %panic38, label %bb173

bb173:                                            ; preds = %bb172
  %138 = and i32 %_492.0, -32
  %_493.1 = icmp ne i32 %138, 0
  %139 = and i32 %_492.0, 31
  %_493.0 = ashr i32 1048576, %139
  %140 = call i1 @llvm.expect.i1(i1 %_493.1, i1 false)
  br i1 %140, label %panic39, label %bb174

panic38:                                          ; preds = %bb172
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2210 to %"core::panic::location::Location"*)) #11
  unreachable

bb174:                                            ; preds = %bb173
  %141 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_488, i32 %_493.0)
  %_494.0 = extractvalue { i32, i1 } %141, 0
  %_494.1 = extractvalue { i32, i1 } %141, 1
  %142 = call i1 @llvm.expect.i1(i1 %_494.1, i1 false)
  br i1 %142, label %panic40, label %bb175

panic39:                                          ; preds = %bb173
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2212 to %"core::panic::location::Location"*)) #11
  unreachable

bb175:                                            ; preds = %bb174
  store i32 %_494.0, i32* %n3, align 4
  %_497 = load i32, i32* %n3, align 4
  %_496 = and i32 %_497, 2147483647
  %_498.0 = ashr i32 %_496, 20
  br label %bb176

panic40:                                          ; preds = %bb174
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2214 to %"core::panic::location::Location"*)) #11
  unreachable

bb176:                                            ; preds = %bb175
  %143 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_498.0, i32 1023)
  %_499.0 = extractvalue { i32, i1 } %143, 0
  %_499.1 = extractvalue { i32, i1 } %143, 1
  %144 = call i1 @llvm.expect.i1(i1 %_499.1, i1 false)
  br i1 %144, label %panic41, label %bb177

bb177:                                            ; preds = %bb176
  store i32 %_499.0, i32* %k, align 4
  %_503 = load i32, i32* %n3, align 4
  %_506 = load i32, i32* %k, align 4
  %145 = and i32 %_506, -32
  %_507.1 = icmp ne i32 %145, 0
  %146 = and i32 %_506, 31
  %_507.0 = ashr i32 1048575, %146
  %147 = call i1 @llvm.expect.i1(i1 %_507.1, i1 false)
  br i1 %147, label %panic42, label %bb178

panic41:                                          ; preds = %bb176
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2216 to %"core::panic::location::Location"*)) #11
  unreachable

bb178:                                            ; preds = %bb177
  %_504 = xor i32 %_507.0, -1
  %_502 = and i32 %_503, %_504
; call libm::math::with_set_high_word
  %t43 = call double @_ZN4libm4math18with_set_high_word17hf93c9d004f6408dcE(double 0.000000e+00, i32 %_502)
  br label %bb179

panic42:                                          ; preds = %bb177
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2218 to %"core::panic::location::Location"*)) #11
  unreachable

bb179:                                            ; preds = %bb178
  %_510 = load i32, i32* %n3, align 4
  %_509 = and i32 %_510, 1048575
  %_508 = or i32 %_509, 1048576
  %_512 = load i32, i32* %k, align 4
  %148 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 20, i32 %_512)
  %_513.0 = extractvalue { i32, i1 } %148, 0
  %_513.1 = extractvalue { i32, i1 } %148, 1
  %149 = call i1 @llvm.expect.i1(i1 %_513.1, i1 false)
  br i1 %149, label %panic44, label %bb180

bb180:                                            ; preds = %bb179
  %150 = and i32 %_513.0, -32
  %_514.1 = icmp ne i32 %150, 0
  %151 = and i32 %_513.0, 31
  %_514.0 = ashr i32 %_508, %151
  %152 = call i1 @llvm.expect.i1(i1 %_514.1, i1 false)
  br i1 %152, label %panic45, label %bb181

panic44:                                          ; preds = %bb179
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2220 to %"core::panic::location::Location"*)) #11
  unreachable

bb181:                                            ; preds = %bb180
  store i32 %_514.0, i32* %n3, align 4
  %_516 = load i32, i32* %j2, align 4
  %_515 = icmp slt i32 %_516, 0
  br i1 %_515, label %bb182, label %bb184

panic45:                                          ; preds = %bb180
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2222 to %"core::panic::location::Location"*)) #11
  unreachable

bb184:                                            ; preds = %bb183, %bb181
  %153 = load double, double* %p_h, align 8
  %154 = fsub double %153, %t43
  store double %154, double* %p_h, align 8
  br label %bb185

bb182:                                            ; preds = %bb181
  %_517 = load i32, i32* %n3, align 4
  %_518 = icmp eq i32 %_517, -2147483648
  %155 = call i1 @llvm.expect.i1(i1 %_518, i1 false)
  br i1 %155, label %panic46, label %bb183

bb183:                                            ; preds = %bb182
  %156 = sub i32 0, %_517
  store i32 %156, i32* %n3, align 4
  br label %bb184

panic46:                                          ; preds = %bb182
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2224 to %"core::panic::location::Location"*)) #11
  unreachable

bb186:                                            ; preds = %bb185
  %u48 = fmul double %t47, 0x3FE62E4300000000
  %_532 = load double, double* %p_h, align 8
  %_530 = fsub double %t47, %_532
  %_528 = fsub double %p_l32, %_530
  %_527 = fmul double %_528, 0x3FE62E42FEFA39EF
  %_533 = fmul double %t47, 0xBE205C610CA86C39
  %v49 = fadd double %_527, %_533
  %157 = fadd double %u48, %v49
  store double %157, double* %z4, align 8
  %_541 = load double, double* %z4, align 8
  %_540 = fsub double %_541, %u48
  %w50 = fsub double %v49, %_540
  %_544 = load double, double* %z4, align 8
  %_545 = load double, double* %z4, align 8
  %t51 = fmul double %_544, %_545
  %_547 = load double, double* %z4, align 8
  %_560 = fmul double %t51, 0x3E66376972BEA4D0
  %_559 = fadd double 0xBEBBBD41C5D26BF1, %_560
  %_557 = fmul double %t51, %_559
  %_556 = fadd double 0x3F11566AAF25DE2C, %_557
  %_554 = fmul double %t51, %_556
  %_553 = fadd double 0xBF66C16C16BEBD93, %_554
  %_551 = fmul double %t51, %_553
  %_550 = fadd double 0x3FC555555555553E, %_551
  %_548 = fmul double %t51, %_550
  %t152 = fsub double %_547, %_548
  %_565 = load double, double* %z4, align 8
  %_564 = fmul double %_565, %t152
  %_567 = fsub double %t152, 2.000000e+00
  %_563 = fdiv double %_564, %_567
  %_572 = load double, double* %z4, align 8
  %_571 = fmul double %_572, %w50
  %_569 = fadd double %w50, %_571
  %r53 = fsub double %_563, %_569
  %_576 = load double, double* %z4, align 8
  %_574 = fsub double %r53, %_576
  %158 = fsub double 1.000000e+00, %_574
  store double %158, double* %z4, align 8
  %_578 = load double, double* %z4, align 8
; call libm::math::get_high_word
  %_577 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %_578)
  br label %bb187

bb187:                                            ; preds = %bb186
  store i32 %_577, i32* %j2, align 4
  %_580 = load i32, i32* %n3, align 4
  %_581.0 = shl i32 %_580, 20
  br label %bb188

bb188:                                            ; preds = %bb187
  %159 = load i32, i32* %j2, align 4
  %160 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %159, i32 %_581.0)
  %_582.0 = extractvalue { i32, i1 } %160, 0
  %_582.1 = extractvalue { i32, i1 } %160, 1
  %161 = call i1 @llvm.expect.i1(i1 %_582.1, i1 false)
  br i1 %161, label %panic54, label %bb189

bb189:                                            ; preds = %bb188
  store i32 %_582.0, i32* %j2, align 4
  %_585 = load i32, i32* %j2, align 4
  %_586.0 = ashr i32 %_585, 20
  br label %bb190

panic54:                                          ; preds = %bb188
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2226 to %"core::panic::location::Location"*)) #11
  unreachable

bb190:                                            ; preds = %bb189
  %_583 = icmp sle i32 %_586.0, 0
  br i1 %_583, label %bb191, label %bb193

bb193:                                            ; preds = %bb190
  %_591 = load double, double* %z4, align 8
  %_593 = load i32, i32* %j2, align 4
; call libm::math::with_set_high_word
  %_590 = call double @_ZN4libm4math18with_set_high_word17hf93c9d004f6408dcE(double %_591, i32 %_593)
  br label %bb194

bb191:                                            ; preds = %bb190
  %_588 = load double, double* %z4, align 8
  %_589 = load i32, i32* %n3, align 4
; call libm::math::scalbn::scalbn
  %_587 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %_588, i32 %_589)
  br label %bb192

bb192:                                            ; preds = %bb191
  store double %_587, double* %z4, align 8
  br label %bb195

bb195:                                            ; preds = %bb194, %bb192
  %_594 = load double, double* %s, align 8
  %_595 = load double, double* %z4, align 8
  %162 = fmul double %_594, %_595
  store double %162, double* %0, align 8
  br label %bb196

bb194:                                            ; preds = %bb193
  store double %_590, double* %z4, align 8
  br label %bb195

bb68:                                             ; preds = %bb65
  %163 = fdiv double 1.000000e+00, %x
  store double %163, double* %0, align 8
  br label %bb196

bb67:                                             ; preds = %bb65
  store double %x, double* %0, align 8
  br label %bb196

bb55:                                             ; preds = %bb54
  %_108 = or i32 %_111.0, %lx
  %164 = icmp eq i32 %_108, 0
  br i1 %164, label %bb56, label %bb57

panic55:                                          ; preds = %bb54
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2228 to %"core::panic::location::Location"*)) #11
  unreachable

bb56:                                             ; preds = %bb55
  store double 1.000000e+00, double* %0, align 8
  br label %bb196

bb57:                                             ; preds = %bb55
  %_115 = load i32, i32* %ix, align 4
  %_114 = icmp sge i32 %_115, 1072693248
  br i1 %_114, label %bb58, label %bb61

bb61:                                             ; preds = %bb57
  %_118 = icmp sge i32 %hy, 0
  br i1 %_118, label %bb62, label %bb63

bb58:                                             ; preds = %bb57
  %_116 = icmp sge i32 %hy, 0
  br i1 %_116, label %bb59, label %bb60

bb60:                                             ; preds = %bb58
  store double 0.000000e+00, double* %0, align 8
  br label %bb196

bb59:                                             ; preds = %bb58
  store double %y, double* %0, align 8
  br label %bb196

bb63:                                             ; preds = %bb61
  %165 = fneg double %y
  store double %165, double* %0, align 8
  br label %bb196

bb62:                                             ; preds = %bb61
  store double 0.000000e+00, double* %0, align 8
  br label %bb196
}

; libm::math::powf::powf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4powf4powf17h204e192d2592f74eE(float %x, float %y) unnamed_addr #1 {
start:
  %_409 = alloca i8, align 1
  %t_l = alloca float, align 4
  %t_h = alloca float, align 4
  %s_h = alloca float, align 4
  %s2 = alloca float, align 4
  %_94 = alloca i8, align 1
  %_93 = alloca i8, align 1
  %_86 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %is = alloca i32, align 4
  %ix = alloca i32, align 4
  %n = alloca i32, align 4
  %yisint = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %w = alloca float, align 4
  %v = alloca float, align 4
  %u = alloca float, align 4
  %t = alloca float, align 4
  %sn = alloca float, align 4
  %r = alloca float, align 4
  %t2 = alloca float, align 4
  %t1 = alloca float, align 4
  %p_l = alloca float, align 4
  %p_h = alloca float, align 4
  %ax = alloca float, align 4
  %z = alloca float, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::to_bits
  %_29 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %_31 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = and i32 %_29, 2147483647
  store i32 %1, i32* %ix, align 4
  %iy = and i32 %_31, 2147483647
  %2 = icmp eq i32 %iy, 0
  br i1 %2, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store float 1.000000e+00, float* %0, align 4
  br label %bb163

bb4:                                              ; preds = %bb2
  %3 = icmp eq i32 %_29, 1065353216
  br i1 %3, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store float 1.000000e+00, float* %0, align 4
  br label %bb163

bb6:                                              ; preds = %bb4
  %_39 = load i32, i32* %ix, align 4
  %_38 = icmp sgt i32 %_39, 2139095040
  br i1 %_38, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %_40 = icmp sgt i32 %iy, 2139095040
  %4 = zext i1 %_40 to i8
  store i8 %4, i8* %_37, align 1
  br label %bb9

bb7:                                              ; preds = %bb6
  store i8 1, i8* %_37, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %5 = load i8, i8* %_37, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  store i32 0, i32* %yisint, align 4
  %_44 = icmp slt i32 %_29, 0
  br i1 %_44, label %bb12, label %bb24

bb10:                                             ; preds = %bb9
  %7 = fadd float %x, %y
  store float %7, float* %0, align 4
  br label %bb163

bb163:                                            ; preds = %bb3, %bb5, %bb26, %bb33, %bb32, %bb30, %bb29, %bb38, %bb37, %bb39, %bb162, %bb127, %bb134, %bb129, %bb124, %bb76, %bb75, %bb71, %bb70, %bb64, %bb61, %bb44, %bb10
  %8 = load float, float* %0, align 4
  ret float %8

bb24:                                             ; preds = %bb23, %bb21, %bb14, %bb13, %bb11
  %9 = icmp eq i32 %iy, 2139095040
  br i1 %9, label %bb25, label %bb34

bb12:                                             ; preds = %bb11
  %_46 = icmp sge i32 %iy, 1266679808
  br i1 %_46, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %_48 = icmp sge i32 %iy, 1065353216
  br i1 %_48, label %bb15, label %bb24

bb13:                                             ; preds = %bb12
  store i32 2, i32* %yisint, align 4
  br label %bb24

bb15:                                             ; preds = %bb14
  %_52.0 = ashr i32 %iy, 23
  br label %bb16

bb16:                                             ; preds = %bb15
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_52.0, i32 127)
  %_53.0 = extractvalue { i32, i1 } %10, 0
  %_53.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false)
  br i1 %11, label %panic, label %bb17

bb17:                                             ; preds = %bb16
  store i32 %_53.0, i32* %k, align 4
  %_56 = load i32, i32* %k, align 4
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 23, i32 %_56)
  %_57.0 = extractvalue { i32, i1 } %12, 0
  %_57.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_57.1, i1 false)
  br i1 %13, label %panic1, label %bb18

panic:                                            ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2230 to %"core::panic::location::Location"*)) #11
  unreachable

bb18:                                             ; preds = %bb17
  %14 = and i32 %_57.0, -32
  %_58.1 = icmp ne i32 %14, 0
  %15 = and i32 %_57.0, 31
  %_58.0 = ashr i32 %iy, %15
  %16 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %16, label %panic2, label %bb19

panic1:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2232 to %"core::panic::location::Location"*)) #11
  unreachable

bb19:                                             ; preds = %bb18
  store i32 %_58.0, i32* %j, align 4
  %_61 = load i32, i32* %j, align 4
  %_63 = load i32, i32* %k, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 23, i32 %_63)
  %_64.0 = extractvalue { i32, i1 } %17, 0
  %_64.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false)
  br i1 %18, label %panic3, label %bb20

panic2:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2234 to %"core::panic::location::Location"*)) #11
  unreachable

bb20:                                             ; preds = %bb19
  %19 = and i32 %_64.0, -32
  %_65.1 = icmp ne i32 %19, 0
  %20 = and i32 %_64.0, 31
  %_65.0 = shl i32 %_61, %20
  %21 = call i1 @llvm.expect.i1(i1 %_65.1, i1 false)
  br i1 %21, label %panic4, label %bb21

panic3:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2236 to %"core::panic::location::Location"*)) #11
  unreachable

bb21:                                             ; preds = %bb20
  %_59 = icmp eq i32 %_65.0, %iy
  br i1 %_59, label %bb22, label %bb24

panic4:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2238 to %"core::panic::location::Location"*)) #11
  unreachable

bb22:                                             ; preds = %bb21
  %_68 = load i32, i32* %j, align 4
  %_67 = and i32 %_68, 1
  %22 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2, i32 %_67)
  %_69.0 = extractvalue { i32, i1 } %22, 0
  %_69.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_69.1, i1 false)
  br i1 %23, label %panic5, label %bb23

bb23:                                             ; preds = %bb22
  store i32 %_69.0, i32* %yisint, align 4
  br label %bb24

panic5:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2240 to %"core::panic::location::Location"*)) #11
  unreachable

bb25:                                             ; preds = %bb24
  %_71 = load i32, i32* %ix, align 4
  %24 = icmp eq i32 %_71, 1065353216
  br i1 %24, label %bb26, label %bb27

bb34:                                             ; preds = %bb24
  %25 = icmp eq i32 %iy, 1065353216
  br i1 %25, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %_80 = icmp sge i32 %_31, 0
  br i1 %_80, label %bb37, label %bb38

bb36:                                             ; preds = %bb34
  %26 = icmp eq i32 %_31, 1073741824
  br i1 %26, label %bb39, label %bb40

bb39:                                             ; preds = %bb36
  %27 = fmul float %x, %x
  store float %27, float* %0, align 4
  br label %bb163

bb40:                                             ; preds = %bb36
  %28 = icmp eq i32 %_31, 1056964608
  br i1 %28, label %bb42, label %bb41

bb42:                                             ; preds = %bb40
  %_88 = icmp sge i32 %_29, 0
  %29 = zext i1 %_88 to i8
  store i8 %29, i8* %_86, align 1
  br label %bb43

bb41:                                             ; preds = %bb40
  store i8 0, i8* %_86, align 1
  br label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %30 = load i8, i8* %_86, align 1, !range !3
  %31 = trunc i8 %30 to i1
  br i1 %31, label %bb44, label %bb45

bb45:                                             ; preds = %bb43
; call libm::math::fabsf::fabsf
  %_91 = call float @_ZN4libm4math5fabsf5fabsf17h82e75e00a39568c2E(float %x)
  br label %bb46

bb44:                                             ; preds = %bb43
; call libm::math::sqrtf::sqrtf
  %32 = call float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %x)
  store float %32, float* %0, align 4
  br label %bb163

bb46:                                             ; preds = %bb45
  store float %_91, float* %ax, align 4
  %_95 = load i32, i32* %ix, align 4
  %33 = icmp eq i32 %_95, 2139095040
  br i1 %33, label %bb50, label %bb51

bb50:                                             ; preds = %bb46
  store i8 1, i8* %_94, align 1
  br label %bb52

bb51:                                             ; preds = %bb46
  %_97 = load i32, i32* %ix, align 4
  %_96 = icmp eq i32 %_97, 0
  %34 = zext i1 %_96 to i8
  store i8 %34, i8* %_94, align 1
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %35 = load i8, i8* %_94, align 1, !range !3
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb47, label %bb48

bb48:                                             ; preds = %bb52
  %_99 = load i32, i32* %ix, align 4
  %_98 = icmp eq i32 %_99, 1065353216
  %37 = zext i1 %_98 to i8
  store i8 %37, i8* %_93, align 1
  br label %bb49

bb47:                                             ; preds = %bb52
  store i8 1, i8* %_93, align 1
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %38 = load i8, i8* %_93, align 1, !range !3
  %39 = trunc i8 %38 to i1
  br i1 %39, label %bb53, label %bb62

bb62:                                             ; preds = %bb49
  store float 1.000000e+00, float* %sn, align 4
  %_119 = icmp slt i32 %_29, 0
  br i1 %_119, label %bb63, label %bb67

bb53:                                             ; preds = %bb49
  %_100 = load float, float* %ax, align 4
  store float %_100, float* %z, align 4
  %_101 = icmp slt i32 %_31, 0
  br i1 %_101, label %bb54, label %bb55

bb55:                                             ; preds = %bb54, %bb53
  %_104 = icmp slt i32 %_29, 0
  br i1 %_104, label %bb56, label %bb61

bb54:                                             ; preds = %bb53
  %_103 = load float, float* %z, align 4
  %40 = fdiv float 1.000000e+00, %_103
  store float %40, float* %z, align 4
  br label %bb55

bb61:                                             ; preds = %bb58, %bb60, %bb59, %bb55
  %41 = load float, float* %z, align 4
  store float %41, float* %0, align 4
  br label %bb163

bb56:                                             ; preds = %bb55
  %_108 = load i32, i32* %ix, align 4
  %42 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_108, i32 1065353216)
  %_109.0 = extractvalue { i32, i1 } %42, 0
  %_109.1 = extractvalue { i32, i1 } %42, 1
  %43 = call i1 @llvm.expect.i1(i1 %_109.1, i1 false)
  br i1 %43, label %panic6, label %bb57

bb57:                                             ; preds = %bb56
  %_110 = load i32, i32* %yisint, align 4
  %_106 = or i32 %_109.0, %_110
  %44 = icmp eq i32 %_106, 0
  br i1 %44, label %bb58, label %bb59

panic6:                                           ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2242 to %"core::panic::location::Location"*)) #11
  unreachable

bb58:                                             ; preds = %bb57
  %_112 = load float, float* %z, align 4
  %_113 = load float, float* %z, align 4
  %_111 = fsub float %_112, %_113
  %_115 = load float, float* %z, align 4
  %_116 = load float, float* %z, align 4
  %_114 = fsub float %_115, %_116
  %45 = fdiv float %_111, %_114
  store float %45, float* %z, align 4
  br label %bb61

bb59:                                             ; preds = %bb57
  %_117 = load i32, i32* %yisint, align 4
  %46 = icmp eq i32 %_117, 1
  br i1 %46, label %bb60, label %bb61

bb60:                                             ; preds = %bb59
  %_118 = load float, float* %z, align 4
  %47 = fneg float %_118
  store float %47, float* %z, align 4
  br label %bb61

bb67:                                             ; preds = %bb66, %bb65, %bb62
  %_129 = icmp sgt i32 %iy, 1291845632
  br i1 %_129, label %bb68, label %bb79

bb63:                                             ; preds = %bb62
  %_121 = load i32, i32* %yisint, align 4
  %48 = icmp eq i32 %_121, 0
  br i1 %48, label %bb64, label %bb65

bb64:                                             ; preds = %bb63
  %_122 = fsub float %x, %x
  %_125 = fsub float %x, %x
  %49 = fdiv float %_122, %_125
  store float %49, float* %0, align 4
  br label %bb163

bb65:                                             ; preds = %bb63
  %_128 = load i32, i32* %yisint, align 4
  %50 = icmp eq i32 %_128, 1
  br i1 %50, label %bb66, label %bb67

bb66:                                             ; preds = %bb65
  store float -1.000000e+00, float* %sn, align 4
  br label %bb67

bb79:                                             ; preds = %bb67
  store i32 0, i32* %n, align 4
  %_180 = load i32, i32* %ix, align 4
  %_179 = icmp slt i32 %_180, 8388608
  br i1 %_179, label %bb80, label %bb83

bb68:                                             ; preds = %bb67
  %_132 = load i32, i32* %ix, align 4
  %_131 = icmp slt i32 %_132, 1065353208
  br i1 %_131, label %bb69, label %bb72

bb72:                                             ; preds = %bb68
  %_140 = load i32, i32* %ix, align 4
  %_139 = icmp sgt i32 %_140, 1065353223
  br i1 %_139, label %bb73, label %bb74

bb69:                                             ; preds = %bb68
  %_133 = icmp slt i32 %_31, 0
  br i1 %_133, label %bb70, label %bb71

bb71:                                             ; preds = %bb69
  %_138 = load float, float* %sn, align 4
  %_137 = fmul float %_138, 0x39B4484C00000000
  %51 = fmul float %_137, 0x39B4484C00000000
  store float %51, float* %0, align 4
  br label %bb163

bb70:                                             ; preds = %bb69
  %_136 = load float, float* %sn, align 4
  %_135 = fmul float %_136, 0x46293E5940000000
  %52 = fmul float %_135, 0x46293E5940000000
  store float %52, float* %0, align 4
  br label %bb163

bb74:                                             ; preds = %bb72
  %_147 = load float, float* %ax, align 4
  %53 = fsub float %_147, 1.000000e+00
  store float %53, float* %t, align 4
  %_149 = load float, float* %t, align 4
  %_150 = load float, float* %t, align 4
  %_148 = fmul float %_149, %_150
  %_153 = load float, float* %t, align 4
  %_156 = load float, float* %t, align 4
  %_155 = fmul float %_156, 2.500000e-01
  %_154 = fsub float 0x3FD5555560000000, %_155
  %_152 = fmul float %_153, %_154
  %_151 = fsub float 5.000000e-01, %_152
  %54 = fmul float %_148, %_151
  store float %54, float* %w, align 4
  %_157 = load float, float* %t, align 4
  %55 = fmul float 0x3FF7154000000000, %_157
  store float %55, float* %u, align 4
  %_159 = load float, float* %t, align 4
  %_158 = fmul float %_159, 0x3EDD94AE00000000
  %_161 = load float, float* %w, align 4
  %_160 = fmul float %_161, 0x3FF7154760000000
  %56 = fsub float %_158, %_160
  store float %56, float* %v, align 4
  %_162 = load float, float* %u, align 4
  %_163 = load float, float* %v, align 4
  %57 = fadd float %_162, %_163
  store float %57, float* %t1, align 4
  %_165 = load float, float* %t1, align 4
; call core::f32::<impl f32>::to_bits
  %_164 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_165)
  br label %bb77

bb73:                                             ; preds = %bb72
  %_141 = icmp sgt i32 %_31, 0
  br i1 %_141, label %bb75, label %bb76

bb76:                                             ; preds = %bb73
  %_146 = load float, float* %sn, align 4
  %_145 = fmul float %_146, 0x39B4484C00000000
  %58 = fmul float %_145, 0x39B4484C00000000
  store float %58, float* %0, align 4
  br label %bb163

bb75:                                             ; preds = %bb73
  %_144 = load float, float* %sn, align 4
  %_143 = fmul float %_144, 0x46293E5940000000
  %59 = fmul float %_143, 0x46293E5940000000
  store float %59, float* %0, align 4
  br label %bb163

bb77:                                             ; preds = %bb74
  store i32 %_164, i32* %is, align 4
  %_169 = load i32, i32* %is, align 4
  %_167 = and i32 %_169, -4096
; call core::f32::<impl f32>::from_bits
  %_166 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_167)
  br label %bb78

bb78:                                             ; preds = %bb77
  store float %_166, float* %t1, align 4
  %_170 = load float, float* %v, align 4
  %_172 = load float, float* %t1, align 4
  %_173 = load float, float* %u, align 4
  %_171 = fsub float %_172, %_173
  %60 = fsub float %_170, %_171
  store float %60, float* %t2, align 4
  br label %bb120

bb120:                                            ; preds = %bb119, %bb78
; call core::f32::<impl f32>::to_bits
  %_371 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %y)
  br label %bb121

bb83:                                             ; preds = %bb82, %bb79
  %_186 = load i32, i32* %ix, align 4
  %_187.0 = ashr i32 %_186, 23
  br label %bb84

bb80:                                             ; preds = %bb79
  %61 = load float, float* %ax, align 4
  %62 = fmul float %61, 0x4170000000000000
  store float %62, float* %ax, align 4
  %63 = load i32, i32* %n, align 4
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 24)
  %_181.0 = extractvalue { i32, i1 } %64, 0
  %_181.1 = extractvalue { i32, i1 } %64, 1
  %65 = call i1 @llvm.expect.i1(i1 %_181.1, i1 false)
  br i1 %65, label %panic7, label %bb81

bb81:                                             ; preds = %bb80
  store i32 %_181.0, i32* %n, align 4
  %_183 = load float, float* %ax, align 4
; call core::f32::<impl f32>::to_bits
  %_182 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_183)
  br label %bb82

panic7:                                           ; preds = %bb80
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2244 to %"core::panic::location::Location"*)) #11
  unreachable

bb82:                                             ; preds = %bb81
  store i32 %_182, i32* %ix, align 4
  br label %bb83

bb84:                                             ; preds = %bb83
  %66 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_187.0, i32 127)
  %_188.0 = extractvalue { i32, i1 } %66, 0
  %_188.1 = extractvalue { i32, i1 } %66, 1
  %67 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false)
  br i1 %67, label %panic8, label %bb85

bb85:                                             ; preds = %bb84
  %68 = load i32, i32* %n, align 4
  %69 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %_188.0)
  %_189.0 = extractvalue { i32, i1 } %69, 0
  %_189.1 = extractvalue { i32, i1 } %69, 1
  %70 = call i1 @llvm.expect.i1(i1 %_189.1, i1 false)
  br i1 %70, label %panic9, label %bb86

panic8:                                           ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2246 to %"core::panic::location::Location"*)) #11
  unreachable

bb86:                                             ; preds = %bb85
  store i32 %_189.0, i32* %n, align 4
  %_190 = load i32, i32* %ix, align 4
  %71 = and i32 %_190, 8388607
  store i32 %71, i32* %j, align 4
  %_191 = load i32, i32* %j, align 4
  %72 = or i32 %_191, 1065353216
  store i32 %72, i32* %ix, align 4
  %_193 = load i32, i32* %j, align 4
  %_192 = icmp sle i32 %_193, 1885297
  br i1 %_192, label %bb87, label %bb88

panic9:                                           ; preds = %bb85
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2248 to %"core::panic::location::Location"*)) #11
  unreachable

bb88:                                             ; preds = %bb86
  %_195 = load i32, i32* %j, align 4
  %_194 = icmp slt i32 %_195, 6140887
  br i1 %_194, label %bb89, label %bb90

bb87:                                             ; preds = %bb86
  store i32 0, i32* %k, align 4
  br label %bb93

bb93:                                             ; preds = %bb92, %bb89, %bb87
  %_200 = load i32, i32* %ix, align 4
; call core::f32::<impl f32>::from_bits
  %_198 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_200)
  br label %bb94

bb90:                                             ; preds = %bb88
  store i32 0, i32* %k, align 4
  %73 = load i32, i32* %n, align 4
  %74 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 1)
  %_196.0 = extractvalue { i32, i1 } %74, 0
  %_196.1 = extractvalue { i32, i1 } %74, 1
  %75 = call i1 @llvm.expect.i1(i1 %_196.1, i1 false)
  br i1 %75, label %panic10, label %bb91

bb89:                                             ; preds = %bb88
  store i32 1, i32* %k, align 4
  br label %bb93

bb91:                                             ; preds = %bb90
  store i32 %_196.0, i32* %n, align 4
  %76 = load i32, i32* %ix, align 4
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 8388608)
  %_197.0 = extractvalue { i32, i1 } %77, 0
  %_197.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_197.1, i1 false)
  br i1 %78, label %panic11, label %bb92

panic10:                                          ; preds = %bb90
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2250 to %"core::panic::location::Location"*)) #11
  unreachable

bb92:                                             ; preds = %bb91
  store i32 %_197.0, i32* %ix, align 4
  br label %bb93

panic11:                                          ; preds = %bb91
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2252 to %"core::panic::location::Location"*)) #11
  unreachable

bb94:                                             ; preds = %bb93
  store float %_198, float* %ax, align 4
  %_201 = load float, float* %ax, align 4
  %_208 = load i32, i32* %k, align 4
  %_207 = sext i32 %_208 to i64
; call core::slice::<impl [T]>::get
  %_204 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1585 to [0 x float]*), i64 2, i64 %_207)
  br label %bb95

bb95:                                             ; preds = %bb94
; call core::option::Option<T>::unwrap
  %_203 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_204, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2254 to %"core::panic::location::Location"*))
  br label %bb96

bb96:                                             ; preds = %bb95
  %_202 = load float, float* %_203, align 4
  %79 = fsub float %_201, %_202
  store float %79, float* %u, align 4
  %_210 = load float, float* %ax, align 4
  %_217 = load i32, i32* %k, align 4
  %_216 = sext i32 %_217 to i64
; call core::slice::<impl [T]>::get
  %_213 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1585 to [0 x float]*), i64 2, i64 %_216)
  br label %bb97

bb97:                                             ; preds = %bb96
; call core::option::Option<T>::unwrap
  %_212 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_213, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2256 to %"core::panic::location::Location"*))
  br label %bb98

bb98:                                             ; preds = %bb97
  %_211 = load float, float* %_212, align 4
  %_209 = fadd float %_210, %_211
  %80 = fdiv float 1.000000e+00, %_209
  store float %80, float* %v, align 4
  %_218 = load float, float* %u, align 4
  %_219 = load float, float* %v, align 4
  %s = fmul float %_218, %_219
  store float %s, float* %s_h, align 4
  %_222 = load float, float* %s_h, align 4
; call core::f32::<impl f32>::to_bits
  %_221 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_222)
  br label %bb99

bb99:                                             ; preds = %bb98
  store i32 %_221, i32* %is, align 4
  %_226 = load i32, i32* %is, align 4
  %_224 = and i32 %_226, -4096
; call core::f32::<impl f32>::from_bits
  %_223 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_224)
  br label %bb100

bb100:                                            ; preds = %bb99
  store float %_223, float* %s_h, align 4
  %_231 = load i32, i32* %ix, align 4
  %_232.0 = lshr i32 %_231, 1
  br label %bb101

bb101:                                            ; preds = %bb100
  %_228 = and i32 %_232.0, -4096
  %_227 = or i32 %_228, 536870912
  store i32 %_227, i32* %is, align 4
  %_237 = load i32, i32* %is, align 4
  %81 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_237, i32 4194304)
  %_238.0 = extractvalue { i32, i1 } %81, 0
  %_238.1 = extractvalue { i32, i1 } %81, 1
  %82 = call i1 @llvm.expect.i1(i1 %_238.1, i1 false)
  br i1 %82, label %panic12, label %bb102

bb102:                                            ; preds = %bb101
  %_241 = load i32, i32* %k, align 4
  %_242.0 = shl i32 %_241, 21
  br label %bb103

panic12:                                          ; preds = %bb101
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2258 to %"core::panic::location::Location"*)) #11
  unreachable

bb103:                                            ; preds = %bb102
  %83 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_238.0, i32 %_242.0)
  %_243.0 = extractvalue { i32, i1 } %83, 0
  %_243.1 = extractvalue { i32, i1 } %83, 1
  %84 = call i1 @llvm.expect.i1(i1 %_243.1, i1 false)
  br i1 %84, label %panic13, label %bb104

bb104:                                            ; preds = %bb103
; call core::f32::<impl f32>::from_bits
  %_233 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_243.0)
  br label %bb105

panic13:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2258 to %"core::panic::location::Location"*)) #11
  unreachable

bb105:                                            ; preds = %bb104
  store float %_233, float* %t_h, align 4
  %_244 = load float, float* %ax, align 4
  %_246 = load float, float* %t_h, align 4
  %_253 = load i32, i32* %k, align 4
  %_252 = sext i32 %_253 to i64
; call core::slice::<impl [T]>::get
  %_249 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1585 to [0 x float]*), i64 2, i64 %_252)
  br label %bb106

bb106:                                            ; preds = %bb105
; call core::option::Option<T>::unwrap
  %_248 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_249, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2260 to %"core::panic::location::Location"*))
  br label %bb107

bb107:                                            ; preds = %bb106
  %_247 = load float, float* %_248, align 4
  %_245 = fsub float %_246, %_247
  %85 = fsub float %_244, %_245
  store float %85, float* %t_l, align 4
  %_254 = load float, float* %v, align 4
  %_257 = load float, float* %u, align 4
  %_259 = load float, float* %s_h, align 4
  %_260 = load float, float* %t_h, align 4
  %_258 = fmul float %_259, %_260
  %_256 = fsub float %_257, %_258
  %_262 = load float, float* %s_h, align 4
  %_263 = load float, float* %t_l, align 4
  %_261 = fmul float %_262, %_263
  %_255 = fsub float %_256, %_261
  %s_l = fmul float %_254, %_255
  %86 = fmul float %s, %s
  store float %86, float* %s2, align 4
  %_267 = load float, float* %s2, align 4
  %_268 = load float, float* %s2, align 4
  %_266 = fmul float %_267, %_268
  %_271 = load float, float* %s2, align 4
  %_274 = load float, float* %s2, align 4
  %_277 = load float, float* %s2, align 4
  %_280 = load float, float* %s2, align 4
  %_283 = load float, float* %s2, align 4
  %_282 = fmul float %_283, 0x3FCA7E2840000000
  %_281 = fadd float 0x3FCD864AA0000000, %_282
  %_279 = fmul float %_280, %_281
  %_278 = fadd float 0x3FD17460A0000000, %_279
  %_276 = fmul float %_277, %_278
  %_275 = fadd float 0x3FD5555560000000, %_276
  %_273 = fmul float %_274, %_275
  %_272 = fadd float 0x3FDB6DB6E0000000, %_273
  %_270 = fmul float %_271, %_272
  %_269 = fadd float 0x3FE3333340000000, %_270
  %87 = fmul float %_266, %_269
  store float %87, float* %r, align 4
  %_287 = load float, float* %s_h, align 4
  %_286 = fadd float %_287, %s
  %_284 = fmul float %s_l, %_286
  %88 = load float, float* %r, align 4
  %89 = fadd float %88, %_284
  store float %89, float* %r, align 4
  %_289 = load float, float* %s_h, align 4
  %_290 = load float, float* %s_h, align 4
  %90 = fmul float %_289, %_290
  store float %90, float* %s2, align 4
  %_292 = load float, float* %s2, align 4
  %_291 = fadd float 3.000000e+00, %_292
  %_293 = load float, float* %r, align 4
  %91 = fadd float %_291, %_293
  store float %91, float* %t_h, align 4
  %_295 = load float, float* %t_h, align 4
; call core::f32::<impl f32>::to_bits
  %_294 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_295)
  br label %bb108

bb108:                                            ; preds = %bb107
  store i32 %_294, i32* %is, align 4
  %_299 = load i32, i32* %is, align 4
  %_297 = and i32 %_299, -4096
; call core::f32::<impl f32>::from_bits
  %_296 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_297)
  br label %bb109

bb109:                                            ; preds = %bb108
  store float %_296, float* %t_h, align 4
  %_300 = load float, float* %r, align 4
  %_303 = load float, float* %t_h, align 4
  %_302 = fsub float %_303, 3.000000e+00
  %_304 = load float, float* %s2, align 4
  %_301 = fsub float %_302, %_304
  %92 = fsub float %_300, %_301
  store float %92, float* %t_l, align 4
  %_305 = load float, float* %s_h, align 4
  %_306 = load float, float* %t_h, align 4
  %93 = fmul float %_305, %_306
  store float %93, float* %u, align 4
  %_309 = load float, float* %t_h, align 4
  %_307 = fmul float %s_l, %_309
  %_311 = load float, float* %t_l, align 4
  %_310 = fmul float %_311, %s
  %94 = fadd float %_307, %_310
  store float %94, float* %v, align 4
  %_313 = load float, float* %u, align 4
  %_314 = load float, float* %v, align 4
  %95 = fadd float %_313, %_314
  store float %95, float* %p_h, align 4
  %_316 = load float, float* %p_h, align 4
; call core::f32::<impl f32>::to_bits
  %_315 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_316)
  br label %bb110

bb110:                                            ; preds = %bb109
  store i32 %_315, i32* %is, align 4
  %_320 = load i32, i32* %is, align 4
  %_318 = and i32 %_320, -4096
; call core::f32::<impl f32>::from_bits
  %_317 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_318)
  br label %bb111

bb111:                                            ; preds = %bb110
  store float %_317, float* %p_h, align 4
  %_321 = load float, float* %v, align 4
  %_323 = load float, float* %p_h, align 4
  %_324 = load float, float* %u, align 4
  %_322 = fsub float %_323, %_324
  %96 = fsub float %_321, %_322
  store float %96, float* %p_l, align 4
  %_325 = load float, float* %p_h, align 4
  %z_h = fmul float 0x3FEEC80000000000, %_325
  %_328 = load float, float* %p_h, align 4
  %_327 = fmul float 0xBF1EC478C0000000, %_328
  %_330 = load float, float* %p_l, align 4
  %_329 = fmul float %_330, 0x3FEEC709E0000000
  %_326 = fadd float %_327, %_329
  %_337 = load i32, i32* %k, align 4
  %_336 = sext i32 %_337 to i64
; call core::slice::<impl [T]>::get
  %_333 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1588 to [0 x float]*), i64 2, i64 %_336)
  br label %bb112

bb112:                                            ; preds = %bb111
; call core::option::Option<T>::unwrap
  %_332 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_333, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2262 to %"core::panic::location::Location"*))
  br label %bb113

bb113:                                            ; preds = %bb112
  %_331 = load float, float* %_332, align 4
  %z_l = fadd float %_326, %_331
  %_338 = load i32, i32* %n, align 4
  %97 = sitofp i32 %_338 to float
  store float %97, float* %t, align 4
  %_340 = fadd float %z_h, %z_l
  %_349 = load i32, i32* %k, align 4
  %_348 = sext i32 %_349 to i64
; call core::slice::<impl [T]>::get
  %_345 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1594 to [0 x float]*), i64 2, i64 %_348)
  br label %bb114

bb114:                                            ; preds = %bb113
; call core::option::Option<T>::unwrap
  %_344 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_345, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2264 to %"core::panic::location::Location"*))
  br label %bb115

bb115:                                            ; preds = %bb114
  %_343 = load float, float* %_344, align 4
  %_339 = fadd float %_340, %_343
  %_350 = load float, float* %t, align 4
  %98 = fadd float %_339, %_350
  store float %98, float* %t1, align 4
  %_352 = load float, float* %t1, align 4
; call core::f32::<impl f32>::to_bits
  %_351 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_352)
  br label %bb116

bb116:                                            ; preds = %bb115
  store i32 %_351, i32* %is, align 4
  %_356 = load i32, i32* %is, align 4
  %_354 = and i32 %_356, -4096
; call core::f32::<impl f32>::from_bits
  %_353 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_354)
  br label %bb117

bb117:                                            ; preds = %bb116
  store float %_353, float* %t1, align 4
  %_361 = load float, float* %t1, align 4
  %_362 = load float, float* %t, align 4
  %_360 = fsub float %_361, %_362
  %_369 = load i32, i32* %k, align 4
  %_368 = sext i32 %_369 to i64
; call core::slice::<impl [T]>::get
  %_365 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2b11d2db93cf1794E"([0 x float]* nonnull align 4 bitcast (<{ [8 x i8] }>* @alloc1594 to [0 x float]*), i64 2, i64 %_368)
  br label %bb118

bb118:                                            ; preds = %bb117
; call core::option::Option<T>::unwrap
  %_364 = call align 4 dereferenceable(4) float* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hd85f0ed44766dc28E"(i32* align 4 dereferenceable_or_null(4) %_365, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2266 to %"core::panic::location::Location"*))
  br label %bb119

bb119:                                            ; preds = %bb118
  %_363 = load float, float* %_364, align 4
  %_359 = fsub float %_360, %_363
  %_358 = fsub float %_359, %z_h
  %99 = fsub float %z_l, %_358
  store float %99, float* %t2, align 4
  br label %bb120

bb121:                                            ; preds = %bb120
  store i32 %_371, i32* %is, align 4
  %_376 = load i32, i32* %is, align 4
  %_374 = and i32 %_376, -4096
; call core::f32::<impl f32>::from_bits
  %_373 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_374)
  br label %bb122

bb122:                                            ; preds = %bb121
  %_378 = fsub float %y, %_373
  %_381 = load float, float* %t1, align 4
  %_377 = fmul float %_378, %_381
  %_384 = load float, float* %t2, align 4
  %_382 = fmul float %y, %_384
  %100 = fadd float %_377, %_382
  store float %100, float* %p_l, align 4
  %_386 = load float, float* %t1, align 4
  %101 = fmul float %_373, %_386
  store float %101, float* %p_h, align 4
  %_387 = load float, float* %p_l, align 4
  %_388 = load float, float* %p_h, align 4
  %102 = fadd float %_387, %_388
  store float %102, float* %z, align 4
  %_390 = load float, float* %z, align 4
; call core::f32::<impl f32>::to_bits
  %_389 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_390)
  br label %bb123

bb123:                                            ; preds = %bb122
  store i32 %_389, i32* %j, align 4
  %_392 = load i32, i32* %j, align 4
  %_391 = icmp sgt i32 %_392, 1124073472
  br i1 %_391, label %bb124, label %bb125

bb125:                                            ; preds = %bb123
  %_395 = load i32, i32* %j, align 4
  %103 = icmp eq i32 %_395, 1124073472
  br i1 %103, label %bb126, label %bb128

bb124:                                            ; preds = %bb123
  %_394 = load float, float* %sn, align 4
  %_393 = fmul float %_394, 0x46293E5940000000
  %104 = fmul float %_393, 0x46293E5940000000
  store float %104, float* %0, align 4
  br label %bb163

bb126:                                            ; preds = %bb125
  %_398 = load float, float* %p_l, align 4
  %_397 = fadd float %_398, 0x3E67154780000000
  %_400 = load float, float* %z, align 4
  %_401 = load float, float* %p_h, align 4
  %_399 = fsub float %_400, %_401
  %_396 = fcmp ogt float %_397, %_399
  br i1 %_396, label %bb127, label %bb135

bb128:                                            ; preds = %bb125
  %_406 = load i32, i32* %j, align 4
  %_405 = and i32 %_406, 2147483647
  %_404 = icmp sgt i32 %_405, 1125515264
  br i1 %_404, label %bb129, label %bb130

bb130:                                            ; preds = %bb128
  %_411 = load i32, i32* %j, align 4
  %105 = icmp eq i32 %_411, -1021968384
  br i1 %105, label %bb132, label %bb131

bb129:                                            ; preds = %bb128
  %_408 = load float, float* %sn, align 4
  %_407 = fmul float %_408, 0x39B4484C00000000
  %106 = fmul float %_407, 0x39B4484C00000000
  store float %106, float* %0, align 4
  br label %bb163

bb132:                                            ; preds = %bb130
  %_413 = load float, float* %p_l, align 4
  %_415 = load float, float* %z, align 4
  %_416 = load float, float* %p_h, align 4
  %_414 = fsub float %_415, %_416
  %_412 = fcmp ole float %_413, %_414
  %107 = zext i1 %_412 to i8
  store i8 %107, i8* %_409, align 1
  br label %bb133

bb131:                                            ; preds = %bb130
  store i8 0, i8* %_409, align 1
  br label %bb133

bb133:                                            ; preds = %bb132, %bb131
  %108 = load i8, i8* %_409, align 1, !range !3
  %109 = trunc i8 %108 to i1
  br i1 %109, label %bb134, label %bb135

bb135:                                            ; preds = %bb126, %bb133
  %_419 = load i32, i32* %j, align 4
  %i = and i32 %_419, 2147483647
  %_422.0 = ashr i32 %i, 23
  br label %bb136

bb134:                                            ; preds = %bb133
  %_418 = load float, float* %sn, align 4
  %_417 = fmul float %_418, 0x39B4484C00000000
  %110 = fmul float %_417, 0x39B4484C00000000
  store float %110, float* %0, align 4
  br label %bb163

bb127:                                            ; preds = %bb126
  %_403 = load float, float* %sn, align 4
  %_402 = fmul float %_403, 0x46293E5940000000
  %111 = fmul float %_402, 0x46293E5940000000
  store float %111, float* %0, align 4
  br label %bb163

bb136:                                            ; preds = %bb135
  %112 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_422.0, i32 127)
  %_423.0 = extractvalue { i32, i1 } %112, 0
  %_423.1 = extractvalue { i32, i1 } %112, 1
  %113 = call i1 @llvm.expect.i1(i1 %_423.1, i1 false)
  br i1 %113, label %panic14, label %bb137

bb137:                                            ; preds = %bb136
  store i32 %_423.0, i32* %k, align 4
  store i32 0, i32* %n, align 4
  %_424 = icmp sgt i32 %i, 1056964608
  br i1 %_424, label %bb138, label %bb151

panic14:                                          ; preds = %bb136
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2268 to %"core::panic::location::Location"*)) #11
  unreachable

bb151:                                            ; preds = %bb150, %bb137
  %_458 = load float, float* %p_l, align 4
  %_459 = load float, float* %p_h, align 4
  %114 = fadd float %_458, %_459
  store float %114, float* %t, align 4
  %_461 = load float, float* %t, align 4
; call core::f32::<impl f32>::to_bits
  %_460 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_461)
  br label %bb152

bb138:                                            ; preds = %bb137
  %_426 = load i32, i32* %j, align 4
  %_429 = load i32, i32* %k, align 4
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_429, i32 1)
  %_430.0 = extractvalue { i32, i1 } %115, 0
  %_430.1 = extractvalue { i32, i1 } %115, 1
  %116 = call i1 @llvm.expect.i1(i1 %_430.1, i1 false)
  br i1 %116, label %panic15, label %bb139

bb139:                                            ; preds = %bb138
  %117 = and i32 %_430.0, -32
  %_431.1 = icmp ne i32 %117, 0
  %118 = and i32 %_430.0, 31
  %_431.0 = ashr i32 8388608, %118
  %119 = call i1 @llvm.expect.i1(i1 %_431.1, i1 false)
  br i1 %119, label %panic16, label %bb140

panic15:                                          ; preds = %bb138
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2270 to %"core::panic::location::Location"*)) #11
  unreachable

bb140:                                            ; preds = %bb139
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_426, i32 %_431.0)
  %_432.0 = extractvalue { i32, i1 } %120, 0
  %_432.1 = extractvalue { i32, i1 } %120, 1
  %121 = call i1 @llvm.expect.i1(i1 %_432.1, i1 false)
  br i1 %121, label %panic17, label %bb141

panic16:                                          ; preds = %bb139
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2272 to %"core::panic::location::Location"*)) #11
  unreachable

bb141:                                            ; preds = %bb140
  store i32 %_432.0, i32* %n, align 4
  %_435 = load i32, i32* %n, align 4
  %_434 = and i32 %_435, 2147483647
  %_436.0 = ashr i32 %_434, 23
  br label %bb142

panic17:                                          ; preds = %bb140
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2274 to %"core::panic::location::Location"*)) #11
  unreachable

bb142:                                            ; preds = %bb141
  %122 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_436.0, i32 127)
  %_437.0 = extractvalue { i32, i1 } %122, 0
  %_437.1 = extractvalue { i32, i1 } %122, 1
  %123 = call i1 @llvm.expect.i1(i1 %_437.1, i1 false)
  br i1 %123, label %panic18, label %bb143

bb143:                                            ; preds = %bb142
  store i32 %_437.0, i32* %k, align 4
  %_441 = load i32, i32* %n, align 4
  %_444 = load i32, i32* %k, align 4
  %124 = and i32 %_444, -32
  %_445.1 = icmp ne i32 %124, 0
  %125 = and i32 %_444, 31
  %_445.0 = lshr i32 8388607, %125
  %126 = call i1 @llvm.expect.i1(i1 %_445.1, i1 false)
  br i1 %126, label %panic19, label %bb144

panic18:                                          ; preds = %bb142
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2276 to %"core::panic::location::Location"*)) #11
  unreachable

bb144:                                            ; preds = %bb143
  %_442 = xor i32 %_445.0, -1
  %_439 = and i32 %_441, %_442
; call core::f32::<impl f32>::from_bits
  %_438 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_439)
  br label %bb145

panic19:                                          ; preds = %bb143
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2278 to %"core::panic::location::Location"*)) #11
  unreachable

bb145:                                            ; preds = %bb144
  store float %_438, float* %t, align 4
  %_448 = load i32, i32* %n, align 4
  %_447 = and i32 %_448, 8388607
  %_446 = or i32 %_447, 8388608
  %_450 = load i32, i32* %k, align 4
  %127 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 23, i32 %_450)
  %_451.0 = extractvalue { i32, i1 } %127, 0
  %_451.1 = extractvalue { i32, i1 } %127, 1
  %128 = call i1 @llvm.expect.i1(i1 %_451.1, i1 false)
  br i1 %128, label %panic20, label %bb146

bb146:                                            ; preds = %bb145
  %129 = and i32 %_451.0, -32
  %_452.1 = icmp ne i32 %129, 0
  %130 = and i32 %_451.0, 31
  %_452.0 = ashr i32 %_446, %130
  %131 = call i1 @llvm.expect.i1(i1 %_452.1, i1 false)
  br i1 %131, label %panic21, label %bb147

panic20:                                          ; preds = %bb145
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2280 to %"core::panic::location::Location"*)) #11
  unreachable

bb147:                                            ; preds = %bb146
  store i32 %_452.0, i32* %n, align 4
  %_454 = load i32, i32* %j, align 4
  %_453 = icmp slt i32 %_454, 0
  br i1 %_453, label %bb148, label %bb150

panic21:                                          ; preds = %bb146
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2282 to %"core::panic::location::Location"*)) #11
  unreachable

bb150:                                            ; preds = %bb149, %bb147
  %_457 = load float, float* %t, align 4
  %132 = load float, float* %p_h, align 4
  %133 = fsub float %132, %_457
  store float %133, float* %p_h, align 4
  br label %bb151

bb148:                                            ; preds = %bb147
  %_455 = load i32, i32* %n, align 4
  %_456 = icmp eq i32 %_455, -2147483648
  %134 = call i1 @llvm.expect.i1(i1 %_456, i1 false)
  br i1 %134, label %panic22, label %bb149

bb149:                                            ; preds = %bb148
  %135 = sub i32 0, %_455
  store i32 %135, i32* %n, align 4
  br label %bb150

panic22:                                          ; preds = %bb148
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2284 to %"core::panic::location::Location"*)) #11
  unreachable

bb152:                                            ; preds = %bb151
  store i32 %_460, i32* %is, align 4
  %_465 = load i32, i32* %is, align 4
  %_463 = and i32 %_465, -32768
; call core::f32::<impl f32>::from_bits
  %_462 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_463)
  br label %bb153

bb153:                                            ; preds = %bb152
  store float %_462, float* %t, align 4
  %_466 = load float, float* %t, align 4
  %136 = fmul float %_466, 0x3FE62E4000000000
  store float %136, float* %u, align 4
  %_469 = load float, float* %p_l, align 4
  %_471 = load float, float* %t, align 4
  %_472 = load float, float* %p_h, align 4
  %_470 = fsub float %_471, %_472
  %_468 = fsub float %_469, %_470
  %_467 = fmul float %_468, 0x3FE62E4300000000
  %_474 = load float, float* %t, align 4
  %_473 = fmul float %_474, 0x3EB7F7D180000000
  %137 = fadd float %_467, %_473
  store float %137, float* %v, align 4
  %_475 = load float, float* %u, align 4
  %_476 = load float, float* %v, align 4
  %138 = fadd float %_475, %_476
  store float %138, float* %z, align 4
  %_477 = load float, float* %v, align 4
  %_479 = load float, float* %z, align 4
  %_480 = load float, float* %u, align 4
  %_478 = fsub float %_479, %_480
  %139 = fsub float %_477, %_478
  store float %139, float* %w, align 4
  %_481 = load float, float* %z, align 4
  %_482 = load float, float* %z, align 4
  %140 = fmul float %_481, %_482
  store float %140, float* %t, align 4
  %_483 = load float, float* %z, align 4
  %_485 = load float, float* %t, align 4
  %_488 = load float, float* %t, align 4
  %_491 = load float, float* %t, align 4
  %_494 = load float, float* %t, align 4
  %_497 = load float, float* %t, align 4
  %_496 = fmul float %_497, 0x3E66376980000000
  %_495 = fadd float 0xBEBBBD41C0000000, %_496
  %_493 = fmul float %_494, %_495
  %_492 = fadd float 0x3F11566AA0000000, %_493
  %_490 = fmul float %_491, %_492
  %_489 = fadd float 0xBF66C16C20000000, %_490
  %_487 = fmul float %_488, %_489
  %_486 = fadd float 0x3FC5555560000000, %_487
  %_484 = fmul float %_485, %_486
  %141 = fsub float %_483, %_484
  store float %141, float* %t1, align 4
  %_500 = load float, float* %z, align 4
  %_501 = load float, float* %t1, align 4
  %_499 = fmul float %_500, %_501
  %_503 = load float, float* %t1, align 4
  %_502 = fsub float %_503, 2.000000e+00
  %_498 = fdiv float %_499, %_502
  %_505 = load float, float* %w, align 4
  %_507 = load float, float* %z, align 4
  %_508 = load float, float* %w, align 4
  %_506 = fmul float %_507, %_508
  %_504 = fadd float %_505, %_506
  %142 = fsub float %_498, %_504
  store float %142, float* %r, align 4
  %_510 = load float, float* %r, align 4
  %_511 = load float, float* %z, align 4
  %_509 = fsub float %_510, %_511
  %143 = fsub float 1.000000e+00, %_509
  store float %143, float* %z, align 4
  %_513 = load float, float* %z, align 4
; call core::f32::<impl f32>::to_bits
  %_512 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_513)
  br label %bb154

bb154:                                            ; preds = %bb153
  store i32 %_512, i32* %j, align 4
  %_515 = load i32, i32* %n, align 4
  %_516.0 = shl i32 %_515, 23
  br label %bb155

bb155:                                            ; preds = %bb154
  %144 = load i32, i32* %j, align 4
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 %_516.0)
  %_517.0 = extractvalue { i32, i1 } %145, 0
  %_517.1 = extractvalue { i32, i1 } %145, 1
  %146 = call i1 @llvm.expect.i1(i1 %_517.1, i1 false)
  br i1 %146, label %panic23, label %bb156

bb156:                                            ; preds = %bb155
  store i32 %_517.0, i32* %j, align 4
  %_520 = load i32, i32* %j, align 4
  %_521.0 = ashr i32 %_520, 23
  br label %bb157

panic23:                                          ; preds = %bb155
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2286 to %"core::panic::location::Location"*)) #11
  unreachable

bb157:                                            ; preds = %bb156
  %_518 = icmp sle i32 %_521.0, 0
  br i1 %_518, label %bb158, label %bb160

bb160:                                            ; preds = %bb157
  %_527 = load i32, i32* %j, align 4
; call core::f32::<impl f32>::from_bits
  %_525 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_527)
  br label %bb161

bb158:                                            ; preds = %bb157
  %_523 = load float, float* %z, align 4
  %_524 = load i32, i32* %n, align 4
; call libm::math::scalbnf::scalbnf
  %_522 = call float @_ZN4libm4math7scalbnf7scalbnf17h465599e40fffdd16E(float %_523, i32 %_524)
  br label %bb159

bb159:                                            ; preds = %bb158
  store float %_522, float* %z, align 4
  br label %bb162

bb162:                                            ; preds = %bb161, %bb159
  %_528 = load float, float* %sn, align 4
  %_529 = load float, float* %z, align 4
  %147 = fmul float %_528, %_529
  store float %147, float* %0, align 4
  br label %bb163

bb161:                                            ; preds = %bb160
  store float %_525, float* %z, align 4
  br label %bb162

bb38:                                             ; preds = %bb35
  %148 = fdiv float 1.000000e+00, %x
  store float %148, float* %0, align 4
  br label %bb163

bb37:                                             ; preds = %bb35
  store float %x, float* %0, align 4
  br label %bb163

bb26:                                             ; preds = %bb25
  store float 1.000000e+00, float* %0, align 4
  br label %bb163

bb27:                                             ; preds = %bb25
  %_73 = load i32, i32* %ix, align 4
  %_72 = icmp sgt i32 %_73, 1065353216
  br i1 %_72, label %bb28, label %bb31

bb31:                                             ; preds = %bb27
  %_76 = icmp sge i32 %_31, 0
  br i1 %_76, label %bb32, label %bb33

bb28:                                             ; preds = %bb27
  %_74 = icmp sge i32 %_31, 0
  br i1 %_74, label %bb29, label %bb30

bb30:                                             ; preds = %bb28
  store float 0.000000e+00, float* %0, align 4
  br label %bb163

bb29:                                             ; preds = %bb28
  store float %y, float* %0, align 4
  br label %bb163

bb33:                                             ; preds = %bb31
  %149 = fneg float %y
  store float %149, float* %0, align 4
  br label %bb163

bb32:                                             ; preds = %bb31
  store float 0.000000e+00, float* %0, align 4
  br label %bb163
}

; libm::math::remainder::remainder
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math9remainder9remainder17hf16251dc39550a6dE(double %x, double %y) unnamed_addr #1 {
start:
; call libm::math::remquo::remquo
  %0 = call { double, i32 } @_ZN4libm4math6remquo6remquo17hbe8d6e1fe6ec552eE(double %x, double %y)
  %_3.0 = extractvalue { double, i32 } %0, 0
  %_3.1 = extractvalue { double, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret double %_3.0
}

; libm::math::remainderf::remainderf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math10remainderf10remainderf17hf655464dd1149ee8E(float %x, float %y) unnamed_addr #1 {
start:
; call libm::math::remquof::remquof
  %0 = call { float, i32 } @_ZN4libm4math7remquof7remquof17h3f2eb8736295034fE(float %x, float %y)
  %_3.0 = extractvalue { float, i32 } %0, 0
  %_3.1 = extractvalue { float, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret float %_3.0
}

; libm::math::remquo::remquo
; Function Attrs: nonlazybind uwtable
define { double, i32 } @_ZN4libm4math6remquo6remquo17hbe8d6e1fe6ec552eE(double %0, double %1) unnamed_addr #1 {
start:
  %quo = alloca i32, align 4
  %_150 = alloca i8, align 1
  %_145 = alloca i8, align 1
  %_139 = alloca i8, align 1
  %_135 = alloca i8, align 1
  %_29 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %uxi = alloca i64, align 8
  %i = alloca i64, align 8
  %q = alloca i32, align 4
  %ey = alloca i32, align 4
  %ex = alloca i32, align 4
  %uy = alloca i64, align 8
  %2 = alloca { double, i32 }, align 8
  %y = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  store double %1, double* %y, align 8
  %_4 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %ux = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = load double, double* %y, align 8
; call core::f64::<impl f64>::to_bits
  %3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_6)
  store i64 %3, i64* %uy, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11.0 = lshr i64 %ux, 52
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i64 %_11.0, 2047
  %4 = trunc i64 %_8 to i32
  store i32 %4, i32* %ex, align 4
  %_15 = load i64, i64* %uy, align 8
  %_16.0 = lshr i64 %_15, 52
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = and i64 %_16.0, 2047
  %5 = trunc i64 %_13 to i32
  store i32 %5, i32* %ey, align 4
  %_20.0 = lshr i64 %ux, 63
  br label %bb5

bb5:                                              ; preds = %bb4
  %sx = icmp ne i64 %_20.0, 0
  %_23 = load i64, i64* %uy, align 8
  %_24.0 = lshr i64 %_23, 63
  br label %bb6

bb6:                                              ; preds = %bb5
  %sy = icmp ne i64 %_24.0, 0
  store i64 %ux, i64* %uxi, align 8
  %_31 = load i64, i64* %uy, align 8
  %_32.0 = shl i64 %_31, 1
  br label %bb13

bb13:                                             ; preds = %bb6
  %6 = icmp eq i64 %_32.0, 0
  br i1 %6, label %bb10, label %bb11

bb10:                                             ; preds = %bb13
  store i8 1, i8* %_29, align 1
  br label %bb12

bb11:                                             ; preds = %bb13
  %_34 = load double, double* %y, align 8
; call core::f64::<impl f64>::is_nan
  %_33 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$6is_nan17h5d8ab5be9a52e0d0E"(double %_34)
  br label %bb14

bb14:                                             ; preds = %bb11
  %7 = zext i1 %_33 to i8
  store i8 %7, i8* %_29, align 1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb14
  %8 = load i8, i8* %_29, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb8

bb8:                                              ; preds = %bb12
  %_36 = load i32, i32* %ex, align 4
  %_35 = icmp eq i32 %_36, 2047
  %10 = zext i1 %_35 to i8
  store i8 %10, i8* %_28, align 1
  br label %bb9

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_28, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %11 = load i8, i8* %_28, align 1, !range !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb15, label %bb16

bb16:                                             ; preds = %bb9
  %_46.0 = shl i64 %ux, 1
  br label %bb17

bb15:                                             ; preds = %bb9
  %_39 = load double, double* %x, align 8
  %_40 = load double, double* %y, align 8
  %_38 = fmul double %_39, %_40
  %_42 = load double, double* %x, align 8
  %_43 = load double, double* %y, align 8
  %_41 = fmul double %_42, %_43
  %_37 = fdiv double %_38, %_41
  %13 = bitcast { double, i32 }* %2 to double*
  store double %_37, double* %13, align 8
  %14 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %14, align 8
  br label %bb105

bb105:                                            ; preds = %bb18, %bb104, %bb103, %bb48, %bb15
  %15 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 0
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { double, i32 } undef, double %16, 0
  %20 = insertvalue { double, i32 } %19, i32 %18, 1
  ret { double, i32 } %20

bb17:                                             ; preds = %bb16
  %21 = icmp eq i64 %_46.0, 0
  br i1 %21, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %_47 = load double, double* %x, align 8
  %22 = bitcast { double, i32 }* %2 to double*
  store double %_47, double* %22, align 8
  %23 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %23, align 8
  br label %bb105

bb19:                                             ; preds = %bb17
  %_48 = load i32, i32* %ex, align 4
  %24 = icmp eq i32 %_48, 0
  br i1 %24, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %_49 = load i64, i64* %uxi, align 8
  %_50.0 = shl i64 %_49, 12
  br label %bb22

bb21:                                             ; preds = %bb19
  %25 = load i64, i64* %uxi, align 8
  %26 = and i64 %25, 4503599627370495
  store i64 %26, i64* %uxi, align 8
  %27 = load i64, i64* %uxi, align 8
  %28 = or i64 %27, 4503599627370496
  store i64 %28, i64* %uxi, align 8
  br label %bb32

bb32:                                             ; preds = %bb31, %bb21
  %_64 = load i32, i32* %ey, align 4
  %29 = icmp eq i32 %_64, 0
  br i1 %29, label %bb33, label %bb44

bb22:                                             ; preds = %bb20
  store i64 %_50.0, i64* %i, align 8
  br label %bb23

bb23:                                             ; preds = %bb27, %bb22
  %_52 = load i64, i64* %i, align 8
  %_53.0 = lshr i64 %_52, 63
  br label %bb24

bb24:                                             ; preds = %bb23
  %30 = icmp eq i64 %_53.0, 0
  br i1 %30, label %bb25, label %bb28

bb25:                                             ; preds = %bb24
  %31 = load i32, i32* %ex, align 4
  %32 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 1)
  %_54.0 = extractvalue { i32, i1 } %32, 0
  %_54.1 = extractvalue { i32, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %33, label %panic18, label %bb26

bb28:                                             ; preds = %bb24
  %_58 = load i32, i32* %ex, align 4
  %_59 = icmp eq i32 %_58, -2147483648
  %34 = call i1 @llvm.expect.i1(i1 %_59, i1 false)
  br i1 %34, label %panic, label %bb29

bb29:                                             ; preds = %bb28
  %_57 = sub i32 0, %_58
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_57, i32 1)
  %_60.0 = extractvalue { i32, i1 } %35, 0
  %_60.1 = extractvalue { i32, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false)
  br i1 %36, label %panic1, label %bb30

panic:                                            ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2288 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  %37 = load i64, i64* %uxi, align 8
  %38 = and i32 %_60.0, -64
  %_61.1 = icmp ne i32 %38, 0
  %39 = zext i32 %_60.0 to i64
  %40 = and i64 %39, 63
  %_61.0 = shl i64 %37, %40
  %41 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false)
  br i1 %41, label %panic2, label %bb31

panic1:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2288 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i64 %_61.0, i64* %uxi, align 8
  br label %bb32

panic2:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2290 to %"core::panic::location::Location"*)) #11
  unreachable

bb33:                                             ; preds = %bb32
  %_65 = load i64, i64* %uy, align 8
  %_66.0 = shl i64 %_65, 12
  br label %bb34

bb44:                                             ; preds = %bb32
  %42 = load i64, i64* %uy, align 8
  %43 = and i64 %42, 4503599627370495
  store i64 %43, i64* %uy, align 8
  %44 = load i64, i64* %uy, align 8
  %45 = or i64 %44, 4503599627370496
  store i64 %45, i64* %uy, align 8
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  store i32 0, i32* %q, align 4
  %_82 = load i32, i32* %ex, align 4
  %46 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_82, i32 1)
  %_83.0 = extractvalue { i32, i1 } %46, 0
  %_83.1 = extractvalue { i32, i1 } %46, 1
  %47 = call i1 @llvm.expect.i1(i1 %_83.1, i1 false)
  br i1 %47, label %panic6, label %bb46

bb34:                                             ; preds = %bb33
  store i64 %_66.0, i64* %i, align 8
  br label %bb35

bb35:                                             ; preds = %bb39, %bb34
  %_68 = load i64, i64* %i, align 8
  %_69.0 = lshr i64 %_68, 63
  br label %bb36

bb36:                                             ; preds = %bb35
  %48 = icmp eq i64 %_69.0, 0
  br i1 %48, label %bb37, label %bb40

bb37:                                             ; preds = %bb36
  %49 = load i32, i32* %ey, align 4
  %50 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 1)
  %_70.0 = extractvalue { i32, i1 } %50, 0
  %_70.1 = extractvalue { i32, i1 } %50, 1
  %51 = call i1 @llvm.expect.i1(i1 %_70.1, i1 false)
  br i1 %51, label %panic17, label %bb38

bb40:                                             ; preds = %bb36
  %_74 = load i32, i32* %ey, align 4
  %_75 = icmp eq i32 %_74, -2147483648
  %52 = call i1 @llvm.expect.i1(i1 %_75, i1 false)
  br i1 %52, label %panic3, label %bb41

bb41:                                             ; preds = %bb40
  %_73 = sub i32 0, %_74
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_73, i32 1)
  %_76.0 = extractvalue { i32, i1 } %53, 0
  %_76.1 = extractvalue { i32, i1 } %53, 1
  %54 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %54, label %panic4, label %bb42

panic3:                                           ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2292 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  %55 = load i64, i64* %uy, align 8
  %56 = and i32 %_76.0, -64
  %_77.1 = icmp ne i32 %56, 0
  %57 = zext i32 %_76.0 to i64
  %58 = and i64 %57, 63
  %_77.0 = shl i64 %55, %58
  %59 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false)
  br i1 %59, label %panic5, label %bb43

panic4:                                           ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2292 to %"core::panic::location::Location"*)) #11
  unreachable

bb43:                                             ; preds = %bb42
  store i64 %_77.0, i64* %uy, align 8
  br label %bb45

panic5:                                           ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2294 to %"core::panic::location::Location"*)) #11
  unreachable

bb46:                                             ; preds = %bb45
  %_84 = load i32, i32* %ey, align 4
  %_80 = icmp ne i32 %_83.0, %_84
  br i1 %_80, label %bb47, label %bb71

panic6:                                           ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2296 to %"core::panic::location::Location"*)) #11
  unreachable

bb71:                                             ; preds = %bb65, %bb67, %bb46
  %_118 = load i32, i32* %ex, align 4
  %_117 = icmp sgt i32 %_118, 0
  br i1 %_117, label %bb72, label %bb75

bb47:                                             ; preds = %bb46
  %_86 = load i32, i32* %ex, align 4
  %_87 = load i32, i32* %ey, align 4
  %_85 = icmp slt i32 %_86, %_87
  br i1 %_85, label %bb48, label %bb49

bb49:                                             ; preds = %bb58, %bb47
  %_90 = load i32, i32* %ex, align 4
  %_91 = load i32, i32* %ey, align 4
  %_89 = icmp sgt i32 %_90, %_91
  br i1 %_89, label %bb50, label %bb59

bb48:                                             ; preds = %bb47
  %_88 = load double, double* %x, align 8
  %60 = bitcast { double, i32 }* %2 to double*
  store double %_88, double* %60, align 8
  %61 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %61, align 8
  br label %bb105

bb59:                                             ; preds = %bb49
  %_104 = load i64, i64* %uxi, align 8
  %_105 = load i64, i64* %uy, align 8
  %62 = sub i64 %_104, %_105
  br label %bb60

bb50:                                             ; preds = %bb49
  %_93 = load i64, i64* %uxi, align 8
  %_94 = load i64, i64* %uy, align 8
  %63 = sub i64 %_93, %_94
  br label %bb51

bb51:                                             ; preds = %bb50
  store i64 %63, i64* %i, align 8
  %_96 = load i64, i64* %i, align 8
  %_97.0 = lshr i64 %_96, 63
  br label %bb52

bb52:                                             ; preds = %bb51
  %64 = icmp eq i64 %_97.0, 0
  br i1 %64, label %bb53, label %bb55

bb53:                                             ; preds = %bb52
  %_98 = load i64, i64* %i, align 8
  store i64 %_98, i64* %uxi, align 8
  %65 = load i32, i32* %q, align 4
  %66 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %65, i32 1)
  %_99.0 = extractvalue { i32, i1 } %66, 0
  %_99.1 = extractvalue { i32, i1 } %66, 1
  %67 = call i1 @llvm.expect.i1(i1 %_99.1, i1 false)
  br i1 %67, label %panic7, label %bb54

bb55:                                             ; preds = %bb54, %bb52
  %68 = load i64, i64* %uxi, align 8
  %_100.0 = shl i64 %68, 1
  br label %bb56

bb54:                                             ; preds = %bb53
  store i32 %_99.0, i32* %q, align 4
  br label %bb55

panic7:                                           ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2298 to %"core::panic::location::Location"*)) #11
  unreachable

bb56:                                             ; preds = %bb55
  store i64 %_100.0, i64* %uxi, align 8
  %69 = load i32, i32* %q, align 4
  %_101.0 = shl i32 %69, 1
  br label %bb57

bb57:                                             ; preds = %bb56
  store i32 %_101.0, i32* %q, align 4
  %70 = load i32, i32* %ex, align 4
  %71 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 1)
  %_102.0 = extractvalue { i32, i1 } %71, 0
  %_102.1 = extractvalue { i32, i1 } %71, 1
  %72 = call i1 @llvm.expect.i1(i1 %_102.1, i1 false)
  br i1 %72, label %panic8, label %bb58

bb58:                                             ; preds = %bb57
  store i32 %_102.0, i32* %ex, align 4
  br label %bb49

panic8:                                           ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2300 to %"core::panic::location::Location"*)) #11
  unreachable

bb60:                                             ; preds = %bb59
  store i64 %62, i64* %i, align 8
  %_107 = load i64, i64* %i, align 8
  %_108.0 = lshr i64 %_107, 63
  br label %bb61

bb61:                                             ; preds = %bb60
  %73 = icmp eq i64 %_108.0, 0
  br i1 %73, label %bb62, label %bb64

bb62:                                             ; preds = %bb61
  %_109 = load i64, i64* %i, align 8
  store i64 %_109, i64* %uxi, align 8
  %74 = load i32, i32* %q, align 4
  %75 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %74, i32 1)
  %_110.0 = extractvalue { i32, i1 } %75, 0
  %_110.1 = extractvalue { i32, i1 } %75, 1
  %76 = call i1 @llvm.expect.i1(i1 %_110.1, i1 false)
  br i1 %76, label %panic9, label %bb63

bb64:                                             ; preds = %bb63, %bb61
  %_111 = load i64, i64* %uxi, align 8
  %77 = icmp eq i64 %_111, 0
  br i1 %77, label %bb65, label %bb66

bb63:                                             ; preds = %bb62
  store i32 %_110.0, i32* %q, align 4
  br label %bb64

panic9:                                           ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2302 to %"core::panic::location::Location"*)) #11
  unreachable

bb65:                                             ; preds = %bb64
  store i32 -60, i32* %ex, align 4
  br label %bb71

bb66:                                             ; preds = %bb70, %bb64
  %_113 = load i64, i64* %uxi, align 8
  %_114.0 = lshr i64 %_113, 52
  br label %bb67

bb67:                                             ; preds = %bb66
  %78 = icmp eq i64 %_114.0, 0
  br i1 %78, label %bb68, label %bb71

bb68:                                             ; preds = %bb67
  %79 = load i64, i64* %uxi, align 8
  %_115.0 = shl i64 %79, 1
  br label %bb69

bb69:                                             ; preds = %bb68
  store i64 %_115.0, i64* %uxi, align 8
  %80 = load i32, i32* %ex, align 4
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %80, i32 1)
  %_116.0 = extractvalue { i32, i1 } %81, 0
  %_116.1 = extractvalue { i32, i1 } %81, 1
  %82 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false)
  br i1 %82, label %panic10, label %bb70

bb70:                                             ; preds = %bb69
  store i32 %_116.0, i32* %ex, align 4
  br label %bb66

panic10:                                          ; preds = %bb69
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2304 to %"core::panic::location::Location"*)) #11
  unreachable

bb75:                                             ; preds = %bb71
  %_127 = load i32, i32* %ex, align 4
  %_128 = icmp eq i32 %_127, -2147483648
  %83 = call i1 @llvm.expect.i1(i1 %_128, i1 false)
  br i1 %83, label %panic12, label %bb76

bb72:                                             ; preds = %bb71
  %84 = load i64, i64* %uxi, align 8
  %85 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %84, i64 4503599627370496)
  %_120.0 = extractvalue { i64, i1 } %85, 0
  %_120.1 = extractvalue { i64, i1 } %85, 1
  %86 = call i1 @llvm.expect.i1(i1 %_120.1, i1 false)
  br i1 %86, label %panic11, label %bb73

bb73:                                             ; preds = %bb72
  store i64 %_120.0, i64* %uxi, align 8
  %_123 = load i32, i32* %ex, align 4
  %_122 = sext i32 %_123 to i64
  %_124.0 = shl i64 %_122, 52
  br label %bb74

panic11:                                          ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2306 to %"core::panic::location::Location"*)) #11
  unreachable

bb74:                                             ; preds = %bb73
  %87 = load i64, i64* %uxi, align 8
  %88 = or i64 %87, %_124.0
  store i64 %88, i64* %uxi, align 8
  br label %bb79

bb79:                                             ; preds = %bb78, %bb74
  %_132 = load i64, i64* %uxi, align 8
; call core::f64::<impl f64>::from_bits
  %_131 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_132)
  br label %bb80

bb76:                                             ; preds = %bb75
  %_126 = sub i32 0, %_127
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_126, i32 1)
  %_129.0 = extractvalue { i32, i1 } %89, 0
  %_129.1 = extractvalue { i32, i1 } %89, 1
  %90 = call i1 @llvm.expect.i1(i1 %_129.1, i1 false)
  br i1 %90, label %panic13, label %bb77

panic12:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2308 to %"core::panic::location::Location"*)) #11
  unreachable

bb77:                                             ; preds = %bb76
  %91 = load i64, i64* %uxi, align 8
  %92 = and i32 %_129.0, -64
  %_130.1 = icmp ne i32 %92, 0
  %93 = zext i32 %_129.0 to i64
  %94 = and i64 %93, 63
  %_130.0 = lshr i64 %91, %94
  %95 = call i1 @llvm.expect.i1(i1 %_130.1, i1 false)
  br i1 %95, label %panic14, label %bb78

panic13:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2308 to %"core::panic::location::Location"*)) #11
  unreachable

bb78:                                             ; preds = %bb77
  store i64 %_130.0, i64* %uxi, align 8
  br label %bb79

panic14:                                          ; preds = %bb77
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2310 to %"core::panic::location::Location"*)) #11
  unreachable

bb80:                                             ; preds = %bb79
  store double %_131, double* %x, align 8
  br i1 %sy, label %bb81, label %bb82

bb82:                                             ; preds = %bb81, %bb80
  %_137 = load i32, i32* %ex, align 4
  %_138 = load i32, i32* %ey, align 4
  %_136 = icmp eq i32 %_137, %_138
  br i1 %_136, label %bb83, label %bb84

bb81:                                             ; preds = %bb80
  %_134 = load double, double* %y, align 8
  %96 = fneg double %_134
  store double %96, double* %y, align 8
  br label %bb82

bb84:                                             ; preds = %bb82
  %_142 = load i32, i32* %ex, align 4
  %97 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_142, i32 1)
  %_143.0 = extractvalue { i32, i1 } %97, 0
  %_143.1 = extractvalue { i32, i1 } %97, 1
  %98 = call i1 @llvm.expect.i1(i1 %_143.1, i1 false)
  br i1 %98, label %panic15, label %bb89

bb83:                                             ; preds = %bb82
  store i8 1, i8* %_135, align 1
  br label %bb85

bb85:                                             ; preds = %bb88, %bb83
  %99 = load i8, i8* %_135, align 1, !range !3
  %100 = trunc i8 %99 to i1
  br i1 %100, label %bb96, label %bb98

bb89:                                             ; preds = %bb84
  %_144 = load i32, i32* %ey, align 4
  %_140 = icmp eq i32 %_143.0, %_144
  br i1 %_140, label %bb87, label %bb86

panic15:                                          ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2312 to %"core::panic::location::Location"*)) #11
  unreachable

bb86:                                             ; preds = %bb89
  store i8 0, i8* %_139, align 1
  br label %bb88

bb87:                                             ; preds = %bb89
  %_148 = load double, double* %x, align 8
  %_147 = fmul double 2.000000e+00, %_148
  %_149 = load double, double* %y, align 8
  %_146 = fcmp ogt double %_147, %_149
  br i1 %_146, label %bb90, label %bb91

bb91:                                             ; preds = %bb87
  %_153 = load double, double* %x, align 8
  %_152 = fmul double 2.000000e+00, %_153
  %_154 = load double, double* %y, align 8
  %_151 = fcmp oeq double %_152, %_154
  br i1 %_151, label %bb94, label %bb93

bb90:                                             ; preds = %bb87
  store i8 1, i8* %_145, align 1
  br label %bb92

bb92:                                             ; preds = %bb95, %bb90
  %101 = load i8, i8* %_145, align 1, !range !3
  %102 = trunc i8 %101 to i1
  %103 = zext i1 %102 to i8
  store i8 %103, i8* %_139, align 1
  br label %bb88

bb93:                                             ; preds = %bb91
  store i8 0, i8* %_150, align 1
  br label %bb95

bb94:                                             ; preds = %bb91
  %_157 = load i32, i32* %q, align 4
  %_156 = urem i32 %_157, 2
  %_155 = icmp ne i32 %_156, 0
  %104 = zext i1 %_155 to i8
  store i8 %104, i8* %_150, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %105 = load i8, i8* %_150, align 1, !range !3
  %106 = trunc i8 %105 to i1
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %_145, align 1
  br label %bb92

bb88:                                             ; preds = %bb86, %bb92
  %108 = load i8, i8* %_139, align 1, !range !3
  %109 = trunc i8 %108 to i1
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %_135, align 1
  br label %bb85

bb98:                                             ; preds = %bb97, %bb85
  %111 = load i32, i32* %q, align 4
  %112 = and i32 %111, 2147483647
  store i32 %112, i32* %q, align 4
  %_162 = xor i1 %sx, %sy
  br i1 %_162, label %bb99, label %bb101

bb96:                                             ; preds = %bb85
  %_158 = load double, double* %y, align 8
  %113 = load double, double* %x, align 8
  %114 = fsub double %113, %_158
  store double %114, double* %x, align 8
  %_160 = load i32, i32* %q, align 4
  %115 = add i32 %_160, 1
  br label %bb97

bb97:                                             ; preds = %bb96
  store i32 %115, i32* %q, align 4
  br label %bb98

bb101:                                            ; preds = %bb98
  %_168 = load i32, i32* %q, align 4
  store i32 %_168, i32* %quo, align 4
  br label %bb102

bb99:                                             ; preds = %bb98
  %_166 = load i32, i32* %q, align 4
  %_167 = icmp eq i32 %_166, -2147483648
  %116 = call i1 @llvm.expect.i1(i1 %_167, i1 false)
  br i1 %116, label %panic16, label %bb100

bb100:                                            ; preds = %bb99
  %117 = sub i32 0, %_166
  store i32 %117, i32* %quo, align 4
  br label %bb102

panic16:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2314 to %"core::panic::location::Location"*)) #11
  unreachable

bb102:                                            ; preds = %bb101, %bb100
  br i1 %sx, label %bb103, label %bb104

bb104:                                            ; preds = %bb102
  %_173 = load double, double* %x, align 8
  %_174 = load i32, i32* %quo, align 4
  %118 = bitcast { double, i32 }* %2 to double*
  store double %_173, double* %118, align 8
  %119 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  store i32 %_174, i32* %119, align 8
  br label %bb105

bb103:                                            ; preds = %bb102
  %_171 = load double, double* %x, align 8
  %_170 = fneg double %_171
  %_172 = load i32, i32* %quo, align 4
  %120 = bitcast { double, i32 }* %2 to double*
  store double %_170, double* %120, align 8
  %121 = getelementptr inbounds { double, i32 }, { double, i32 }* %2, i32 0, i32 1
  store i32 %_172, i32* %121, align 8
  br label %bb105

bb38:                                             ; preds = %bb37
  store i32 %_70.0, i32* %ey, align 4
  %122 = load i64, i64* %i, align 8
  %_71.0 = shl i64 %122, 1
  br label %bb39

panic17:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2316 to %"core::panic::location::Location"*)) #11
  unreachable

bb39:                                             ; preds = %bb38
  store i64 %_71.0, i64* %i, align 8
  br label %bb35

bb26:                                             ; preds = %bb25
  store i32 %_54.0, i32* %ex, align 4
  %123 = load i64, i64* %i, align 8
  %_55.0 = shl i64 %123, 1
  br label %bb27

panic18:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2318 to %"core::panic::location::Location"*)) #11
  unreachable

bb27:                                             ; preds = %bb26
  store i64 %_55.0, i64* %i, align 8
  br label %bb23
}

; libm::math::remquof::remquof
; Function Attrs: nonlazybind uwtable
define { float, i32 } @_ZN4libm4math7remquof7remquof17h3f2eb8736295034fE(float %0, float %1) unnamed_addr #1 {
start:
  %quo = alloca i32, align 4
  %_150 = alloca i8, align 1
  %_145 = alloca i8, align 1
  %_139 = alloca i8, align 1
  %_135 = alloca i8, align 1
  %_29 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %uxi = alloca i32, align 4
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %ey = alloca i32, align 4
  %ex = alloca i32, align 4
  %uy = alloca i32, align 4
  %2 = alloca { float, i32 }, align 4
  %y = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  store float %1, float* %y, align 4
  %_4 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %ux = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = load float, float* %y, align 4
; call core::f32::<impl f32>::to_bits
  %3 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_6)
  store i32 %3, i32* %uy, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11.0 = lshr i32 %ux, 23
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i32 %_11.0, 255
  store i32 %_8, i32* %ex, align 4
  %_15 = load i32, i32* %uy, align 4
  %_16.0 = lshr i32 %_15, 23
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = and i32 %_16.0, 255
  store i32 %_13, i32* %ey, align 4
  %_20.0 = lshr i32 %ux, 31
  br label %bb5

bb5:                                              ; preds = %bb4
  %sx = icmp ne i32 %_20.0, 0
  %_23 = load i32, i32* %uy, align 4
  %_24.0 = lshr i32 %_23, 31
  br label %bb6

bb6:                                              ; preds = %bb5
  %sy = icmp ne i32 %_24.0, 0
  store i32 %ux, i32* %uxi, align 4
  %_31 = load i32, i32* %uy, align 4
  %_32.0 = shl i32 %_31, 1
  br label %bb13

bb13:                                             ; preds = %bb6
  %4 = icmp eq i32 %_32.0, 0
  br i1 %4, label %bb10, label %bb11

bb10:                                             ; preds = %bb13
  store i8 1, i8* %_29, align 1
  br label %bb12

bb11:                                             ; preds = %bb13
  %_34 = load float, float* %y, align 4
; call core::f32::<impl f32>::is_nan
  %_33 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$6is_nan17h37845c7947ccde55E"(float %_34)
  br label %bb14

bb14:                                             ; preds = %bb11
  %5 = zext i1 %_33 to i8
  store i8 %5, i8* %_29, align 1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb14
  %6 = load i8, i8* %_29, align 1, !range !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb7, label %bb8

bb8:                                              ; preds = %bb12
  %_36 = load i32, i32* %ex, align 4
  %_35 = icmp eq i32 %_36, 255
  %8 = zext i1 %_35 to i8
  store i8 %8, i8* %_28, align 1
  br label %bb9

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_28, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %9 = load i8, i8* %_28, align 1, !range !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb15, label %bb16

bb16:                                             ; preds = %bb9
  %_46.0 = shl i32 %ux, 1
  br label %bb17

bb15:                                             ; preds = %bb9
  %_39 = load float, float* %x, align 4
  %_40 = load float, float* %y, align 4
  %_38 = fmul float %_39, %_40
  %_42 = load float, float* %x, align 4
  %_43 = load float, float* %y, align 4
  %_41 = fmul float %_42, %_43
  %_37 = fdiv float %_38, %_41
  %11 = bitcast { float, i32 }* %2 to float*
  store float %_37, float* %11, align 4
  %12 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %12, align 4
  br label %bb105

bb105:                                            ; preds = %bb18, %bb104, %bb103, %bb48, %bb15
  %13 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = insertvalue { float, i32 } undef, float %14, 0
  %18 = insertvalue { float, i32 } %17, i32 %16, 1
  ret { float, i32 } %18

bb17:                                             ; preds = %bb16
  %19 = icmp eq i32 %_46.0, 0
  br i1 %19, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %_47 = load float, float* %x, align 4
  %20 = bitcast { float, i32 }* %2 to float*
  store float %_47, float* %20, align 4
  %21 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %21, align 4
  br label %bb105

bb19:                                             ; preds = %bb17
  %_48 = load i32, i32* %ex, align 4
  %22 = icmp eq i32 %_48, 0
  br i1 %22, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %_49 = load i32, i32* %uxi, align 4
  %_50.0 = shl i32 %_49, 9
  br label %bb22

bb21:                                             ; preds = %bb19
  %23 = load i32, i32* %uxi, align 4
  %24 = and i32 %23, 8388607
  store i32 %24, i32* %uxi, align 4
  %25 = load i32, i32* %uxi, align 4
  %26 = or i32 %25, 8388608
  store i32 %26, i32* %uxi, align 4
  br label %bb32

bb32:                                             ; preds = %bb31, %bb21
  %_64 = load i32, i32* %ey, align 4
  %27 = icmp eq i32 %_64, 0
  br i1 %27, label %bb33, label %bb44

bb22:                                             ; preds = %bb20
  store i32 %_50.0, i32* %i, align 4
  br label %bb23

bb23:                                             ; preds = %bb27, %bb22
  %_52 = load i32, i32* %i, align 4
  %_53.0 = lshr i32 %_52, 31
  br label %bb24

bb24:                                             ; preds = %bb23
  %28 = icmp eq i32 %_53.0, 0
  br i1 %28, label %bb25, label %bb28

bb25:                                             ; preds = %bb24
  %29 = load i32, i32* %ex, align 4
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %29, i32 1)
  %_54.0 = extractvalue { i32, i1 } %30, 0
  %_54.1 = extractvalue { i32, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false)
  br i1 %31, label %panic19, label %bb26

bb28:                                             ; preds = %bb24
  %_58 = load i32, i32* %ex, align 4
  %_59 = icmp eq i32 %_58, -2147483648
  %32 = call i1 @llvm.expect.i1(i1 %_59, i1 false)
  br i1 %32, label %panic, label %bb29

bb29:                                             ; preds = %bb28
  %_57 = sub i32 0, %_58
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_57, i32 1)
  %_60.0 = extractvalue { i32, i1 } %33, 0
  %_60.1 = extractvalue { i32, i1 } %33, 1
  %34 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false)
  br i1 %34, label %panic1, label %bb30

panic:                                            ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2320 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb29
  %35 = load i32, i32* %uxi, align 4
  %36 = and i32 %_60.0, -32
  %_61.1 = icmp ne i32 %36, 0
  %37 = and i32 %_60.0, 31
  %_61.0 = shl i32 %35, %37
  %38 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false)
  br i1 %38, label %panic2, label %bb31

panic1:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2320 to %"core::panic::location::Location"*)) #11
  unreachable

bb31:                                             ; preds = %bb30
  store i32 %_61.0, i32* %uxi, align 4
  br label %bb32

panic2:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2322 to %"core::panic::location::Location"*)) #11
  unreachable

bb33:                                             ; preds = %bb32
  %_65 = load i32, i32* %uy, align 4
  %_66.0 = shl i32 %_65, 9
  br label %bb34

bb44:                                             ; preds = %bb32
  %39 = load i32, i32* %uy, align 4
  %40 = and i32 %39, 8388607
  store i32 %40, i32* %uy, align 4
  %41 = load i32, i32* %uy, align 4
  %42 = or i32 %41, 8388608
  store i32 %42, i32* %uy, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  store i32 0, i32* %q, align 4
  %_82 = load i32, i32* %ex, align 4
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_82, i32 1)
  %_83.0 = extractvalue { i32, i1 } %43, 0
  %_83.1 = extractvalue { i32, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_83.1, i1 false)
  br i1 %44, label %panic6, label %bb46

bb34:                                             ; preds = %bb33
  store i32 %_66.0, i32* %i, align 4
  br label %bb35

bb35:                                             ; preds = %bb39, %bb34
  %_68 = load i32, i32* %i, align 4
  %_69.0 = lshr i32 %_68, 31
  br label %bb36

bb36:                                             ; preds = %bb35
  %45 = icmp eq i32 %_69.0, 0
  br i1 %45, label %bb37, label %bb40

bb37:                                             ; preds = %bb36
  %46 = load i32, i32* %ey, align 4
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 1)
  %_70.0 = extractvalue { i32, i1 } %47, 0
  %_70.1 = extractvalue { i32, i1 } %47, 1
  %48 = call i1 @llvm.expect.i1(i1 %_70.1, i1 false)
  br i1 %48, label %panic18, label %bb38

bb40:                                             ; preds = %bb36
  %_74 = load i32, i32* %ey, align 4
  %_75 = icmp eq i32 %_74, -2147483648
  %49 = call i1 @llvm.expect.i1(i1 %_75, i1 false)
  br i1 %49, label %panic3, label %bb41

bb41:                                             ; preds = %bb40
  %_73 = sub i32 0, %_74
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_73, i32 1)
  %_76.0 = extractvalue { i32, i1 } %50, 0
  %_76.1 = extractvalue { i32, i1 } %50, 1
  %51 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %51, label %panic4, label %bb42

panic3:                                           ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2324 to %"core::panic::location::Location"*)) #11
  unreachable

bb42:                                             ; preds = %bb41
  %52 = load i32, i32* %uy, align 4
  %53 = and i32 %_76.0, -32
  %_77.1 = icmp ne i32 %53, 0
  %54 = and i32 %_76.0, 31
  %_77.0 = shl i32 %52, %54
  %55 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false)
  br i1 %55, label %panic5, label %bb43

panic4:                                           ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2324 to %"core::panic::location::Location"*)) #11
  unreachable

bb43:                                             ; preds = %bb42
  store i32 %_77.0, i32* %uy, align 4
  br label %bb45

panic5:                                           ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2326 to %"core::panic::location::Location"*)) #11
  unreachable

bb46:                                             ; preds = %bb45
  %_84 = load i32, i32* %ey, align 4
  %_80 = icmp ne i32 %_83.0, %_84
  br i1 %_80, label %bb47, label %bb71

panic6:                                           ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2328 to %"core::panic::location::Location"*)) #11
  unreachable

bb71:                                             ; preds = %bb65, %bb67, %bb46
  %_118 = load i32, i32* %ex, align 4
  %_117 = icmp sgt i32 %_118, 0
  br i1 %_117, label %bb72, label %bb75

bb47:                                             ; preds = %bb46
  %_86 = load i32, i32* %ex, align 4
  %_87 = load i32, i32* %ey, align 4
  %_85 = icmp slt i32 %_86, %_87
  br i1 %_85, label %bb48, label %bb49

bb49:                                             ; preds = %bb58, %bb47
  %_90 = load i32, i32* %ex, align 4
  %_91 = load i32, i32* %ey, align 4
  %_89 = icmp sgt i32 %_90, %_91
  br i1 %_89, label %bb50, label %bb59

bb48:                                             ; preds = %bb47
  %_88 = load float, float* %x, align 4
  %56 = bitcast { float, i32 }* %2 to float*
  store float %_88, float* %56, align 4
  %57 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  store i32 0, i32* %57, align 4
  br label %bb105

bb59:                                             ; preds = %bb49
  %_104 = load i32, i32* %uxi, align 4
  %_105 = load i32, i32* %uy, align 4
  %58 = sub i32 %_104, %_105
  br label %bb60

bb50:                                             ; preds = %bb49
  %_93 = load i32, i32* %uxi, align 4
  %_94 = load i32, i32* %uy, align 4
  %59 = sub i32 %_93, %_94
  br label %bb51

bb51:                                             ; preds = %bb50
  store i32 %59, i32* %i, align 4
  %_96 = load i32, i32* %i, align 4
  %_97.0 = lshr i32 %_96, 31
  br label %bb52

bb52:                                             ; preds = %bb51
  %60 = icmp eq i32 %_97.0, 0
  br i1 %60, label %bb53, label %bb55

bb53:                                             ; preds = %bb52
  %_98 = load i32, i32* %i, align 4
  store i32 %_98, i32* %uxi, align 4
  %61 = load i32, i32* %q, align 4
  %62 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %61, i32 1)
  %_99.0 = extractvalue { i32, i1 } %62, 0
  %_99.1 = extractvalue { i32, i1 } %62, 1
  %63 = call i1 @llvm.expect.i1(i1 %_99.1, i1 false)
  br i1 %63, label %panic7, label %bb54

bb55:                                             ; preds = %bb54, %bb52
  %64 = load i32, i32* %uxi, align 4
  %_100.0 = shl i32 %64, 1
  br label %bb56

bb54:                                             ; preds = %bb53
  store i32 %_99.0, i32* %q, align 4
  br label %bb55

panic7:                                           ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2330 to %"core::panic::location::Location"*)) #11
  unreachable

bb56:                                             ; preds = %bb55
  store i32 %_100.0, i32* %uxi, align 4
  %65 = load i32, i32* %q, align 4
  %_101.0 = shl i32 %65, 1
  br label %bb57

bb57:                                             ; preds = %bb56
  store i32 %_101.0, i32* %q, align 4
  %66 = load i32, i32* %ex, align 4
  %67 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 1)
  %_102.0 = extractvalue { i32, i1 } %67, 0
  %_102.1 = extractvalue { i32, i1 } %67, 1
  %68 = call i1 @llvm.expect.i1(i1 %_102.1, i1 false)
  br i1 %68, label %panic8, label %bb58

bb58:                                             ; preds = %bb57
  store i32 %_102.0, i32* %ex, align 4
  br label %bb49

panic8:                                           ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2332 to %"core::panic::location::Location"*)) #11
  unreachable

bb60:                                             ; preds = %bb59
  store i32 %58, i32* %i, align 4
  %_107 = load i32, i32* %i, align 4
  %_108.0 = lshr i32 %_107, 31
  br label %bb61

bb61:                                             ; preds = %bb60
  %69 = icmp eq i32 %_108.0, 0
  br i1 %69, label %bb62, label %bb64

bb62:                                             ; preds = %bb61
  %_109 = load i32, i32* %i, align 4
  store i32 %_109, i32* %uxi, align 4
  %70 = load i32, i32* %q, align 4
  %71 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %70, i32 1)
  %_110.0 = extractvalue { i32, i1 } %71, 0
  %_110.1 = extractvalue { i32, i1 } %71, 1
  %72 = call i1 @llvm.expect.i1(i1 %_110.1, i1 false)
  br i1 %72, label %panic9, label %bb63

bb64:                                             ; preds = %bb63, %bb61
  %_111 = load i32, i32* %uxi, align 4
  %73 = icmp eq i32 %_111, 0
  br i1 %73, label %bb65, label %bb66

bb63:                                             ; preds = %bb62
  store i32 %_110.0, i32* %q, align 4
  br label %bb64

panic9:                                           ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2334 to %"core::panic::location::Location"*)) #11
  unreachable

bb65:                                             ; preds = %bb64
  store i32 -30, i32* %ex, align 4
  br label %bb71

bb66:                                             ; preds = %bb70, %bb64
  %_113 = load i32, i32* %uxi, align 4
  %_114.0 = lshr i32 %_113, 23
  br label %bb67

bb67:                                             ; preds = %bb66
  %74 = icmp eq i32 %_114.0, 0
  br i1 %74, label %bb68, label %bb71

bb68:                                             ; preds = %bb67
  %75 = load i32, i32* %uxi, align 4
  %_115.0 = shl i32 %75, 1
  br label %bb69

bb69:                                             ; preds = %bb68
  store i32 %_115.0, i32* %uxi, align 4
  %76 = load i32, i32* %ex, align 4
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 1)
  %_116.0 = extractvalue { i32, i1 } %77, 0
  %_116.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false)
  br i1 %78, label %panic10, label %bb70

bb70:                                             ; preds = %bb69
  store i32 %_116.0, i32* %ex, align 4
  br label %bb66

panic10:                                          ; preds = %bb69
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2336 to %"core::panic::location::Location"*)) #11
  unreachable

bb75:                                             ; preds = %bb71
  %_127 = load i32, i32* %ex, align 4
  %_128 = icmp eq i32 %_127, -2147483648
  %79 = call i1 @llvm.expect.i1(i1 %_128, i1 false)
  br i1 %79, label %panic12, label %bb76

bb72:                                             ; preds = %bb71
  %80 = load i32, i32* %uxi, align 4
  %81 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %80, i32 8388608)
  %_120.0 = extractvalue { i32, i1 } %81, 0
  %_120.1 = extractvalue { i32, i1 } %81, 1
  %82 = call i1 @llvm.expect.i1(i1 %_120.1, i1 false)
  br i1 %82, label %panic11, label %bb73

bb73:                                             ; preds = %bb72
  store i32 %_120.0, i32* %uxi, align 4
  %_123 = load i32, i32* %ex, align 4
  %_124.0 = shl i32 %_123, 23
  br label %bb74

panic11:                                          ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2338 to %"core::panic::location::Location"*)) #11
  unreachable

bb74:                                             ; preds = %bb73
  %83 = load i32, i32* %uxi, align 4
  %84 = or i32 %83, %_124.0
  store i32 %84, i32* %uxi, align 4
  br label %bb79

bb79:                                             ; preds = %bb78, %bb74
  %_132 = load i32, i32* %uxi, align 4
; call core::f32::<impl f32>::from_bits
  %_131 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_132)
  br label %bb80

bb76:                                             ; preds = %bb75
  %_126 = sub i32 0, %_127
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_126, i32 1)
  %_129.0 = extractvalue { i32, i1 } %85, 0
  %_129.1 = extractvalue { i32, i1 } %85, 1
  %86 = call i1 @llvm.expect.i1(i1 %_129.1, i1 false)
  br i1 %86, label %panic13, label %bb77

panic12:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2340 to %"core::panic::location::Location"*)) #11
  unreachable

bb77:                                             ; preds = %bb76
  %87 = load i32, i32* %uxi, align 4
  %88 = and i32 %_129.0, -32
  %_130.1 = icmp ne i32 %88, 0
  %89 = and i32 %_129.0, 31
  %_130.0 = lshr i32 %87, %89
  %90 = call i1 @llvm.expect.i1(i1 %_130.1, i1 false)
  br i1 %90, label %panic14, label %bb78

panic13:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2340 to %"core::panic::location::Location"*)) #11
  unreachable

bb78:                                             ; preds = %bb77
  store i32 %_130.0, i32* %uxi, align 4
  br label %bb79

panic14:                                          ; preds = %bb77
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2342 to %"core::panic::location::Location"*)) #11
  unreachable

bb80:                                             ; preds = %bb79
  store float %_131, float* %x, align 4
  br i1 %sy, label %bb81, label %bb82

bb82:                                             ; preds = %bb81, %bb80
  %_137 = load i32, i32* %ex, align 4
  %_138 = load i32, i32* %ey, align 4
  %_136 = icmp eq i32 %_137, %_138
  br i1 %_136, label %bb83, label %bb84

bb81:                                             ; preds = %bb80
  %_134 = load float, float* %y, align 4
  %91 = fneg float %_134
  store float %91, float* %y, align 4
  br label %bb82

bb84:                                             ; preds = %bb82
  %_142 = load i32, i32* %ex, align 4
  %92 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_142, i32 1)
  %_143.0 = extractvalue { i32, i1 } %92, 0
  %_143.1 = extractvalue { i32, i1 } %92, 1
  %93 = call i1 @llvm.expect.i1(i1 %_143.1, i1 false)
  br i1 %93, label %panic15, label %bb89

bb83:                                             ; preds = %bb82
  store i8 1, i8* %_135, align 1
  br label %bb85

bb85:                                             ; preds = %bb88, %bb83
  %94 = load i8, i8* %_135, align 1, !range !3
  %95 = trunc i8 %94 to i1
  br i1 %95, label %bb96, label %bb98

bb89:                                             ; preds = %bb84
  %_144 = load i32, i32* %ey, align 4
  %_140 = icmp eq i32 %_143.0, %_144
  br i1 %_140, label %bb87, label %bb86

panic15:                                          ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2344 to %"core::panic::location::Location"*)) #11
  unreachable

bb86:                                             ; preds = %bb89
  store i8 0, i8* %_139, align 1
  br label %bb88

bb87:                                             ; preds = %bb89
  %_148 = load float, float* %x, align 4
  %_147 = fmul float 2.000000e+00, %_148
  %_149 = load float, float* %y, align 4
  %_146 = fcmp ogt float %_147, %_149
  br i1 %_146, label %bb90, label %bb91

bb91:                                             ; preds = %bb87
  %_153 = load float, float* %x, align 4
  %_152 = fmul float 2.000000e+00, %_153
  %_154 = load float, float* %y, align 4
  %_151 = fcmp oeq float %_152, %_154
  br i1 %_151, label %bb94, label %bb93

bb90:                                             ; preds = %bb87
  store i8 1, i8* %_145, align 1
  br label %bb92

bb92:                                             ; preds = %bb95, %bb90
  %96 = load i8, i8* %_145, align 1, !range !3
  %97 = trunc i8 %96 to i1
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %_139, align 1
  br label %bb88

bb93:                                             ; preds = %bb91
  store i8 0, i8* %_150, align 1
  br label %bb95

bb94:                                             ; preds = %bb91
  %_157 = load i32, i32* %q, align 4
  %_156 = urem i32 %_157, 2
  %_155 = icmp ne i32 %_156, 0
  %99 = zext i1 %_155 to i8
  store i8 %99, i8* %_150, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %100 = load i8, i8* %_150, align 1, !range !3
  %101 = trunc i8 %100 to i1
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %_145, align 1
  br label %bb92

bb88:                                             ; preds = %bb86, %bb92
  %103 = load i8, i8* %_139, align 1, !range !3
  %104 = trunc i8 %103 to i1
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %_135, align 1
  br label %bb85

bb98:                                             ; preds = %bb97, %bb85
  %106 = load i32, i32* %q, align 4
  %107 = and i32 %106, 2147483647
  store i32 %107, i32* %q, align 4
  %_161 = xor i1 %sx, %sy
  br i1 %_161, label %bb99, label %bb101

bb96:                                             ; preds = %bb85
  %_158 = load float, float* %y, align 4
  %108 = load float, float* %x, align 4
  %109 = fsub float %108, %_158
  store float %109, float* %x, align 4
  %110 = load i32, i32* %q, align 4
  %111 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %110, i32 1)
  %_159.0 = extractvalue { i32, i1 } %111, 0
  %_159.1 = extractvalue { i32, i1 } %111, 1
  %112 = call i1 @llvm.expect.i1(i1 %_159.1, i1 false)
  br i1 %112, label %panic16, label %bb97

bb97:                                             ; preds = %bb96
  store i32 %_159.0, i32* %q, align 4
  br label %bb98

panic16:                                          ; preds = %bb96
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2346 to %"core::panic::location::Location"*)) #11
  unreachable

bb101:                                            ; preds = %bb98
  %_167 = load i32, i32* %q, align 4
  store i32 %_167, i32* %quo, align 4
  br label %bb102

bb99:                                             ; preds = %bb98
  %_165 = load i32, i32* %q, align 4
  %_166 = icmp eq i32 %_165, -2147483648
  %113 = call i1 @llvm.expect.i1(i1 %_166, i1 false)
  br i1 %113, label %panic17, label %bb100

bb100:                                            ; preds = %bb99
  %114 = sub i32 0, %_165
  store i32 %114, i32* %quo, align 4
  br label %bb102

panic17:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2348 to %"core::panic::location::Location"*)) #11
  unreachable

bb102:                                            ; preds = %bb101, %bb100
  br i1 %sx, label %bb103, label %bb104

bb104:                                            ; preds = %bb102
  %_172 = load float, float* %x, align 4
  %_173 = load i32, i32* %quo, align 4
  %115 = bitcast { float, i32 }* %2 to float*
  store float %_172, float* %115, align 4
  %116 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  store i32 %_173, i32* %116, align 4
  br label %bb105

bb103:                                            ; preds = %bb102
  %_170 = load float, float* %x, align 4
  %_169 = fneg float %_170
  %_171 = load i32, i32* %quo, align 4
  %117 = bitcast { float, i32 }* %2 to float*
  store float %_169, float* %117, align 4
  %118 = getelementptr inbounds { float, i32 }, { float, i32 }* %2, i32 0, i32 1
  store i32 %_171, i32* %118, align 4
  br label %bb105

bb38:                                             ; preds = %bb37
  store i32 %_70.0, i32* %ey, align 4
  %119 = load i32, i32* %i, align 4
  %_71.0 = shl i32 %119, 1
  br label %bb39

panic18:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2350 to %"core::panic::location::Location"*)) #11
  unreachable

bb39:                                             ; preds = %bb38
  store i32 %_71.0, i32* %i, align 4
  br label %bb35

bb26:                                             ; preds = %bb25
  store i32 %_54.0, i32* %ex, align 4
  %120 = load i32, i32* %i, align 4
  %_55.0 = shl i32 %120, 1
  br label %bb27

panic19:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2352 to %"core::panic::location::Location"*)) #11
  unreachable

bb27:                                             ; preds = %bb26
  store i32 %_55.0, i32* %i, align 4
  br label %bb23
}

; libm::math::round::round
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5round5round17hf94956bfcd7790eeE(double %x) unnamed_addr #1 {
start:
; call libm::math::copysign::copysign
  %_4 = call double @_ZN4libm4math8copysign8copysign17hee0505a60840bb82E(double 0x3FDFFFFFFFFFFFFF, double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = fadd double %x, %_4
; call libm::math::trunc::trunc
  %0 = call double @_ZN4libm4math5trunc5trunc17h4ac36e39b4770ffbE(double %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %0
}

; libm::math::roundf::roundf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6roundf6roundf17hecc9bb373fec54acE(float %x) unnamed_addr #1 {
start:
; call libm::math::copysignf::copysignf
  %_4 = call float @_ZN4libm4math9copysignf9copysignf17h9477326a08759cf7E(float 0x3FDFFFFFE0000000, float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = fadd float %x, %_4
; call libm::math::truncf::truncf
  %0 = call float @_ZN4libm4math6truncf6truncf17h9a546d48014e2929E(float %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret float %0
}

; libm::math::scalbn::scalbn
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %x, i32 %0) unnamed_addr #1 {
start:
  %y = alloca double, align 8
  %n = alloca i32, align 4
  store i32 %0, i32* %n, align 4
; call core::f64::<impl f64>::from_bits
  %x1p1023 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %x1p53 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4845873199050653696)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::f64::<impl f64>::from_bits
  %x1p_1022 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4503599627370496)
  br label %bb3

bb3:                                              ; preds = %bb2
  store double %x, double* %y, align 8
  %_8 = load i32, i32* %n, align 4
  %_7 = icmp sgt i32 %_8, 1023
  br i1 %_7, label %bb4, label %bb9

bb9:                                              ; preds = %bb3
  %_18 = load i32, i32* %n, align 4
  %_17 = icmp slt i32 %_18, -1022
  br i1 %_17, label %bb10, label %bb15

bb4:                                              ; preds = %bb3
  %1 = load double, double* %y, align 8
  %2 = fmul double %1, %x1p1023
  store double %2, double* %y, align 8
  %3 = load i32, i32* %n, align 4
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 1023)
  %_10.0 = extractvalue { i32, i1 } %4, 0
  %_10.1 = extractvalue { i32, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %5, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i32 %_10.0, i32* %n, align 4
  %_12 = load i32, i32* %n, align 4
  %_11 = icmp sgt i32 %_12, 1023
  br i1 %_11, label %bb6, label %bb15

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2354 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14, %bb13, %bb11, %bb9, %bb8, %bb7, %bb5
  %_33 = load double, double* %y, align 8
  %_38 = load i32, i32* %n, align 4
  %6 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 1023, i32 %_38)
  %_39.0 = extractvalue { i32, i1 } %6, 0
  %_39.1 = extractvalue { i32, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false)
  br i1 %7, label %panic4, label %bb16

bb6:                                              ; preds = %bb5
  %8 = load double, double* %y, align 8
  %9 = fmul double %8, %x1p1023
  store double %9, double* %y, align 8
  %10 = load i32, i32* %n, align 4
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 1023)
  %_14.0 = extractvalue { i32, i1 } %11, 0
  %_14.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %12, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_14.0, i32* %n, align 4
  %_16 = load i32, i32* %n, align 4
  %_15 = icmp sgt i32 %_16, 1023
  br i1 %_15, label %bb8, label %bb15

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2356 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb7
  store i32 1023, i32* %n, align 4
  br label %bb15

bb10:                                             ; preds = %bb9
  %_19 = fmul double %x1p_1022, %x1p53
  %13 = load double, double* %y, align 8
  %14 = fmul double %13, %_19
  store double %14, double* %y, align 8
  %15 = load i32, i32* %n, align 4
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 969)
  %_23.0 = extractvalue { i32, i1 } %16, 0
  %_23.1 = extractvalue { i32, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %17, label %panic2, label %bb11

bb11:                                             ; preds = %bb10
  store i32 %_23.0, i32* %n, align 4
  %_25 = load i32, i32* %n, align 4
  %_24 = icmp slt i32 %_25, -1022
  br i1 %_24, label %bb12, label %bb15

panic2:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2358 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  %_26 = fmul double %x1p_1022, %x1p53
  %18 = load double, double* %y, align 8
  %19 = fmul double %18, %_26
  store double %19, double* %y, align 8
  %20 = load i32, i32* %n, align 4
  %21 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 969)
  %_30.0 = extractvalue { i32, i1 } %21, 0
  %_30.1 = extractvalue { i32, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %22, label %panic3, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_30.0, i32* %n, align 4
  %_32 = load i32, i32* %n, align 4
  %_31 = icmp slt i32 %_32, -1022
  br i1 %_31, label %bb14, label %bb15

panic3:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2360 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13
  store i32 -1022, i32* %n, align 4
  br label %bb15

bb16:                                             ; preds = %bb15
  %_36 = sext i32 %_39.0 to i64
  %_40.0 = shl i64 %_36, 52
  br label %bb17

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2362 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
; call core::f64::<impl f64>::from_bits
  %_34 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_40.0)
  br label %bb18

bb18:                                             ; preds = %bb17
  %23 = fmul double %_33, %_34
  ret double %23
}

; libm::math::scalbnf::scalbnf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math7scalbnf7scalbnf17h465599e40fffdd16E(float %0, i32 %1) unnamed_addr #1 {
start:
  %n = alloca i32, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  store i32 %1, i32* %n, align 4
; call core::f32::<impl f32>::from_bits
  %x1p127 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2130706432)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::from_bits
  %x1p_126 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 8388608)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::f32::<impl f32>::from_bits
  %x1p24 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1266679808)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = load i32, i32* %n, align 4
  %_6 = icmp sgt i32 %_7, 127
  br i1 %_6, label %bb4, label %bb9

bb9:                                              ; preds = %bb3
  %_17 = load i32, i32* %n, align 4
  %_16 = icmp slt i32 %_17, -126
  br i1 %_16, label %bb10, label %bb15

bb4:                                              ; preds = %bb3
  %2 = load float, float* %x, align 4
  %3 = fmul float %2, %x1p127
  store float %3, float* %x, align 4
  %4 = load i32, i32* %n, align 4
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 127)
  %_9.0 = extractvalue { i32, i1 } %5, 0
  %_9.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false)
  br i1 %6, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i32 %_9.0, i32* %n, align 4
  %_11 = load i32, i32* %n, align 4
  %_10 = icmp sgt i32 %_11, 127
  br i1 %_10, label %bb6, label %bb15

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2364 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14, %bb13, %bb11, %bb9, %bb8, %bb7, %bb5
  %_32 = load float, float* %x, align 4
  %_37 = load i32, i32* %n, align 4
  %7 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 127, i32 %_37)
  %_38.0 = extractvalue { i32, i1 } %7, 0
  %_38.1 = extractvalue { i32, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %8, label %panic4, label %bb16

bb6:                                              ; preds = %bb5
  %9 = load float, float* %x, align 4
  %10 = fmul float %9, %x1p127
  store float %10, float* %x, align 4
  %11 = load i32, i32* %n, align 4
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 127)
  %_13.0 = extractvalue { i32, i1 } %12, 0
  %_13.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %13, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_13.0, i32* %n, align 4
  %_15 = load i32, i32* %n, align 4
  %_14 = icmp sgt i32 %_15, 127
  br i1 %_14, label %bb8, label %bb15

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2366 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb7
  store i32 127, i32* %n, align 4
  br label %bb15

bb10:                                             ; preds = %bb9
  %_18 = fmul float %x1p_126, %x1p24
  %14 = load float, float* %x, align 4
  %15 = fmul float %14, %_18
  store float %15, float* %x, align 4
  %16 = load i32, i32* %n, align 4
  %17 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 102)
  %_22.0 = extractvalue { i32, i1 } %17, 0
  %_22.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %18, label %panic2, label %bb11

bb11:                                             ; preds = %bb10
  store i32 %_22.0, i32* %n, align 4
  %_24 = load i32, i32* %n, align 4
  %_23 = icmp slt i32 %_24, -126
  br i1 %_23, label %bb12, label %bb15

panic2:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2368 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  %_25 = fmul float %x1p_126, %x1p24
  %19 = load float, float* %x, align 4
  %20 = fmul float %19, %_25
  store float %20, float* %x, align 4
  %21 = load i32, i32* %n, align 4
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 102)
  %_29.0 = extractvalue { i32, i1 } %22, 0
  %_29.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %23, label %panic3, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_29.0, i32* %n, align 4
  %_31 = load i32, i32* %n, align 4
  %_30 = icmp slt i32 %_31, -126
  br i1 %_30, label %bb14, label %bb15

panic3:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2370 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13
  store i32 -126, i32* %n, align 4
  br label %bb15

bb16:                                             ; preds = %bb15
  %_39.0 = shl i32 %_38.0, 23
  br label %bb17

panic4:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2372 to %"core::panic::location::Location"*)) #11
  unreachable

bb17:                                             ; preds = %bb16
; call core::f32::<impl f32>::from_bits
  %_33 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_39.0)
  br label %bb18

bb18:                                             ; preds = %bb17
  %24 = fmul float %_32, %_33
  ret float %24
}

; libm::math::sin::sin
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3sin3sin17h506546338efaf5caE(double %x) unnamed_addr #1 {
start:
  %_35 = alloca { double, i32, [1 x i32], double }, align 8
  %_24 = alloca double, align 8
  %_18 = alloca double, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 5147614374084476928)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %_6 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8.0 = lshr i64 %_6, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %_4 = trunc i64 %_8.0 to i32
  %ix = and i32 %_4, 2147483647
  %_9 = icmp ule i32 %ix, 1072243195
  br i1 %_9, label %bb4, label %bb10

bb10:                                             ; preds = %bb3
  %_28 = icmp uge i32 %ix, 2146435072
  br i1 %_28, label %bb11, label %bb12

bb4:                                              ; preds = %bb3
  %_11 = icmp ult i32 %ix, 1045430272
  br i1 %_11, label %bb5, label %bb9

bb9:                                              ; preds = %bb4
; call libm::math::k_sin::k_sin
  %1 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %x, double 0.000000e+00, i32 0)
  store double %1, double* %0, align 8
  br label %bb20

bb5:                                              ; preds = %bb4
  %_13 = icmp ult i32 %ix, 1048576
  br i1 %_13, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %2 = fadd double %x, %x1p120
  store double %2, double* %_24, align 8
; call core::ptr::read_volatile
  %_21 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_24)
  br label %bb8

bb6:                                              ; preds = %bb5
  %3 = fdiv double %x, %x1p120
  store double %3, double* %_18, align 8
; call core::ptr::read_volatile
  %_15 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_18)
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  store double %x, double* %0, align 8
  br label %bb20

bb20:                                             ; preds = %bb15, %bb16, %bb18, %bb19, %bb11, %bb9, %bb8
  %4 = load double, double* %0, align 8
  ret double %4

bb12:                                             ; preds = %bb10
; call libm::math::rem_pio2::rem_pio2
  call void @_ZN4libm4math8rem_pio28rem_pio217h9d712b10bce41dc7E({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %_35, double %x)
  br label %bb13

bb11:                                             ; preds = %bb10
  %5 = fsub double %x, %x
  store double %5, double* %0, align 8
  br label %bb20

bb13:                                             ; preds = %bb12
  %6 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_35, i32 0, i32 1
  %n = load i32, i32* %6, align 8
  %7 = bitcast { double, i32, [1 x i32], double }* %_35 to double*
  %y0 = load double, double* %7, align 8
  %8 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_35, i32 0, i32 3
  %y1 = load double, double* %8, align 8
  %_37 = and i32 %n, 3
  switch i32 %_37, label %bb14 [
    i32 0, label %bb15
    i32 1, label %bb16
    i32 2, label %bb17
  ]

bb14:                                             ; preds = %bb13
; call libm::math::k_cos::k_cos
  %_46 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %y0, double %y1)
  br label %bb19

bb15:                                             ; preds = %bb13
; call libm::math::k_sin::k_sin
  %9 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %y0, double %y1, i32 1)
  store double %9, double* %0, align 8
  br label %bb20

bb16:                                             ; preds = %bb13
; call libm::math::k_cos::k_cos
  %10 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %y0, double %y1)
  store double %10, double* %0, align 8
  br label %bb20

bb17:                                             ; preds = %bb13
; call libm::math::k_sin::k_sin
  %_43 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %y0, double %y1, i32 1)
  br label %bb18

bb19:                                             ; preds = %bb14
  %11 = fneg double %_46
  store double %11, double* %0, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  %12 = fneg double %_43
  store double %12, double* %0, align 8
  br label %bb20
}

; libm::math::sincos::sincos
; Function Attrs: nonlazybind uwtable
define { double, double } @_ZN4libm4math6sincos6sincos17h96914d6f7071dc97E(double %x) unnamed_addr #1 {
start:
  %_41 = alloca { double, i32, [1 x i32], double }, align 8
  %_23 = alloca double, align 8
  %_17 = alloca double, align 8
  %ix = alloca i32, align 4
  %0 = alloca { double, double }, align 8
; call libm::math::get_high_word
  %_5 = call i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_5, i32* %ix, align 4
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_8 = load i32, i32* %ix, align 4
  %_7 = icmp ule i32 %_8, 1072243195
  br i1 %_7, label %bb2, label %bb11

bb11:                                             ; preds = %bb1
  %_32 = load i32, i32* %ix, align 4
  %_31 = icmp uge i32 %_32, 2146435072
  br i1 %_31, label %bb12, label %bb13

bb2:                                              ; preds = %bb1
  %_10 = load i32, i32* %ix, align 4
  %_9 = icmp ult i32 %_10, 1044816030
  br i1 %_9, label %bb3, label %bb8

bb8:                                              ; preds = %bb2
; call libm::math::k_sin::k_sin
  %_27 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %x, double 0.000000e+00, i32 0)
  br label %bb9

bb3:                                              ; preds = %bb2
; call core::f64::<impl f64>::from_bits
  %x1p120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 5147614374084476928)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = load i32, i32* %ix, align 4
  %_12 = icmp ult i32 %_13, 1048576
  br i1 %_12, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %3 = fadd double %x, %x1p120
  store double %3, double* %_23, align 8
; call core::ptr::read_volatile
  %_20 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_23)
  br label %bb7

bb5:                                              ; preds = %bb4
  %4 = fdiv double %x, %x1p120
  store double %4, double* %_17, align 8
; call core::ptr::read_volatile
  %_14 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_17)
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = bitcast { double, double }* %0 to double*
  store double %x, double* %5, align 8
  %6 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double 1.000000e+00, double* %6, align 8
  br label %bb22

bb22:                                             ; preds = %bb18, %bb19, %bb20, %bb21, %bb12, %bb10, %bb7
  %7 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  %10 = load double, double* %9, align 8
  %11 = insertvalue { double, double } undef, double %8, 0
  %12 = insertvalue { double, double } %11, double %10, 1
  ret { double, double } %12

bb9:                                              ; preds = %bb8
; call libm::math::k_cos::k_cos
  %_29 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %x, double 0.000000e+00)
  br label %bb10

bb10:                                             ; preds = %bb9
  %13 = bitcast { double, double }* %0 to double*
  store double %_27, double* %13, align 8
  %14 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_29, double* %14, align 8
  br label %bb22

bb13:                                             ; preds = %bb11
; call libm::math::rem_pio2::rem_pio2
  call void @_ZN4libm4math8rem_pio28rem_pio217h9d712b10bce41dc7E({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %_41, double %x)
  br label %bb14

bb12:                                             ; preds = %bb11
  %rv = fsub double %x, %x
  %15 = bitcast { double, double }* %0 to double*
  store double %rv, double* %15, align 8
  %16 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %rv, double* %16, align 8
  br label %bb22

bb14:                                             ; preds = %bb13
  %17 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_41, i32 0, i32 1
  %n = load i32, i32* %17, align 8
  %18 = bitcast { double, i32, [1 x i32], double }* %_41 to double*
  %y0 = load double, double* %18, align 8
  %19 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_41, i32 0, i32 3
  %y1 = load double, double* %19, align 8
; call libm::math::k_sin::k_sin
  %_43 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %y0, double %y1, i32 1)
  br label %bb15

bb15:                                             ; preds = %bb14
; call libm::math::k_cos::k_cos
  %_46 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %y0, double %y1)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_49 = and i32 %n, 3
  switch i32 %_49, label %bb17 [
    i32 0, label %bb18
    i32 1, label %bb19
    i32 2, label %bb20
    i32 3, label %bb21
  ]

bb17:                                             ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2589 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2375 to %"core::panic::location::Location"*)) #11
  unreachable

bb18:                                             ; preds = %bb16
  %20 = bitcast { double, double }* %0 to double*
  store double %_43, double* %20, align 8
  %21 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_46, double* %21, align 8
  br label %bb22

bb19:                                             ; preds = %bb16
  %_54 = fneg double %_43
  %22 = bitcast { double, double }* %0 to double*
  store double %_46, double* %22, align 8
  %23 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_54, double* %23, align 8
  br label %bb22

bb20:                                             ; preds = %bb16
  %_56 = fneg double %_43
  %_58 = fneg double %_46
  %24 = bitcast { double, double }* %0 to double*
  store double %_56, double* %24, align 8
  %25 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_58, double* %25, align 8
  br label %bb22

bb21:                                             ; preds = %bb16
  %_60 = fneg double %_46
  %26 = bitcast { double, double }* %0 to double*
  store double %_60, double* %26, align 8
  %27 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %_43, double* %27, align 8
  br label %bb22
}

; libm::math::sincosf::sincosf
; Function Attrs: nonlazybind uwtable
define { float, float } @_ZN4libm4math7sincosf7sincosf17h8df975600010005eE(float %x) unnamed_addr #1 {
start:
  %_27 = alloca float, align 4
  %_21 = alloca float, align 4
  %ix = alloca i32, align 4
  %c = alloca float, align 4
  %s = alloca float, align 4
  %0 = alloca { float, float }, align 4
; call core::f32::<impl f32>::to_bits
  %_6 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_6, i32* %ix, align 4
  %_9 = load i32, i32* %ix, align 4
  %_10.0 = lshr i32 %_9, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_10.0, 0
  %1 = load i32, i32* %ix, align 4
  %2 = and i32 %1, 2147483647
  store i32 %2, i32* %ix, align 4
  %_12 = load i32, i32* %ix, align 4
  %_11 = icmp ule i32 %_12, 1061752794
  br i1 %_11, label %bb3, label %bb12

bb12:                                             ; preds = %bb2
  %_38 = load i32, i32* %ix, align 4
  %_37 = icmp ule i32 %_38, 1081824209
  br i1 %_37, label %bb13, label %bb14

bb3:                                              ; preds = %bb2
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp ult i32 %_14, 964689920
  br i1 %_13, label %bb4, label %bb9

bb9:                                              ; preds = %bb3
  %_32 = fpext float %x to double
; call libm::math::k_sinf::k_sinf
  %_31 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_32)
  br label %bb10

bb4:                                              ; preds = %bb3
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_17 = load i32, i32* %ix, align 4
  %_16 = icmp ult i32 %_17, 1048576
  br i1 %_16, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %3 = fadd float %x, %x1p120
  store float %3, float* %_27, align 4
; call core::ptr::read_volatile
  %_24 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_27)
  br label %bb8

bb6:                                              ; preds = %bb5
  %4 = fdiv float %x, %x1p120
  store float %4, float* %_21, align 4
; call core::ptr::read_volatile
  %_18 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_21)
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %5 = bitcast { float, float }* %0 to float*
  store float %x, float* %5, align 4
  %6 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float 1.000000e+00, float* %6, align 4
  br label %bb57

bb57:                                             ; preds = %bb53, %bb54, %bb55, %bb56, %bb47, %bb46, %bb29, %bb11, %bb8
  %7 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = insertvalue { float, float } undef, float %8, 0
  %12 = insertvalue { float, float } %11, float %10, 1
  ret { float, float } %12

bb10:                                             ; preds = %bb9
  %_35 = fpext float %x to double
; call libm::math::k_cosf::k_cosf
  %_34 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_35)
  br label %bb11

bb11:                                             ; preds = %bb10
  %13 = bitcast { float, float }* %0 to float*
  store float %_31, float* %13, align 4
  %14 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_34, float* %14, align 4
  br label %bb57

bb14:                                             ; preds = %bb12
  %_78 = load i32, i32* %ix, align 4
  %_77 = icmp ule i32 %_78, 1088565717
  br i1 %_77, label %bb30, label %bb31

bb13:                                             ; preds = %bb12
  %_40 = load i32, i32* %ix, align 4
  %_39 = icmp ule i32 %_40, 1075235811
  br i1 %_39, label %bb15, label %bb22

bb22:                                             ; preds = %bb13
  br i1 %sign, label %bb23, label %bb26

bb15:                                             ; preds = %bb13
  br i1 %sign, label %bb16, label %bb19

bb19:                                             ; preds = %bb15
  %_52 = fsub float 0x3FF921FB60000000, %x
  %_51 = fpext float %_52 to double
; call libm::math::k_cosf::k_cosf
  %_50 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_51)
  br label %bb20

bb16:                                             ; preds = %bb15
  %_44 = fadd float %x, 0x3FF921FB60000000
  %_43 = fpext float %_44 to double
; call libm::math::k_cosf::k_cosf
  %_42 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_43)
  br label %bb17

bb17:                                             ; preds = %bb16
  %15 = fneg float %_42
  store float %15, float* %s, align 4
  %_48 = fadd float %x, 0x3FF921FB60000000
  %_47 = fpext float %_48 to double
; call libm::math::k_sinf::k_sinf
  %_46 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_47)
  br label %bb18

bb18:                                             ; preds = %bb17
  store float %_46, float* %c, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %bb25, %bb21, %bb18
  %_75 = load float, float* %s, align 4
  %_76 = load float, float* %c, align 4
  %16 = bitcast { float, float }* %0 to float*
  store float %_75, float* %16, align 4
  %17 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_76, float* %17, align 4
  br label %bb57

bb20:                                             ; preds = %bb19
  store float %_50, float* %s, align 4
  %_56 = fsub float 0x3FF921FB60000000, %x
  %_55 = fpext float %_56 to double
; call libm::math::k_sinf::k_sinf
  %_54 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_55)
  br label %bb21

bb21:                                             ; preds = %bb20
  store float %_54, float* %c, align 4
  br label %bb29

bb26:                                             ; preds = %bb22
  %_69 = fsub float %x, 0x400921FB60000000
  %_68 = fpext float %_69 to double
; call libm::math::k_sinf::k_sinf
  %_67 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_68)
  br label %bb27

bb23:                                             ; preds = %bb22
  %_61 = fadd float %x, 0x400921FB60000000
  %_60 = fpext float %_61 to double
; call libm::math::k_sinf::k_sinf
  %_59 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_60)
  br label %bb24

bb24:                                             ; preds = %bb23
  %18 = fneg float %_59
  store float %18, float* %s, align 4
  %_65 = fadd float %x, 0x400921FB60000000
  %_64 = fpext float %_65 to double
; call libm::math::k_cosf::k_cosf
  %_63 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_64)
  br label %bb25

bb25:                                             ; preds = %bb24
  %19 = fneg float %_63
  store float %19, float* %c, align 4
  br label %bb29

bb27:                                             ; preds = %bb26
  %20 = fneg float %_67
  store float %20, float* %s, align 4
  %_73 = fsub float %x, 0x400921FB60000000
  %_72 = fpext float %_73 to double
; call libm::math::k_cosf::k_cosf
  %_71 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_72)
  br label %bb28

bb28:                                             ; preds = %bb27
  %21 = fneg float %_71
  store float %21, float* %c, align 4
  br label %bb29

bb31:                                             ; preds = %bb14
  %_118 = load i32, i32* %ix, align 4
  %_117 = icmp uge i32 %_118, 2139095040
  br i1 %_117, label %bb47, label %bb48

bb30:                                             ; preds = %bb14
  %_80 = load i32, i32* %ix, align 4
  %_79 = icmp ule i32 %_80, 1085271519
  br i1 %_79, label %bb32, label %bb39

bb39:                                             ; preds = %bb30
  br i1 %sign, label %bb40, label %bb43

bb32:                                             ; preds = %bb30
  br i1 %sign, label %bb33, label %bb36

bb36:                                             ; preds = %bb32
  %_92 = fsub float %x, 0x4012D97C80000000
  %_91 = fpext float %_92 to double
; call libm::math::k_cosf::k_cosf
  %_90 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_91)
  br label %bb37

bb33:                                             ; preds = %bb32
  %_84 = fadd float %x, 0x4012D97C80000000
  %_83 = fpext float %_84 to double
; call libm::math::k_cosf::k_cosf
  %_82 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_83)
  br label %bb34

bb34:                                             ; preds = %bb33
  store float %_82, float* %s, align 4
  %_88 = fadd float %x, 0x4012D97C80000000
  %_87 = fpext float %_88 to double
; call libm::math::k_sinf::k_sinf
  %_86 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_87)
  br label %bb35

bb35:                                             ; preds = %bb34
  %22 = fneg float %_86
  store float %22, float* %c, align 4
  br label %bb46

bb46:                                             ; preds = %bb45, %bb42, %bb38, %bb35
  %_115 = load float, float* %s, align 4
  %_116 = load float, float* %c, align 4
  %23 = bitcast { float, float }* %0 to float*
  store float %_115, float* %23, align 4
  %24 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_116, float* %24, align 4
  br label %bb57

bb37:                                             ; preds = %bb36
  %25 = fneg float %_90
  store float %25, float* %s, align 4
  %_96 = fsub float %x, 0x4012D97C80000000
  %_95 = fpext float %_96 to double
; call libm::math::k_sinf::k_sinf
  %_94 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_95)
  br label %bb38

bb38:                                             ; preds = %bb37
  store float %_94, float* %c, align 4
  br label %bb46

bb43:                                             ; preds = %bb39
  %_109 = fsub float %x, 0x401921FB60000000
  %_108 = fpext float %_109 to double
; call libm::math::k_sinf::k_sinf
  %_107 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_108)
  br label %bb44

bb40:                                             ; preds = %bb39
  %_101 = fadd float %x, 0x401921FB60000000
  %_100 = fpext float %_101 to double
; call libm::math::k_sinf::k_sinf
  %_99 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_100)
  br label %bb41

bb41:                                             ; preds = %bb40
  store float %_99, float* %s, align 4
  %_105 = fadd float %x, 0x401921FB60000000
  %_104 = fpext float %_105 to double
; call libm::math::k_cosf::k_cosf
  %_103 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_104)
  br label %bb42

bb42:                                             ; preds = %bb41
  store float %_103, float* %c, align 4
  br label %bb46

bb44:                                             ; preds = %bb43
  store float %_107, float* %s, align 4
  %_113 = fsub float %x, 0x401921FB60000000
  %_112 = fpext float %_113 to double
; call libm::math::k_cosf::k_cosf
  %_111 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_112)
  br label %bb45

bb45:                                             ; preds = %bb44
  store float %_111, float* %c, align 4
  br label %bb46

bb48:                                             ; preds = %bb31
; call libm::math::rem_pio2f::rem_pio2f
  %26 = call { i32, double } @_ZN4libm4math9rem_pio2f9rem_pio2f17h97dc6e4f6f64a42cE(float %x)
  %_126.0 = extractvalue { i32, double } %26, 0
  %_126.1 = extractvalue { i32, double } %26, 1
  br label %bb49

bb47:                                             ; preds = %bb31
  %rv = fsub float %x, %x
  %27 = bitcast { float, float }* %0 to float*
  store float %rv, float* %27, align 4
  %28 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %rv, float* %28, align 4
  br label %bb57

bb49:                                             ; preds = %bb48
; call libm::math::k_sinf::k_sinf
  %_128 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_126.1)
  br label %bb50

bb50:                                             ; preds = %bb49
  store float %_128, float* %s, align 4
; call libm::math::k_cosf::k_cosf
  %_130 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_126.1)
  br label %bb51

bb51:                                             ; preds = %bb50
  store float %_130, float* %c, align 4
  %_132 = and i32 %_126.0, 3
  switch i32 %_132, label %bb52 [
    i32 0, label %bb53
    i32 1, label %bb54
    i32 2, label %bb55
    i32 3, label %bb56
  ]

bb52:                                             ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2589 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2378 to %"core::panic::location::Location"*)) #11
  unreachable

bb53:                                             ; preds = %bb51
  %_134 = load float, float* %s, align 4
  %_135 = load float, float* %c, align 4
  %29 = bitcast { float, float }* %0 to float*
  store float %_134, float* %29, align 4
  %30 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_135, float* %30, align 4
  br label %bb57

bb54:                                             ; preds = %bb51
  %_136 = load float, float* %c, align 4
  %_138 = load float, float* %s, align 4
  %_137 = fneg float %_138
  %31 = bitcast { float, float }* %0 to float*
  store float %_136, float* %31, align 4
  %32 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_137, float* %32, align 4
  br label %bb57

bb55:                                             ; preds = %bb51
  %_140 = load float, float* %s, align 4
  %_139 = fneg float %_140
  %_142 = load float, float* %c, align 4
  %_141 = fneg float %_142
  %33 = bitcast { float, float }* %0 to float*
  store float %_139, float* %33, align 4
  %34 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_141, float* %34, align 4
  br label %bb57

bb56:                                             ; preds = %bb51
  %_144 = load float, float* %c, align 4
  %_143 = fneg float %_144
  %_145 = load float, float* %s, align 4
  %35 = bitcast { float, float }* %0 to float*
  store float %_143, float* %35, align 4
  %36 = getelementptr inbounds { float, float }, { float, float }* %0, i32 0, i32 1
  store float %_145, float* %36, align 4
  br label %bb57
}

; libm::math::sinf::sinf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4sinf4sinf17h4c42ac16e64b15baE(float %x) unnamed_addr #1 {
start:
  %_52 = alloca double, align 8
  %_36 = alloca double, align 8
  %_18 = alloca float, align 4
  %ix = alloca i32, align 4
  %0 = alloca float, align 4
  %x64 = fpext float %x to double
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_9 = load i32, i32* %ix, align 4
  %_10.0 = lshr i32 %_9, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i32 %_10.0, 0
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_12 = load i32, i32* %ix, align 4
  %_11 = icmp ule i32 %_12, 1061752794
  br i1 %_11, label %bb4, label %bb11

bb11:                                             ; preds = %bb3
  %_27 = load i32, i32* %ix, align 4
  %_26 = icmp ule i32 %_27, 1081824209
  br i1 %_26, label %bb12, label %bb13

bb4:                                              ; preds = %bb3
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp ult i32 %_14, 964689920
  br i1 %_13, label %bb5, label %bb10

bb10:                                             ; preds = %bb4
; call libm::math::k_sinf::k_sinf
  %4 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %x64)
  store float %4, float* %0, align 4
  br label %bb40

bb5:                                              ; preds = %bb4
  %_20 = load i32, i32* %ix, align 4
  %_19 = icmp ult i32 %_20, 8388608
  br i1 %_19, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %5 = fadd float %x, %x1p120
  store float %5, float* %_18, align 4
  br label %bb8

bb6:                                              ; preds = %bb5
  %6 = fdiv float %x, %x1p120
  store float %6, float* %_18, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
; call core::ptr::read_volatile
  %_15 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_18)
  br label %bb9

bb9:                                              ; preds = %bb8
  store float %x, float* %0, align 4
  br label %bb40

bb40:                                             ; preds = %bb36, %bb37, %bb38, %bb39, %bb32, %bb31, %bb27, %bb25, %bb21, %bb17, %bb16, %bb10, %bb9
  %7 = load float, float* %0, align 4
  ret float %7

bb13:                                             ; preds = %bb11
  %_43 = load i32, i32* %ix, align 4
  %_42 = icmp ule i32 %_43, 1088565717
  br i1 %_42, label %bb22, label %bb23

bb12:                                             ; preds = %bb11
  %_29 = load i32, i32* %ix, align 4
  %_28 = icmp ule i32 %_29, 1075235811
  br i1 %_28, label %bb14, label %bb18

bb18:                                             ; preds = %bb12
  br i1 %sign, label %bb19, label %bb20

bb14:                                             ; preds = %bb12
  br i1 %sign, label %bb15, label %bb17

bb17:                                             ; preds = %bb14
  %_34 = fsub double %x64, 0x3FF921FB54442D18
; call libm::math::k_cosf::k_cosf
  %8 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_34)
  store float %8, float* %0, align 4
  br label %bb40

bb15:                                             ; preds = %bb14
  %_32 = fadd double %x64, 0x3FF921FB54442D18
; call libm::math::k_cosf::k_cosf
  %_31 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_32)
  br label %bb16

bb16:                                             ; preds = %bb15
  %9 = fneg float %_31
  store float %9, float* %0, align 4
  br label %bb40

bb20:                                             ; preds = %bb18
  %_40 = fsub double %x64, 0x400921FB54442D18
  %10 = fneg double %_40
  store double %10, double* %_36, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %_38 = fadd double %x64, 0x400921FB54442D18
  %11 = fneg double %_38
  store double %11, double* %_36, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %12 = load double, double* %_36, align 8
; call libm::math::k_sinf::k_sinf
  %13 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %12)
  store float %13, float* %0, align 4
  br label %bb40

bb23:                                             ; preds = %bb13
  %_57 = load i32, i32* %ix, align 4
  %_56 = icmp uge i32 %_57, 2139095040
  br i1 %_56, label %bb32, label %bb33

bb22:                                             ; preds = %bb13
  %_45 = load i32, i32* %ix, align 4
  %_44 = icmp ule i32 %_45, 1085271519
  br i1 %_44, label %bb24, label %bb28

bb28:                                             ; preds = %bb22
  br i1 %sign, label %bb29, label %bb30

bb24:                                             ; preds = %bb22
  br i1 %sign, label %bb25, label %bb26

bb26:                                             ; preds = %bb24
  %_50 = fsub double %x64, 0x4012D97C7F3321D2
; call libm::math::k_cosf::k_cosf
  %_49 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_50)
  br label %bb27

bb25:                                             ; preds = %bb24
  %_47 = fadd double %x64, 0x4012D97C7F3321D2
; call libm::math::k_cosf::k_cosf
  %14 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_47)
  store float %14, float* %0, align 4
  br label %bb40

bb27:                                             ; preds = %bb26
  %15 = fneg float %_49
  store float %15, float* %0, align 4
  br label %bb40

bb30:                                             ; preds = %bb28
  %16 = fsub double %x64, 0x401921FB54442D18
  store double %16, double* %_52, align 8
  br label %bb31

bb29:                                             ; preds = %bb28
  %17 = fadd double %x64, 0x401921FB54442D18
  store double %17, double* %_52, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %18 = load double, double* %_52, align 8
; call libm::math::k_sinf::k_sinf
  %19 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %18)
  store float %19, float* %0, align 4
  br label %bb40

bb33:                                             ; preds = %bb23
; call libm::math::rem_pio2f::rem_pio2f
  %20 = call { i32, double } @_ZN4libm4math9rem_pio2f9rem_pio2f17h97dc6e4f6f64a42cE(float %x)
  %_62.0 = extractvalue { i32, double } %20, 0
  %_62.1 = extractvalue { i32, double } %20, 1
  br label %bb34

bb32:                                             ; preds = %bb23
  %21 = fsub float %x, %x
  store float %21, float* %0, align 4
  br label %bb40

bb34:                                             ; preds = %bb33
  %_64 = and i32 %_62.0, 3
  switch i32 %_64, label %bb35 [
    i32 0, label %bb36
    i32 1, label %bb37
    i32 2, label %bb38
  ]

bb35:                                             ; preds = %bb34
; call libm::math::k_cosf::k_cosf
  %_70 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_62.1)
  br label %bb39

bb36:                                             ; preds = %bb34
; call libm::math::k_sinf::k_sinf
  %22 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_62.1)
  store float %22, float* %0, align 4
  br label %bb40

bb37:                                             ; preds = %bb34
; call libm::math::k_cosf::k_cosf
  %23 = call float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %_62.1)
  store float %23, float* %0, align 4
  br label %bb40

bb38:                                             ; preds = %bb34
  %_68 = fneg double %_62.1
; call libm::math::k_sinf::k_sinf
  %24 = call float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %_68)
  store float %24, float* %0, align 4
  br label %bb40

bb39:                                             ; preds = %bb35
  %25 = fneg float %_70
  store float %25, float* %0, align 4
  br label %bb40
}

; libm::math::sinh::sinh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4sinh4sinh17h38b0f63f0b4a8b69E(double %x) unnamed_addr #1 {
start:
  %h = alloca double, align 8
  %t = alloca double, align 8
  %ui = alloca i64, align 8
  %uf = alloca double, align 8
  %0 = alloca double, align 8
  store double %x, double* %uf, align 8
  %_4 = load double, double* %uf, align 8
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  store i64 %1, i64* %ui, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store double 5.000000e-01, double* %h, align 8
  %_10 = load i64, i64* %ui, align 8
  %_11.0 = lshr i64 %_10, 63
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp eq i64 %_11.0, 0
  br i1 %2, label %bb4, label %bb3

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i64, i64* %ui, align 8
  %4 = and i64 %3, 9223372036854775807
  store i64 %4, i64* %ui, align 8
  %_15 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_14 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_15)
  br label %bb5

bb3:                                              ; preds = %bb2
  %_12 = load double, double* %h, align 8
  %5 = fneg double %_12
  store double %5, double* %h, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  store double %_14, double* %uf, align 8
  %_16 = load double, double* %uf, align 8
  %_18 = load i64, i64* %ui, align 8
  %_19.0 = lshr i64 %_18, 32
  br label %bb6

bb6:                                              ; preds = %bb5
  %w = trunc i64 %_19.0 to i32
  %_20 = icmp ult i32 %w, 1082535490
  br i1 %_20, label %bb7, label %bb13

bb13:                                             ; preds = %bb6
  %_47 = load double, double* %h, align 8
  %_46 = fmul double 2.000000e+00, %_47
; call libm::math::expo2::expo2
  %_48 = call double @_ZN4libm4math5expo25expo217h05acb0ad70c59e4bE(double %_16)
  br label %bb14

bb7:                                              ; preds = %bb6
; call libm::math::expm1::expm1
  %_22 = call double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %_16)
  br label %bb8

bb8:                                              ; preds = %bb7
  store double %_22, double* %t, align 8
  %_24 = icmp ult i32 %w, 1072693248
  br i1 %_24, label %bb9, label %bb12

bb12:                                             ; preds = %bb8
  %_39 = load double, double* %h, align 8
  %_41 = load double, double* %t, align 8
  %_43 = load double, double* %t, align 8
  %_45 = load double, double* %t, align 8
  %_44 = fadd double %_45, 1.000000e+00
  %_42 = fdiv double %_43, %_44
  %_40 = fadd double %_41, %_42
  %6 = fmul double %_39, %_40
  store double %6, double* %0, align 8
  br label %bb15

bb9:                                              ; preds = %bb8
  %_26 = icmp ult i32 %w, 1045430272
  br i1 %_26, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %_29 = load double, double* %h, align 8
  %_32 = load double, double* %t, align 8
  %_31 = fmul double 2.000000e+00, %_32
  %_35 = load double, double* %t, align 8
  %_36 = load double, double* %t, align 8
  %_34 = fmul double %_35, %_36
  %_38 = load double, double* %t, align 8
  %_37 = fadd double %_38, 1.000000e+00
  %_33 = fdiv double %_34, %_37
  %_30 = fsub double %_31, %_33
  %7 = fmul double %_29, %_30
  store double %7, double* %0, align 8
  br label %bb15

bb10:                                             ; preds = %bb9
  store double %x, double* %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb12, %bb11, %bb10
  %8 = load double, double* %0, align 8
  ret double %8

bb14:                                             ; preds = %bb13
  %9 = fmul double %_46, %_48
  store double %9, double* %t, align 8
  %10 = load double, double* %t, align 8
  store double %10, double* %0, align 8
  br label %bb15
}

; libm::math::sinhf::sinhf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5sinhf5sinhf17hb266db8c11bdce5cE(float %x) unnamed_addr #1 {
start:
  %ix = alloca i32, align 4
  %h = alloca float, align 4
  %0 = alloca float, align 4
  store float 5.000000e-01, float* %h, align 4
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ix, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = load i32, i32* %ix, align 4
  %_7.0 = lshr i32 %_6, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp eq i32 %_7.0, 0
  br i1 %2, label %bb4, label %bb3

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_10 = load i32, i32* %ix, align 4
; call core::f32::<impl f32>::from_bits
  %absx = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_10)
  br label %bb5

bb3:                                              ; preds = %bb2
  %_8 = load float, float* %h, align 4
  %5 = fneg float %_8
  store float %5, float* %h, align 4
  br label %bb4

bb5:                                              ; preds = %bb4
  %w = load i32, i32* %ix, align 4
  %_12 = icmp ult i32 %w, 1118925335
  br i1 %_12, label %bb6, label %bb12

bb12:                                             ; preds = %bb5
  %_39 = load float, float* %h, align 4
  %_38 = fmul float 2.000000e+00, %_39
; call libm::math::k_expo2f::k_expo2f
  %_40 = call float @_ZN4libm4math8k_expo2f8k_expo2f17h52ccc5750a47ab79E(float %absx)
  br label %bb13

bb6:                                              ; preds = %bb5
; call libm::math::expm1f::expm1f
  %t = call float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %absx)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_16 = icmp ult i32 %w, 1065353216
  br i1 %_16, label %bb8, label %bb11

bb11:                                             ; preds = %bb7
  %_31 = load float, float* %h, align 4
  %_36 = fadd float %t, 1.000000e+00
  %_34 = fdiv float %t, %_36
  %_32 = fadd float %t, %_34
  %6 = fmul float %_31, %_32
  store float %6, float* %0, align 4
  br label %bb14

bb8:                                              ; preds = %bb7
  %_18 = icmp ult i32 %w, 964689920
  br i1 %_18, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %_21 = load float, float* %h, align 4
  %_23 = fmul float 2.000000e+00, %t
  %_26 = fmul float %t, %t
  %_29 = fadd float %t, 1.000000e+00
  %_25 = fdiv float %_26, %_29
  %_22 = fsub float %_23, %_25
  %7 = fmul float %_21, %_22
  store float %7, float* %0, align 4
  br label %bb14

bb9:                                              ; preds = %bb8
  store float %x, float* %0, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb10, %bb9
  %8 = load float, float* %0, align 4
  ret float %8

bb13:                                             ; preds = %bb12
  %9 = fmul float %_38, %_40
  store float %9, float* %0, align 4
  br label %bb14
}

; libm::math::sqrt::sqrt
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4sqrt4sqrt17h152c000d2ec65030E(double %x) unnamed_addr #1 {
start:
  %0 = alloca <2 x double>, align 16
  %1 = alloca <2 x double>, align 16
  %2 = alloca <2 x double>, align 16
  %3 = alloca <2 x double>, align 16
; call core::core_arch::x86::sse2::_mm_set_sd
  call void @_ZN4core9core_arch3x864sse210_mm_set_sd17ha9a04c181879efb7E(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %3, double %x)
  %m = load <2 x double>, <2 x double>* %3, align 16
  br label %bb1

bb1:                                              ; preds = %start
  store <2 x double> %m, <2 x double>* %1, align 16
; call core::core_arch::x86::sse2::_mm_sqrt_pd
  call void @_ZN4core9core_arch3x864sse211_mm_sqrt_pd17h375770549f17f13fE(<2 x double>* noalias nocapture sret(<2 x double>) dereferenceable(16) %2, <2 x double>* noalias nocapture dereferenceable(16) %1)
  %m_sqrt = load <2 x double>, <2 x double>* %2, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  store <2 x double> %m_sqrt, <2 x double>* %0, align 16
; call core::core_arch::x86::sse2::_mm_cvtsd_f64
  %4 = call double @_ZN4core9core_arch3x864sse213_mm_cvtsd_f6417h2d0878bb856b7672E(<2 x double>* noalias nocapture dereferenceable(16) %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret double %4
}

; libm::math::sqrtf::sqrtf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5sqrtf5sqrtf17hf446dcd699f8845aE(float %x) unnamed_addr #1 {
start:
  %0 = alloca <4 x float>, align 16
  %1 = alloca <4 x float>, align 16
  %2 = alloca <4 x float>, align 16
  %3 = alloca <4 x float>, align 16
; call core::core_arch::x86::sse::_mm_set_ss
  call void @_ZN4core9core_arch3x863sse10_mm_set_ss17hc3a7e8c40dfeb91bE(<4 x float>* noalias nocapture sret(<4 x float>) dereferenceable(16) %3, float %x)
  %m = load <4 x float>, <4 x float>* %3, align 16
  br label %bb1

bb1:                                              ; preds = %start
  store <4 x float> %m, <4 x float>* %1, align 16
; call core::core_arch::x86::sse::_mm_sqrt_ss
  call void @_ZN4core9core_arch3x863sse11_mm_sqrt_ss17hc1feaa2672a20133E(<4 x float>* noalias nocapture sret(<4 x float>) dereferenceable(16) %2, <4 x float>* noalias nocapture dereferenceable(16) %1)
  %m_sqrt = load <4 x float>, <4 x float>* %2, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  store <4 x float> %m_sqrt, <4 x float>* %0, align 16
; call core::core_arch::x86::sse::_mm_cvtss_f32
  %4 = call float @_ZN4core9core_arch3x863sse13_mm_cvtss_f3217he0f382d7e200af8dE(<4 x float>* noalias nocapture dereferenceable(16) %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret float %4
}

; libm::math::tan::tan
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math3tan3tan17hde615bc5aed70571E(double %x) unnamed_addr #1 {
start:
  %_33 = alloca { double, i32, [1 x i32], double }, align 8
  %_16 = alloca double, align 8
  %0 = alloca double, align 8
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %_6 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8.0 = lshr i64 %_6, 32
  br label %bb3

bb3:                                              ; preds = %bb2
  %_4 = trunc i64 %_8.0 to i32
  %ix = and i32 %_4, 2147483647
  %_9 = icmp ule i32 %ix, 1072243195
  br i1 %_9, label %bb4, label %bb11

bb11:                                             ; preds = %bb3
  %_26 = icmp uge i32 %ix, 2146435072
  br i1 %_26, label %bb12, label %bb13

bb4:                                              ; preds = %bb3
  %_11 = icmp ult i32 %ix, 1044381696
  br i1 %_11, label %bb5, label %bb10

bb10:                                             ; preds = %bb4
; call libm::math::k_tan::k_tan
  %1 = call double @_ZN4libm4math5k_tan5k_tan17h091c7f1824693003E(double %x, double 0.000000e+00, i32 0)
  store double %1, double* %0, align 8
  br label %bb15

bb5:                                              ; preds = %bb4
  %_17 = icmp ult i32 %ix, 1048576
  br i1 %_17, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_23 = fpext float %x1p120 to double
  %2 = fadd double %x, %_23
  store double %2, double* %_16, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  %_20 = fpext float %x1p120 to double
  %3 = fdiv double %x, %_20
  store double %3, double* %_16, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
; call core::ptr::read_volatile
  %_13 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_16)
  br label %bb9

bb9:                                              ; preds = %bb8
  store double %x, double* %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb12, %bb10, %bb9
  %4 = load double, double* %0, align 8
  ret double %4

bb13:                                             ; preds = %bb11
; call libm::math::rem_pio2::rem_pio2
  call void @_ZN4libm4math8rem_pio28rem_pio217h9d712b10bce41dc7E({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %_33, double %x)
  br label %bb14

bb12:                                             ; preds = %bb11
  %5 = fsub double %x, %x
  store double %5, double* %0, align 8
  br label %bb15

bb14:                                             ; preds = %bb13
  %6 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_33, i32 0, i32 1
  %n = load i32, i32* %6, align 8
  %7 = bitcast { double, i32, [1 x i32], double }* %_33 to double*
  %y0 = load double, double* %7, align 8
  %8 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %_33, i32 0, i32 3
  %y1 = load double, double* %8, align 8
  %_37 = and i32 %n, 1
; call libm::math::k_tan::k_tan
  %9 = call double @_ZN4libm4math5k_tan5k_tan17h091c7f1824693003E(double %y0, double %y1, i32 %_37)
  store double %9, double* %0, align 8
  br label %bb15
}

; libm::math::tanf::tanf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math4tanf4tanf17he061947f30a09a2eE(float %x) unnamed_addr #1 {
start:
  %_46 = alloca double, align 8
  %_42 = alloca double, align 8
  %_34 = alloca double, align 8
  %_30 = alloca double, align 8
  %_18 = alloca float, align 4
  %ix = alloca i32, align 4
  %0 = alloca float, align 4
  %x64 = fpext float %x to double
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %ix, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_9 = load i32, i32* %ix, align 4
  %_10.0 = lshr i32 %_9, 31
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i32 %_10.0, 0
  %2 = load i32, i32* %ix, align 4
  %3 = and i32 %2, 2147483647
  store i32 %3, i32* %ix, align 4
  %_12 = load i32, i32* %ix, align 4
  %_11 = icmp ule i32 %_12, 1061752794
  br i1 %_11, label %bb4, label %bb11

bb11:                                             ; preds = %bb3
  %_27 = load i32, i32* %ix, align 4
  %_26 = icmp ule i32 %_27, 1081824209
  br i1 %_26, label %bb12, label %bb13

bb4:                                              ; preds = %bb3
  %_14 = load i32, i32* %ix, align 4
  %_13 = icmp ult i32 %_14, 964689920
  br i1 %_13, label %bb5, label %bb10

bb10:                                             ; preds = %bb4
; call libm::math::k_tanf::k_tanf
  %4 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %x64, i1 zeroext false)
  store float %4, float* %0, align 4
  br label %bb35

bb5:                                              ; preds = %bb4
  %_20 = load i32, i32* %ix, align 4
  %_19 = icmp ult i32 %_20, 8388608
  br i1 %_19, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %5 = fadd float %x, %x1p120
  store float %5, float* %_18, align 4
  br label %bb8

bb6:                                              ; preds = %bb5
  %6 = fdiv float %x, %x1p120
  store float %6, float* %_18, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
; call core::ptr::read_volatile
  %_15 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_18)
  br label %bb9

bb9:                                              ; preds = %bb8
  store float %x, float* %0, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %bb32, %bb31, %bb27, %bb21, %bb17, %bb10, %bb9
  %7 = load float, float* %0, align 4
  ret float %7

bb13:                                             ; preds = %bb11
  %_39 = load i32, i32* %ix, align 4
  %_38 = icmp ule i32 %_39, 1088565717
  br i1 %_38, label %bb22, label %bb23

bb12:                                             ; preds = %bb11
  %_29 = load i32, i32* %ix, align 4
  %_28 = icmp ule i32 %_29, 1075235811
  br i1 %_28, label %bb14, label %bb18

bb18:                                             ; preds = %bb12
  br i1 %sign, label %bb19, label %bb20

bb14:                                             ; preds = %bb12
  br i1 %sign, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %8 = fsub double %x64, 0x3FF921FB54442D18
  store double %8, double* %_30, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
  %9 = fadd double %x64, 0x3FF921FB54442D18
  store double %9, double* %_30, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %10 = load double, double* %_30, align 8
; call libm::math::k_tanf::k_tanf
  %11 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %10, i1 zeroext true)
  store float %11, float* %0, align 4
  br label %bb35

bb20:                                             ; preds = %bb18
  %12 = fsub double %x64, 0x400921FB54442D18
  store double %12, double* %_34, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %13 = fadd double %x64, 0x400921FB54442D18
  store double %13, double* %_34, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %14 = load double, double* %_34, align 8
; call libm::math::k_tanf::k_tanf
  %15 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %14, i1 zeroext false)
  store float %15, float* %0, align 4
  br label %bb35

bb23:                                             ; preds = %bb13
  %_51 = load i32, i32* %ix, align 4
  %_50 = icmp uge i32 %_51, 2139095040
  br i1 %_50, label %bb32, label %bb33

bb22:                                             ; preds = %bb13
  %_41 = load i32, i32* %ix, align 4
  %_40 = icmp ule i32 %_41, 1085271519
  br i1 %_40, label %bb24, label %bb28

bb28:                                             ; preds = %bb22
  br i1 %sign, label %bb29, label %bb30

bb24:                                             ; preds = %bb22
  br i1 %sign, label %bb25, label %bb26

bb26:                                             ; preds = %bb24
  %16 = fsub double %x64, 0x4012D97C7F3321D2
  store double %16, double* %_42, align 8
  br label %bb27

bb25:                                             ; preds = %bb24
  %17 = fadd double %x64, 0x4012D97C7F3321D2
  store double %17, double* %_42, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %18 = load double, double* %_42, align 8
; call libm::math::k_tanf::k_tanf
  %19 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %18, i1 zeroext true)
  store float %19, float* %0, align 4
  br label %bb35

bb30:                                             ; preds = %bb28
  %20 = fsub double %x64, 0x401921FB54442D18
  store double %20, double* %_46, align 8
  br label %bb31

bb29:                                             ; preds = %bb28
  %21 = fadd double %x64, 0x401921FB54442D18
  store double %21, double* %_46, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %22 = load double, double* %_46, align 8
; call libm::math::k_tanf::k_tanf
  %23 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %22, i1 zeroext false)
  store float %23, float* %0, align 4
  br label %bb35

bb33:                                             ; preds = %bb23
; call libm::math::rem_pio2f::rem_pio2f
  %24 = call { i32, double } @_ZN4libm4math9rem_pio2f9rem_pio2f17h97dc6e4f6f64a42cE(float %x)
  %_56.0 = extractvalue { i32, double } %24, 0
  %_56.1 = extractvalue { i32, double } %24, 1
  br label %bb34

bb32:                                             ; preds = %bb23
  %25 = fsub float %x, %x
  store float %25, float* %0, align 4
  br label %bb35

bb34:                                             ; preds = %bb33
  %_60 = and i32 %_56.0, 1
  %_59 = icmp ne i32 %_60, 0
; call libm::math::k_tanf::k_tanf
  %26 = call float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %_56.1, i1 zeroext %_59)
  store float %26, float* %0, align 4
  br label %bb35
}

; libm::math::tanh::tanh
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math4tanh4tanh17hcae786223e3b1780E(double %0) unnamed_addr #1 {
start:
  %_50 = alloca float, align 4
  %t = alloca double, align 8
  %ui = alloca i64, align 8
  %uf = alloca double, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %2 = load double, double* %x, align 8
  store double %2, double* %uf, align 8
  %_4 = load double, double* %uf, align 8
; call core::f64::<impl f64>::to_bits
  %3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_4)
  store i64 %3, i64* %ui, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = load i64, i64* %ui, align 8
  %_10.0 = lshr i64 %_9, 63
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i64 %_10.0, 0
  %4 = load i64, i64* %ui, align 8
  %5 = and i64 %4, 9223372036854775807
  store i64 %5, i64* %ui, align 8
  %_13 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %_12 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_13)
  br label %bb3

bb3:                                              ; preds = %bb2
  store double %_12, double* %uf, align 8
  %_14 = load double, double* %uf, align 8
  store double %_14, double* %x, align 8
  %_16 = load i64, i64* %ui, align 8
  %_17.0 = lshr i64 %_16, 32
  br label %bb4

bb4:                                              ; preds = %bb3
  %w = trunc i64 %_17.0 to i32
  %_18 = icmp ugt i32 %w, 1071748074
  br i1 %_18, label %bb5, label %bb9

bb9:                                              ; preds = %bb4
  %_30 = icmp ugt i32 %w, 1070618798
  br i1 %_30, label %bb10, label %bb12

bb5:                                              ; preds = %bb4
  %_20 = icmp ugt i32 %w, 1077149696
  br i1 %_20, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_26 = load double, double* %x, align 8
  %_25 = fmul double 2.000000e+00, %_26
; call libm::math::expm1::expm1
  %_24 = call double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %_25)
  br label %bb8

bb6:                                              ; preds = %bb5
  %_23 = load double, double* %x, align 8
  %_22 = fdiv double 0.000000e+00, %_23
  %6 = fsub double 1.000000e+00, %_22
  store double %6, double* %t, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb14, %bb11, %bb8, %bb6
  br i1 %sign, label %bb18, label %bb19

bb8:                                              ; preds = %bb7
  store double %_24, double* %t, align 8
  %_29 = load double, double* %t, align 8
  %_28 = fadd double %_29, 2.000000e+00
  %_27 = fdiv double 2.000000e+00, %_28
  %7 = fsub double 1.000000e+00, %_27
  store double %7, double* %t, align 8
  br label %bb17

bb12:                                             ; preds = %bb9
  %_38 = icmp uge i32 %w, 1048576
  br i1 %_38, label %bb13, label %bb15

bb10:                                             ; preds = %bb9
  %_34 = load double, double* %x, align 8
  %_33 = fmul double 2.000000e+00, %_34
; call libm::math::expm1::expm1
  %_32 = call double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %_33)
  br label %bb11

bb11:                                             ; preds = %bb10
  store double %_32, double* %t, align 8
  %_35 = load double, double* %t, align 8
  %_37 = load double, double* %t, align 8
  %_36 = fadd double %_37, 2.000000e+00
  %8 = fdiv double %_35, %_36
  store double %8, double* %t, align 8
  br label %bb17

bb15:                                             ; preds = %bb12
  %_51 = load double, double* %x, align 8
  %9 = fptrunc double %_51 to float
  store float %9, float* %_50, align 4
; call core::ptr::read_volatile
  %_47 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_50)
  br label %bb16

bb13:                                             ; preds = %bb12
  %_42 = load double, double* %x, align 8
  %_41 = fmul double -2.000000e+00, %_42
; call libm::math::expm1::expm1
  %_40 = call double @_ZN4libm4math5expm15expm117hb2b69a6f4e9cd426E(double %_41)
  br label %bb14

bb14:                                             ; preds = %bb13
  store double %_40, double* %t, align 8
  %_44 = load double, double* %t, align 8
  %_43 = fneg double %_44
  %_46 = load double, double* %t, align 8
  %_45 = fadd double %_46, 2.000000e+00
  %10 = fdiv double %_43, %_45
  store double %10, double* %t, align 8
  br label %bb17

bb16:                                             ; preds = %bb15
  %_52 = load double, double* %x, align 8
  store double %_52, double* %t, align 8
  br label %bb17

bb19:                                             ; preds = %bb17
  %11 = load double, double* %t, align 8
  store double %11, double* %1, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  %_54 = load double, double* %t, align 8
  %12 = fneg double %_54
  store double %12, double* %1, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %13 = load double, double* %1, align 8
  ret double %13
}

; libm::math::tanhf::tanhf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math5tanhf5tanhf17h6ac56fd743191ae8E(float %0) unnamed_addr #1 {
start:
  %_44 = alloca float, align 4
  %tt = alloca float, align 4
  %ix = alloca i32, align 4
  %1 = alloca float, align 4
  %x = alloca float, align 4
  store float %0, float* %x, align 4
  %_3 = load float, float* %x, align 4
; call core::f32::<impl f32>::to_bits
  %2 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %_3)
  store i32 %2, i32* %ix, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = load i32, i32* %ix, align 4
  %_7.0 = lshr i32 %_6, 31
  br label %bb2

bb2:                                              ; preds = %bb1
  %sign = icmp ne i32 %_7.0, 0
  %3 = load i32, i32* %ix, align 4
  %4 = and i32 %3, 2147483647
  store i32 %4, i32* %ix, align 4
  %_9 = load i32, i32* %ix, align 4
; call core::f32::<impl f32>::from_bits
  %_8 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  store float %_8, float* %x, align 4
  %w = load i32, i32* %ix, align 4
  %_12 = icmp ugt i32 %w, 1057791828
  br i1 %_12, label %bb4, label %bb8

bb8:                                              ; preds = %bb3
  %_24 = icmp ugt i32 %w, 1048757624
  br i1 %_24, label %bb9, label %bb11

bb4:                                              ; preds = %bb3
  %_14 = icmp ugt i32 %w, 1092616192
  br i1 %_14, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %_20 = load float, float* %x, align 4
  %_19 = fmul float 2.000000e+00, %_20
; call libm::math::expm1f::expm1f
  %t = call float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %_19)
  br label %bb7

bb5:                                              ; preds = %bb4
  %_17 = load float, float* %x, align 4
  %_16 = fdiv float 0.000000e+00, %_17
  %5 = fadd float 1.000000e+00, %_16
  store float %5, float* %tt, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb13, %bb10, %bb7, %bb5
  br i1 %sign, label %bb17, label %bb18

bb7:                                              ; preds = %bb6
  %_22 = fadd float %t, 2.000000e+00
  %_21 = fdiv float 2.000000e+00, %_22
  %6 = fsub float 1.000000e+00, %_21
  store float %6, float* %tt, align 4
  br label %bb16

bb11:                                             ; preds = %bb8
  %_32 = icmp uge i32 %w, 8388608
  br i1 %_32, label %bb12, label %bb14

bb9:                                              ; preds = %bb8
  %_28 = load float, float* %x, align 4
  %_27 = fmul float 2.000000e+00, %_28
; call libm::math::expm1f::expm1f
  %t1 = call float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %_27)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_30 = fadd float %t1, 2.000000e+00
  %7 = fdiv float %t1, %_30
  store float %7, float* %tt, align 4
  br label %bb16

bb14:                                             ; preds = %bb11
  %_45 = load float, float* %x, align 4
  %_46 = load float, float* %x, align 4
  %8 = fmul float %_45, %_46
  store float %8, float* %_44, align 4
; call core::ptr::read_volatile
  %_41 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_44)
  br label %bb15

bb12:                                             ; preds = %bb11
  %_36 = load float, float* %x, align 4
  %_35 = fmul float -2.000000e+00, %_36
; call libm::math::expm1f::expm1f
  %t2 = call float @_ZN4libm4math6expm1f6expm1f17h72a81c722a389459E(float %_35)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_37 = fneg float %t2
  %_39 = fadd float %t2, 2.000000e+00
  %9 = fdiv float %_37, %_39
  store float %9, float* %tt, align 4
  br label %bb16

bb15:                                             ; preds = %bb14
  %10 = load float, float* %x, align 4
  store float %10, float* %tt, align 4
  br label %bb16

bb18:                                             ; preds = %bb16
  %11 = load float, float* %tt, align 4
  store float %11, float* %1, align 4
  br label %bb19

bb17:                                             ; preds = %bb16
  %_48 = load float, float* %tt, align 4
  %12 = fneg float %_48
  store float %12, float* %1, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %13 = load float, float* %1, align 4
  ret float %13
}

; libm::math::tgamma::sinpi
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math6tgamma5sinpi17h04855e0a9c52e16fE(double %0) unnamed_addr #1 {
start:
  %n = alloca i64, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_3 = load double, double* %x, align 8
  %2 = fmul double %_3, 5.000000e-01
  store double %2, double* %x, align 8
  %_5 = load double, double* %x, align 8
  %_7 = load double, double* %x, align 8
; call libm::math::floor::floor
  %_6 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_7)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = fsub double %_5, %_6
  %3 = fmul double 2.000000e+00, %_4
  store double %3, double* %x, align 8
  %_9 = load double, double* %x, align 8
  %_8 = fmul double 4.000000e+00, %_9
  %4 = call i64 @llvm.fptosi.sat.i64.f64(double %_8)
  store i64 %4, i64* %n, align 8
  %_11 = load i64, i64* %n, align 8
  %5 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_11, i64 1)
  %_12.0 = extractvalue { i64, i1 } %5, 0
  %_12.1 = extractvalue { i64, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %6, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %_14 = icmp eq i64 %_12.0, -9223372036854775808
  %_15 = and i1 false, %_14
  %7 = call i1 @llvm.expect.i1(i1 %_15, i1 false)
  br i1 %7, label %panic1, label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2380 to %"core::panic::location::Location"*)) #11
  unreachable

bb3:                                              ; preds = %bb2
  %8 = sdiv i64 %_12.0, 2
  store i64 %8, i64* %n, align 8
  %_18 = load i64, i64* %n, align 8
  %_17 = sitofp i64 %_18 to double
  %_16 = fmul double %_17, 5.000000e-01
  %9 = load double, double* %x, align 8
  %10 = fsub double %9, %_16
  store double %10, double* %x, align 8
  %11 = load double, double* %x, align 8
  %12 = fmul double %11, 0x400921FB54442D18
  store double %12, double* %x, align 8
  %13 = load i64, i64* %n, align 8
  switch i64 %13, label %bb8 [
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 0, label %bb8
  ]

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2380 to %"core::panic::location::Location"*)) #11
  unreachable

bb8:                                              ; preds = %bb3, %bb3
  %_24 = load double, double* %x, align 8
; call libm::math::k_sin::k_sin
  %14 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %_24, double 0.000000e+00, i32 0)
  store double %14, double* %1, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %_19 = load double, double* %x, align 8
; call libm::math::k_cos::k_cos
  %15 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %_19, double 0.000000e+00)
  store double %15, double* %1, align 8
  br label %bb9

bb5:                                              ; preds = %bb3
  %_21 = load double, double* %x, align 8
  %_20 = fneg double %_21
; call libm::math::k_sin::k_sin
  %16 = call double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %_20, double 0.000000e+00, i32 0)
  store double %16, double* %1, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_23 = load double, double* %x, align 8
; call libm::math::k_cos::k_cos
  %_22 = call double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %_23, double 0.000000e+00)
  br label %bb7

bb9:                                              ; preds = %bb4, %bb5, %bb7, %bb8
  %17 = load double, double* %1, align 8
  ret double %17

bb7:                                              ; preds = %bb6
  %18 = fneg double %_22
  store double %18, double* %1, align 8
  br label %bb9
}

; libm::math::tgamma::s
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math6tgamma1s17h9e85bcb379f3fcafE(double %x) unnamed_addr #1 {
start:
  %_51 = alloca [13 x double], align 8
  %_43 = alloca [13 x double], align 8
  %_34 = alloca { i64, i64 }, align 8
  %iter1 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_32 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_31 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_27 = alloca [13 x double], align 8
  %_19 = alloca [13 x double], align 8
  %_10 = alloca { i64, i64 }, align 8
  %iter = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_8 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_7 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_6 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %den = alloca double, align 8
  %num = alloca double, align 8
  store double 0.000000e+00, double* %num, align 8
  store double 0.000000e+00, double* %den, align 8
  %_4 = fcmp olt double %x, 8.000000e+00
  br i1 %_4, label %bb1, label %bb11

bb11:                                             ; preds = %start
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_32, i64 0, i64 12)
  br label %bb12

bb1:                                              ; preds = %start
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_8, i64 0, i64 12)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_7, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_6, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_7)
  br label %bb4

bb4:                                              ; preds = %bb3
  %0 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter to i8*
  %1 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb10, %bb4
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter)
  store { i64, i64 } %2, { i64, i64 }* %_10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %3 = bitcast { i64, i64 }* %_10 to i64*
  %_13 = load i64, i64* %3, align 8, !range !2
  switch i64 %_13, label %bb8 [
    i64 0, label %bb20
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb20:                                             ; preds = %bb15, %bb6
  %_55 = load double, double* %num, align 8
  %_56 = load double, double* %den, align 8
  %4 = fdiv double %_55, %_56
  ret double %4

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_10 to %"core::option::Option<usize>::Some"*
  %6 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %5, i32 0, i32 1
  %i = load i64, i64* %6, align 8
  %_16 = load double, double* %num, align 8
  %_15 = fmul double %_16, %x
  %7 = bitcast [13 x double]* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 getelementptr inbounds (<{ [104 x i8] }>, <{ [104 x i8] }>* @2, i32 0, i32 0, i32 0), i64 104, i1 false)
  %_22 = icmp ult i64 %i, 13
  %8 = call i1 @llvm.expect.i1(i1 %_22, i1 true)
  br i1 %8, label %bb9, label %panic

bb9:                                              ; preds = %bb7
  %9 = getelementptr inbounds [13 x double], [13 x double]* %_19, i64 0, i64 %i
  %_18 = load double, double* %9, align 8
  %10 = fadd double %_15, %_18
  store double %10, double* %num, align 8
  %_24 = load double, double* %den, align 8
  %_23 = fmul double %_24, %x
  %11 = bitcast [13 x double]* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 getelementptr inbounds (<{ [104 x i8] }>, <{ [104 x i8] }>* @3, i32 0, i32 0, i32 0), i64 104, i1 false)
  %_30 = icmp ult i64 %i, 13
  %12 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %12, label %bb10, label %panic2

panic:                                            ; preds = %bb7
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2382 to %"core::panic::location::Location"*)) #11
  unreachable

bb10:                                             ; preds = %bb9
  %13 = getelementptr inbounds [13 x double], [13 x double]* %_27, i64 0, i64 %i
  %_26 = load double, double* %13, align 8
  %14 = fadd double %_23, %_26
  store double %14, double* %den, align 8
  br label %bb5

panic2:                                           ; preds = %bb9
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2384 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_31, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_32)
  br label %bb13

bb13:                                             ; preds = %bb12
  %15 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter1 to i8*
  %16 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb19, %bb13
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %17 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter1)
  store { i64, i64 } %17, { i64, i64 }* %_34, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  %18 = bitcast { i64, i64 }* %_34 to i64*
  %_37 = load i64, i64* %18, align 8, !range !2
  switch i64 %_37, label %bb17 [
    i64 0, label %bb20
    i64 1, label %bb16
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %19 = bitcast { i64, i64 }* %_34 to %"core::option::Option<usize>::Some"*
  %20 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %19, i32 0, i32 1
  %i3 = load i64, i64* %20, align 8
  %_40 = load double, double* %num, align 8
  %_39 = fdiv double %_40, %x
  %21 = bitcast [13 x double]* %_43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 getelementptr inbounds (<{ [104 x i8] }>, <{ [104 x i8] }>* @2, i32 0, i32 0, i32 0), i64 104, i1 false)
  %_46 = icmp ult i64 %i3, 13
  %22 = call i1 @llvm.expect.i1(i1 %_46, i1 true)
  br i1 %22, label %bb18, label %panic4

bb18:                                             ; preds = %bb16
  %23 = getelementptr inbounds [13 x double], [13 x double]* %_43, i64 0, i64 %i3
  %_42 = load double, double* %23, align 8
  %24 = fadd double %_39, %_42
  store double %24, double* %num, align 8
  %_48 = load double, double* %den, align 8
  %_47 = fdiv double %_48, %x
  %25 = bitcast [13 x double]* %_51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 getelementptr inbounds (<{ [104 x i8] }>, <{ [104 x i8] }>* @3, i32 0, i32 0, i32 0), i64 104, i1 false)
  %_54 = icmp ult i64 %i3, 13
  %26 = call i1 @llvm.expect.i1(i1 %_54, i1 true)
  br i1 %26, label %bb19, label %panic5

panic4:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i3, i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2386 to %"core::panic::location::Location"*)) #11
  unreachable

bb19:                                             ; preds = %bb18
  %27 = getelementptr inbounds [13 x double], [13 x double]* %_51, i64 0, i64 %i3
  %_50 = load double, double* %27, align 8
  %28 = fadd double %_47, %_50
  store double %28, double* %den, align 8
  br label %bb14

panic5:                                           ; preds = %bb18
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i3, i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2388 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::tgamma::tgamma
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math6tgamma6tgamma17h88a9c166c7d4636bE(double %0) unnamed_addr #1 {
start:
  %_60 = alloca double, align 8
  %_47 = alloca float, align 4
  %_33 = alloca [23 x double], align 8
  %r = alloca double, align 8
  %z = alloca double, align 8
  %dy = alloca double, align 8
  %y = alloca double, align 8
  %1 = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  %_3 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %u = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %_13.0 = lshr i64 %u, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = trunc i64 %_13.0 to i32
  %ix = and i32 %_10, 2147483647
  %_17.0 = lshr i64 %u, 63
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = icmp ne i64 %_17.0, 0
  %_18 = icmp uge i32 %ix, 2146435072
  br i1 %_18, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_21 = icmp ult i32 %ix, 1016070144
  br i1 %_21, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  %_20 = load double, double* %x, align 8
  %2 = fadd double %_20, 0x7FF0000000000000
  store double %2, double* %1, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb25, %bb23, %bb22, %bb14, %bb10, %bb6, %bb4
  %3 = load double, double* %1, align 8
  ret double %3

bb7:                                              ; preds = %bb5
  %_26 = load double, double* %x, align 8
  %_28 = load double, double* %x, align 8
; call libm::math::floor::floor
  %_27 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_28)
  br label %bb8

bb6:                                              ; preds = %bb5
  %_24 = load double, double* %x, align 8
  %4 = fdiv double 1.000000e+00, %_24
  store double %4, double* %1, align 8
  br label %bb39

bb8:                                              ; preds = %bb7
  %_25 = fcmp oeq double %_26, %_27
  br i1 %_25, label %bb9, label %bb15

bb15:                                             ; preds = %bb11, %bb8
  %_40 = icmp uge i32 %ix, 1080492032
  br i1 %_40, label %bb16, label %bb26

bb9:                                              ; preds = %bb8
  br i1 %sign, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %_31 = load double, double* %x, align 8
  %_30 = fcmp ole double %_31, 2.300000e+01
  br i1 %_30, label %bb12, label %bb15

bb10:                                             ; preds = %bb9
  store double 0x7FF8000000000000, double* %1, align 8
  br label %bb39

bb12:                                             ; preds = %bb11
  %5 = bitcast [23 x double]* %_33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 getelementptr inbounds (<{ [184 x i8] }>, <{ [184 x i8] }>* @4, i32 0, i32 0, i32 0), i64 184, i1 false)
  %_36 = load double, double* %x, align 8
  %_35 = call i64 @llvm.fptoui.sat.i64.f64(double %_36)
  %6 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_35, i64 1)
  %_37.0 = extractvalue { i64, i1 } %6, 0
  %_37.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %7, label %panic, label %bb13

bb13:                                             ; preds = %bb12
  %_39 = icmp ult i64 %_37.0, 23
  %8 = call i1 @llvm.expect.i1(i1 %_39, i1 true)
  br i1 %8, label %bb14, label %panic1

panic:                                            ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2390 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13
  %9 = getelementptr inbounds [23 x double], [23 x double]* %_33, i64 0, i64 %_37.0
  %10 = load double, double* %9, align 8
  store double %10, double* %1, align 8
  br label %bb39

panic1:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_37.0, i64 23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2392 to %"core::panic::location::Location"*)) #11
  unreachable

bb26:                                             ; preds = %bb15
  br i1 %sign, label %bb27, label %bb28

bb16:                                             ; preds = %bb15
  br i1 %sign, label %bb17, label %bb24

bb24:                                             ; preds = %bb16
; call core::f64::<impl f64>::from_bits
  %x1p1023 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9214364837600034816)
  br label %bb25

bb17:                                             ; preds = %bb16
; call core::f64::<impl f64>::from_bits
  %x1p_126 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4039728865751334912)
  br label %bb18

bb18:                                             ; preds = %bb17
  %_50 = load double, double* %x, align 8
  %_48 = fdiv double %x1p_126, %_50
  %11 = fptrunc double %_48 to float
  store float %11, float* %_47, align 4
; call core::ptr::read_volatile
  %_44 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_47)
  br label %bb19

bb19:                                             ; preds = %bb18
  %_54 = load double, double* %x, align 8
; call libm::math::floor::floor
  %_53 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_54)
  br label %bb20

bb20:                                             ; preds = %bb19
  %_52 = fmul double %_53, 5.000000e-01
  %_57 = load double, double* %x, align 8
  %_56 = fmul double %_57, 5.000000e-01
; call libm::math::floor::floor
  %_55 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_56)
  br label %bb21

bb21:                                             ; preds = %bb20
  %_51 = fcmp oeq double %_52, %_55
  br i1 %_51, label %bb22, label %bb23

bb23:                                             ; preds = %bb21
  store double -0.000000e+00, double* %1, align 8
  br label %bb39

bb22:                                             ; preds = %bb21
  store double 0.000000e+00, double* %1, align 8
  br label %bb39

bb25:                                             ; preds = %bb24
  %12 = load double, double* %x, align 8
  %13 = fmul double %12, %x1p1023
  store double %13, double* %x, align 8
  %14 = load double, double* %x, align 8
  store double %14, double* %1, align 8
  br label %bb39

bb28:                                             ; preds = %bb26
  %15 = load double, double* %x, align 8
  store double %15, double* %_60, align 8
  br label %bb29

bb27:                                             ; preds = %bb26
  %_62 = load double, double* %x, align 8
  %16 = fneg double %_62
  store double %16, double* %_60, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %absx = load double, double* %_60, align 8
  %17 = fadd double %absx, 0x40161945B9800000
  store double %17, double* %y, align 8
  %_64 = fcmp ogt double %absx, 0x40161945B9800000
  br i1 %_64, label %bb30, label %bb31

bb31:                                             ; preds = %bb29
  %_68 = load double, double* %y, align 8
  %18 = fsub double %_68, 0x40161945B9800000
  store double %18, double* %dy, align 8
  %19 = load double, double* %dy, align 8
  %20 = fsub double %19, %absx
  store double %20, double* %dy, align 8
  br label %bb32

bb30:                                             ; preds = %bb29
  %_66 = load double, double* %y, align 8
  %21 = fsub double %_66, %absx
  store double %21, double* %dy, align 8
  %22 = load double, double* %dy, align 8
  %23 = fsub double %22, 0x40161945B9800000
  store double %23, double* %dy, align 8
  br label %bb32

bb32:                                             ; preds = %bb31, %bb30
  %24 = fsub double %absx, 5.000000e-01
  store double %24, double* %z, align 8
; call libm::math::tgamma::s
  %_71 = call double @_ZN4libm4math6tgamma1s17h9e85bcb379f3fcafE(double %absx)
  br label %bb33

bb33:                                             ; preds = %bb32
  %_75 = load double, double* %y, align 8
  %_74 = fneg double %_75
; call libm::math::exp::exp
  %_73 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_74)
  br label %bb34

bb34:                                             ; preds = %bb33
  %25 = fmul double %_71, %_73
  store double %25, double* %r, align 8
  %_77 = load double, double* %x, align 8
  %_76 = fcmp olt double %_77, 0.000000e+00
  br i1 %_76, label %bb35, label %bb37

bb37:                                             ; preds = %bb36, %bb34
  %_90 = load double, double* %dy, align 8
  %_89 = fmul double %_90, 0x40181945B9800000
  %_92 = load double, double* %r, align 8
  %_88 = fmul double %_89, %_92
  %_93 = load double, double* %y, align 8
  %_87 = fdiv double %_88, %_93
  %26 = load double, double* %r, align 8
  %27 = fadd double %26, %_87
  store double %27, double* %r, align 8
  %_95 = load double, double* %y, align 8
  %_97 = load double, double* %z, align 8
  %_96 = fmul double 5.000000e-01, %_97
; call libm::math::pow::pow
  %_94 = call double @_ZN4libm4math3pow3pow17haa9e7388182ede4dE(double %_95, double %_96)
  br label %bb38

bb35:                                             ; preds = %bb34
; call libm::math::tgamma::sinpi
  %_81 = call double @_ZN4libm4math6tgamma5sinpi17h04855e0a9c52e16fE(double %absx)
  br label %bb36

bb36:                                             ; preds = %bb35
  %_80 = fmul double %_81, %absx
  %_84 = load double, double* %r, align 8
  %_79 = fmul double %_80, %_84
  %28 = fdiv double 0xC00921FB54442D18, %_79
  store double %28, double* %r, align 8
  %_85 = load double, double* %dy, align 8
  %29 = fneg double %_85
  store double %29, double* %dy, align 8
  %_86 = load double, double* %z, align 8
  %30 = fneg double %_86
  store double %30, double* %z, align 8
  br label %bb37

bb38:                                             ; preds = %bb37
  store double %_94, double* %z, align 8
  %_99 = load double, double* %r, align 8
  %_100 = load double, double* %z, align 8
  %_98 = fmul double %_99, %_100
  %_101 = load double, double* %z, align 8
  %31 = fmul double %_98, %_101
  store double %31, double* %y, align 8
  %32 = load double, double* %y, align 8
  store double %32, double* %1, align 8
  br label %bb39
}

; libm::math::tgammaf::tgammaf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math7tgammaf7tgammaf17h5623871ff3ab3d06E(float %x) unnamed_addr #1 {
start:
  %_3 = fpext float %x to double
; call libm::math::tgamma::tgamma
  %_2 = call double @_ZN4libm4math6tgamma6tgamma17h88a9c166c7d4636bE(double %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = fptrunc double %_2 to float
  ret float %0
}

; libm::math::trunc::trunc
; Function Attrs: nonlazybind uwtable
define double @_ZN4libm4math5trunc5trunc17h4ac36e39b4770ffbE(double %x) unnamed_addr #1 {
start:
  %_29 = alloca double, align 8
  %e = alloca i64, align 8
  %i = alloca i64, align 8
  %0 = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p120 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 5147614374084476928)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %1 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %1, i64* %i, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = load i64, i64* %i, align 8
  %_11.0 = lshr i64 %_10, 52
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i64 %_11.0, 2047
  %2 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_8, i64 1023)
  %_12.0 = extractvalue { i64, i1 } %2, 0
  %_12.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %3, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %4 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_12.0, i64 12)
  %_13.0 = extractvalue { i64, i1 } %4, 0
  %_13.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %5, label %panic1, label %bb5

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2394 to %"core::panic::location::Location"*)) #11
  unreachable

bb5:                                              ; preds = %bb4
  store i64 %_13.0, i64* %e, align 8
  %_16 = load i64, i64* %e, align 8
  %_15 = icmp sge i64 %_16, 64
  br i1 %_15, label %bb6, label %bb7

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2394 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb5
  %_19 = load i64, i64* %e, align 8
  %_18 = icmp slt i64 %_19, 12
  br i1 %_18, label %bb8, label %bb9

bb6:                                              ; preds = %bb5
  store double %x, double* %0, align 8
  br label %bb14

bb14:                                             ; preds = %bb11, %bb13, %bb6
  %6 = load double, double* %0, align 8
  ret double %6

bb9:                                              ; preds = %bb8, %bb7
  %_21 = load i64, i64* %e, align 8
  %7 = and i64 %_21, -64
  %_22.1 = icmp ne i64 %7, 0
  %8 = and i64 %_21, 63
  %_22.0 = lshr i64 -1, %8
  %9 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %9, label %panic2, label %bb10

bb8:                                              ; preds = %bb7
  store i64 1, i64* %e, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_24 = load i64, i64* %i, align 8
  %_23 = and i64 %_24, %_22.0
  %10 = icmp eq i64 %_23, 0
  br i1 %10, label %bb11, label %bb12

panic2:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2396 to %"core::panic::location::Location"*)) #11
  unreachable

bb11:                                             ; preds = %bb10
  store double %x, double* %0, align 8
  br label %bb14

bb12:                                             ; preds = %bb10
  %11 = fadd double %x, %x1p120
  store double %11, double* %_29, align 8
; call core::ptr::read_volatile
  %_26 = call double @_ZN4core3ptr13read_volatile17h3939cd8dc3901112E(double* %_29)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_32 = xor i64 %_22.0, -1
  %12 = load i64, i64* %i, align 8
  %13 = and i64 %12, %_32
  store i64 %13, i64* %i, align 8
  %_34 = load i64, i64* %i, align 8
; call core::f64::<impl f64>::from_bits
  %14 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_34)
  store double %14, double* %0, align 8
  br label %bb14
}

; libm::math::truncf::truncf
; Function Attrs: nonlazybind uwtable
define float @_ZN4libm4math6truncf6truncf17h9a546d48014e2929E(float %x) unnamed_addr #1 {
start:
  %_29 = alloca float, align 4
  %e = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = alloca float, align 4
; call core::f32::<impl f32>::from_bits
  %x1p120 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2071986176)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::to_bits
  %1 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  store i32 %1, i32* %i, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = load i32, i32* %i, align 4
  %_11.0 = lshr i32 %_10, 23
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = and i32 %_11.0, 255
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_8, i32 127)
  %_12.0 = extractvalue { i32, i1 } %2, 0
  %_12.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %3, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_12.0, i32 9)
  %_13.0 = extractvalue { i32, i1 } %4, 0
  %_13.1 = extractvalue { i32, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %5, label %panic1, label %bb5

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2398 to %"core::panic::location::Location"*)) #11
  unreachable

bb5:                                              ; preds = %bb4
  store i32 %_13.0, i32* %e, align 4
  %_16 = load i32, i32* %e, align 4
  %_15 = icmp sge i32 %_16, 32
  br i1 %_15, label %bb6, label %bb7

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2398 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb5
  %_19 = load i32, i32* %e, align 4
  %_18 = icmp slt i32 %_19, 9
  br i1 %_18, label %bb8, label %bb9

bb6:                                              ; preds = %bb5
  store float %x, float* %0, align 4
  br label %bb14

bb14:                                             ; preds = %bb11, %bb13, %bb6
  %6 = load float, float* %0, align 4
  ret float %6

bb9:                                              ; preds = %bb8, %bb7
  %_21 = load i32, i32* %e, align 4
  %7 = and i32 %_21, -32
  %_22.1 = icmp ne i32 %7, 0
  %8 = and i32 %_21, 31
  %_22.0 = lshr i32 -1, %8
  %9 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %9, label %panic2, label %bb10

bb8:                                              ; preds = %bb7
  store i32 1, i32* %e, align 4
  br label %bb9

bb10:                                             ; preds = %bb9
  %_24 = load i32, i32* %i, align 4
  %_23 = and i32 %_24, %_22.0
  %10 = icmp eq i32 %_23, 0
  br i1 %10, label %bb11, label %bb12

panic2:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2400 to %"core::panic::location::Location"*)) #11
  unreachable

bb11:                                             ; preds = %bb10
  store float %x, float* %0, align 4
  br label %bb14

bb12:                                             ; preds = %bb10
  %11 = fadd float %x, %x1p120
  store float %11, float* %_29, align 4
; call core::ptr::read_volatile
  %_26 = call float @_ZN4core3ptr13read_volatile17hcef7900decd3d06fE(float* %_29)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_32 = xor i32 %_22.0, -1
  %12 = load i32, i32* %i, align 4
  %13 = and i32 %12, %_32
  store i32 %13, i32* %i, align 4
  %_34 = load i32, i32* %i, align 4
; call core::f32::<impl f32>::from_bits
  %14 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_34)
  store float %14, float* %0, align 4
  br label %bb14
}

; libm::math::expo2::expo2
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math5expo25expo217h05acb0ad70c59e4bE(double %x) unnamed_addr #1 {
start:
; call core::f64::<impl f64>::from_bits
  %kln2 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4653942887746821515)
  br label %bb1

bb1:                                              ; preds = %start
; call libm::math::combine_words
  %scale = call double @_ZN4libm4math13combine_words17h3c36b36db76fc1a1E(i32 2143289344, i32 0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = fsub double %x, %kln2
; call libm::math::exp::exp
  %_6 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = fmul double %_6, %scale
  %0 = fmul double %_5, %scale
  ret double %0
}

; libm::math::fenv::feclearexcept
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math4fenv13feclearexcept17h66e97fa37d1e62b2E(i32 %_mask) unnamed_addr #0 {
start:
  ret i32 0
}

; libm::math::fenv::feraiseexcept
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math4fenv13feraiseexcept17h22257e4b10f4b82fE(i32 %_mask) unnamed_addr #0 {
start:
  ret i32 0
}

; libm::math::fenv::fetestexcept
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math4fenv12fetestexcept17h3e334717ad6069e5E(i32 %_mask) unnamed_addr #0 {
start:
  ret i32 0
}

; libm::math::fenv::fegetround
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math4fenv10fegetround17hf4699ae20e4822f1E() unnamed_addr #0 {
start:
  ret i32 0
}

; libm::math::fenv::fesetround
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math4fenv10fesetround17hf5e6fde9697553c2E(i32 %_r) unnamed_addr #0 {
start:
  ret i32 0
}

; libm::math::k_cos::k_cos
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math5k_cos5k_cos17h76e12e9525c9afccE(double %x, double %y) unnamed_addr #1 {
start:
  %z = fmul double %x, %x
  %w = fmul double %z, %z
  %_16 = fmul double %z, 0x3EFA01A019CB1590
  %_15 = fadd double 0xBF56C16C16C15177, %_16
  %_13 = fmul double %z, %_15
  %_12 = fadd double 0x3FA555555555554C, %_13
  %_10 = fmul double %z, %_12
  %_19 = fmul double %w, %w
  %_26 = fmul double %z, 0xBDA8FAE9BE8838D4
  %_25 = fadd double 0x3E21EE9EBDB4B1C4, %_26
  %_23 = fmul double %z, %_25
  %_22 = fadd double 0xBE927E4F809C52AD, %_23
  %_18 = fmul double %_19, %_22
  %r = fadd double %_10, %_18
  %hz = fmul double 5.000000e-01, %z
  %w1 = fsub double 1.000000e+00, %hz
  %_35 = fsub double 1.000000e+00, %w1
  %_34 = fsub double %_35, %hz
  %_39 = fmul double %z, %r
  %_42 = fmul double %x, %y
  %_38 = fsub double %_39, %_42
  %_33 = fadd double %_34, %_38
  %0 = fadd double %w1, %_33
  ret double %0
}

; libm::math::k_cosf::k_cosf
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math6k_cosf6k_cosf17h2722c216d1bf93cbE(double %x) unnamed_addr #1 {
start:
  %z = fmul double %x, %x
  %w = fmul double %z, %z
  %_9 = fmul double %z, 0x3EF99342E0EE5069
  %r = fadd double 0xBF56C087E80F1E27, %_9
  %_14 = fmul double %z, 0xBFDFFFFFFD0C5E81
  %_13 = fadd double 1.000000e+00, %_14
  %_16 = fmul double %w, 0x3FA55553E1053A42
  %_12 = fadd double %_13, %_16
  %_19 = fmul double %w, %z
  %_18 = fmul double %_19, %r
  %_11 = fadd double %_12, %_18
  %0 = fptrunc double %_11 to float
  ret float %0
}

; libm::math::k_expo2::k_expo2
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math7k_expo27k_expo217hee527fb0aa9df415E(double %x) unnamed_addr #1 {
start:
; call core::f64::<impl f64>::from_bits
  %k_ln2 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4653942887746821515)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %scale = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 9205357638345293824)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = fsub double %x, %k_ln2
; call libm::math::exp::exp
  %_6 = call double @_ZN4libm4math3exp3exp17h17ae5bf82adab794E(double %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = fmul double %_6, %scale
  %0 = fmul double %_5, %scale
  ret double %0
}

; libm::math::k_expo2f::k_expo2f
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math8k_expo2f8k_expo2f17h52ccc5750a47ab79E(float %x) unnamed_addr #1 {
start:
; call core::f32::<impl f32>::from_bits
  %k_ln2 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 1126359996)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f32::<impl f32>::from_bits
  %scale = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 2046820352)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = fsub float %x, %k_ln2
; call libm::math::expf::expf
  %_6 = call float @_ZN4libm4math4expf4expf17h08ae0fc239dada56E(float %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = fmul float %_6, %scale
  %0 = fmul float %_5, %scale
  ret float %0
}

; libm::math::k_sin::k_sin
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math5k_sin5k_sin17hc448c76813e29f54E(double %x, double %y, i32 %iy) unnamed_addr #1 {
start:
  %0 = alloca double, align 8
  %z = fmul double %x, %x
  %w = fmul double %z, %z
  %_15 = fmul double %z, 0x3EC71DE357B1FE7D
  %_14 = fadd double 0xBF2A01A019C161D5, %_15
  %_12 = fmul double %z, %_14
  %_11 = fadd double 0x3F8111111110F8A6, %_12
  %_18 = fmul double %z, %w
  %_22 = fmul double %z, 0x3DE5D93A5ACFD57C
  %_21 = fadd double 0xBE5AE5E68A2B9CEB, %_22
  %_17 = fmul double %_18, %_21
  %r = fadd double %_11, %_17
  %v = fmul double %z, %x
  %1 = icmp eq i32 %iy, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %_32 = fmul double %z, %r
  %_31 = fadd double 0xBFC5555555555549, %_32
  %_29 = fmul double %v, %_31
  %2 = fadd double %x, %_29
  store double %2, double* %0, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %_41 = fmul double 5.000000e-01, %y
  %_43 = fmul double %v, %r
  %_40 = fsub double %_41, %_43
  %_38 = fmul double %z, %_40
  %_37 = fsub double %_38, %y
  %_47 = fmul double %v, 0xBFC5555555555549
  %_36 = fsub double %_37, %_47
  %3 = fsub double %x, %_36
  store double %3, double* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load double, double* %0, align 8
  ret double %4
}

; libm::math::k_sinf::k_sinf
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math6k_sinf6k_sinf17hb506e97602c22b97E(double %x) unnamed_addr #1 {
start:
  %z = fmul double %x, %x
  %w = fmul double %z, %z
  %_9 = fmul double %z, 0x3EC6CD878C3B46A7
  %r = fadd double 0xBF2A00F9E2CAE774, %_9
  %s = fmul double %z, %x
  %_20 = fmul double %z, 0x3F811110896EFBB2
  %_19 = fadd double 0xBFC5555554CBAC77, %_20
  %_17 = fmul double %s, %_19
  %_15 = fadd double %x, %_17
  %_23 = fmul double %s, %w
  %_22 = fmul double %_23, %r
  %_14 = fadd double %_15, %_22
  %0 = fptrunc double %_14 to float
  ret float %0
}

; libm::math::k_tan::k_tan
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math5k_tan5k_tan17h091c7f1824693003E(double %0, double %1, i32 %odd) unnamed_addr #1 {
start:
  %2 = alloca double, align 8
  %y = alloca double, align 8
  %x = alloca double, align 8
  store double %0, double* %x, align 8
  store double %1, double* %y, align 8
  %_7 = load double, double* %x, align 8
; call core::f64::<impl f64>::to_bits
  %_6 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_7)
  br label %bb1

bb1:                                              ; preds = %start
  %_8.0 = lshr i64 %_6, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %hx = trunc i64 %_8.0 to i32
  %_10 = and i32 %hx, 2147483647
  %big = icmp uge i32 %_10, 1072010280
  br i1 %big, label %bb3, label %bb7

bb7:                                              ; preds = %bb6, %bb2
  %_24 = load double, double* %x, align 8
  %_25 = load double, double* %x, align 8
  %z = fmul double %_24, %_25
  %w = fmul double %z, %z
  %_47 = fmul double %w, 0xBEF375CBDB605373
  %_45 = fadd double 0x3F147E88A03792A6, %_47
  %_43 = fmul double %w, %_45
  %_41 = fadd double 0x3F4344D8F2F26501, %_43
  %_39 = fmul double %w, %_41
  %_37 = fadd double 0x3F6D6D22C9560328, %_39
  %_35 = fmul double %w, %_37
  %_33 = fadd double 0x3F9664F48406D637, %_35
  %_31 = fmul double %w, %_33
  %r = fadd double 0x3FC111111110FE7A, %_31
  %_70 = fmul double %w, 0x3EFB2A7074BF7AD4
  %_68 = fadd double 0x3F12B80F32F0A7E9, %_70
  %_66 = fmul double %w, %_68
  %_64 = fadd double 0x3F3026F71A8D1068, %_66
  %_62 = fmul double %w, %_64
  %_60 = fadd double 0x3F57DBC8FEE08315, %_62
  %_58 = fmul double %w, %_60
  %_56 = fadd double 0x3F8226E3E96E8493, %_58
  %_54 = fmul double %w, %_56
  %_52 = fadd double 0x3FABA1BA1BB341FE, %_54
  %v = fmul double %z, %_52
  %_75 = load double, double* %x, align 8
  %s = fmul double %z, %_75
  %_78 = load double, double* %y, align 8
  %_84 = fadd double %r, %v
  %_82 = fmul double %s, %_84
  %_87 = load double, double* %y, align 8
  %_81 = fadd double %_82, %_87
  %_79 = fmul double %z, %_81
  %_77 = fadd double %_78, %_79
  %_88 = fmul double %s, 0x3FD5555555555563
  %r1 = fadd double %_77, %_88
  %_92 = load double, double* %x, align 8
  %w2 = fadd double %_92, %r1
  br i1 %big, label %bb8, label %bb12

bb3:                                              ; preds = %bb2
  %_15.0 = lshr i32 %hx, 31
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i32 %_15.0, 0
  br i1 %3, label %bb6, label %bb5

bb6:                                              ; preds = %bb5, %bb4
  %_20 = load double, double* %x, align 8
  %_19 = fsub double 0x3FE921FB54442D18, %_20
  %_22 = load double, double* %y, align 8
  %_21 = fsub double 0x3C81A62633145C07, %_22
  %4 = fadd double %_19, %_21
  store double %4, double* %x, align 8
  store double 0.000000e+00, double* %y, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  %_17 = load double, double* %x, align 8
  %5 = fneg double %_17
  store double %5, double* %x, align 8
  %_18 = load double, double* %y, align 8
  %6 = fneg double %_18
  store double %6, double* %y, align 8
  br label %bb6

bb12:                                             ; preds = %bb7
  %7 = icmp eq i32 %odd, 0
  br i1 %7, label %bb13, label %bb14

bb8:                                              ; preds = %bb7
  %_97.0 = lshr i32 %hx, 31
  br label %bb9

bb9:                                              ; preds = %bb8
  %_100 = sitofp i32 %odd to double
  %_99 = fmul double 2.000000e+00, %_100
  %s3 = fsub double 1.000000e+00, %_99
  %_106 = load double, double* %x, align 8
  %_110 = fmul double %w2, %w2
  %_113 = fadd double %w2, %s3
  %_109 = fdiv double %_110, %_113
  %_107 = fsub double %r1, %_109
  %_105 = fadd double %_106, %_107
  %_104 = fmul double 2.000000e+00, %_105
  %v4 = fsub double %s3, %_104
  %8 = icmp eq i32 %_97.0, 0
  br i1 %8, label %bb11, label %bb10

bb11:                                             ; preds = %bb9
  store double %v4, double* %2, align 8
  br label %bb17

bb10:                                             ; preds = %bb9
  %9 = fneg double %v4
  store double %9, double* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb13, %bb16, %bb11, %bb10
  %10 = load double, double* %2, align 8
  ret double %10

bb13:                                             ; preds = %bb12
  store double %w2, double* %2, align 8
  br label %bb17

bb14:                                             ; preds = %bb12
; call libm::math::k_tan::zero_low_word
  %w0 = call double @_ZN4libm4math5k_tan13zero_low_word17hbc9f97cee665df69E(double %w2)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_125 = load double, double* %x, align 8
  %_123 = fsub double %w0, %_125
  %v5 = fsub double %r1, %_123
  %a = fdiv double -1.000000e+00, %w2
; call libm::math::k_tan::zero_low_word
  %a0 = call double @_ZN4libm4math5k_tan13zero_low_word17hbc9f97cee665df69E(double %a)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_135 = fmul double %a0, %w0
  %_134 = fadd double 1.000000e+00, %_135
  %_138 = fmul double %a0, %v5
  %_133 = fadd double %_134, %_138
  %_131 = fmul double %a, %_133
  %11 = fadd double %a0, %_131
  store double %11, double* %2, align 8
  br label %bb17
}

; libm::math::k_tan::zero_low_word
; Function Attrs: nonlazybind uwtable
define internal double @_ZN4libm4math5k_tan13zero_low_word17hbc9f97cee665df69E(double %x) unnamed_addr #1 {
start:
; call core::f64::<impl f64>::to_bits
  %_3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i64 %_3, -4294967296
; call core::f64::<impl f64>::from_bits
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %0
}

; libm::math::k_tanf::k_tanf
; Function Attrs: nonlazybind uwtable
define internal float @_ZN4libm4math6k_tanf6k_tanf17ha66e3a917e3b6e32E(double %x, i1 zeroext %odd) unnamed_addr #1 {
start:
  %_41 = alloca double, align 8
  %r = alloca double, align 8
  %z = fmul double %x, %x
  %_8 = fmul double %z, 0x3F8362B9BF971BCD
  %0 = fadd double 0x3F685DADFCECF44E, %_8
  store double %0, double* %r, align 8
  %_13 = fmul double %z, 0x3F991DF3908C33CE
  %t = fadd double 0x3FAB54C91D865AFE, %_13
  %w = fmul double %z, %z
  %s = fmul double %z, %x
  %_24 = fmul double %z, 0x3FC112FD38999F72
  %u = fadd double 0x3FD5554D3418C99F, %_24
  %_29 = fmul double %s, %u
  %_27 = fadd double %x, %_29
  %_33 = fmul double %s, %w
  %_40 = load double, double* %r, align 8
  %_38 = fmul double %w, %_40
  %_36 = fadd double %t, %_38
  %_32 = fmul double %_33, %_36
  %1 = fadd double %_27, %_32
  store double %1, double* %r, align 8
  br i1 %odd, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = load double, double* %r, align 8
  store double %2, double* %_41, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %_43 = load double, double* %r, align 8
  %3 = fdiv double -1.000000e+00, %_43
  store double %3, double* %_41, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load double, double* %_41, align 8
  %5 = fptrunc double %4 to float
  ret float %5
}

; libm::math::rem_pio2::rem_pio2
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4libm4math8rem_pio28rem_pio217h9d712b10bce41dc7E({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x) unnamed_addr #1 {
start:
  %_199 = alloca i64, align 8
  %ty = alloca [3 x double], align 8
  %_183 = alloca i8, align 1
  %i = alloca i64, align 8
  %_156 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_154 = alloca { i64, i64 }, align 8
  %tx = alloca [3 x double], align 8
  %z = alloca double, align 8
  %ui = alloca i64, align 8
; call core::f64::<impl f64>::from_bits
  %x1p24 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4715268809856909312)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::to_bits
  %_5 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7.0 = lshr i64 %_5, 63
  br label %bb3

bb3:                                              ; preds = %bb2
  %sign = trunc i64 %_7.0 to i32
; call core::f64::<impl f64>::to_bits
  %_11 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13.0 = lshr i64 %_11, 32
  br label %bb5

bb5:                                              ; preds = %bb4
  %_9 = trunc i64 %_13.0 to i32
  %ix = and i32 %_9, 2147483647
  %_14 = icmp ule i32 %ix, 1074752122
  br i1 %_14, label %bb6, label %bb15

bb15:                                             ; preds = %bb5
  %_70 = icmp ule i32 %ix, 1075594811
  br i1 %_70, label %bb16, label %bb17

bb6:                                              ; preds = %bb5
  %_16 = and i32 %ix, 1048575
  %1 = icmp eq i32 %_16, 598523
  br i1 %1, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
; call libm::math::rem_pio2::rem_pio2::medium
  call void @_ZN4libm4math8rem_pio28rem_pio26medium17h6958a8d64950edafE({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x, i32 %ix)
  br label %bb70

bb8:                                              ; preds = %bb6
  %_20 = icmp ule i32 %ix, 1073928572
  br i1 %_20, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  %2 = icmp eq i32 %sign, 0
  br i1 %2, label %bb13, label %bb14

bb9:                                              ; preds = %bb8
  %3 = icmp eq i32 %sign, 0
  br i1 %3, label %bb11, label %bb12

bb11:                                             ; preds = %bb9
  %z2 = fsub double %x, 0x3FF921FB54400000
  %y03 = fsub double %z2, 0x3DD0B4611A626331
  %_28 = fsub double %z2, %y03
  %y14 = fsub double %_28, 0x3DD0B4611A626331
  %4 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y03, double* %5, align 8
  %6 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y14, double* %6, align 8
  br label %bb70

bb12:                                             ; preds = %bb9
  %z1 = fadd double %x, 0x3FF921FB54400000
  %y0 = fadd double %z1, 0x3DD0B4611A626331
  %_38 = fsub double %z1, %y0
  %y1 = fadd double %_38, 0x3DD0B4611A626331
  %7 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 -1, i32* %7, align 8
  %8 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y0, double* %8, align 8
  %9 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y1, double* %9, align 8
  br label %bb70

bb70:                                             ; preds = %bb69, %bb64, %bb30, %bb28, %bb24, %bb26, %bb27, %bb19, %bb21, %bb22, %bb7, %bb13, %bb14, %bb11, %bb12
  ret void

bb13:                                             ; preds = %bb10
  %z8 = fsub double %x, 0x400921FB54400000
  %y09 = fsub double %z8, 0x3DE0B4611A626331
  %_51 = fsub double %z8, %y09
  %y110 = fsub double %_51, 0x3DE0B4611A626331
  %10 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 2, i32* %10, align 8
  %11 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y09, double* %11, align 8
  %12 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y110, double* %12, align 8
  br label %bb70

bb14:                                             ; preds = %bb10
  %z5 = fadd double %x, 0x400921FB54400000
  %y06 = fadd double %z5, 0x3DE0B4611A626331
  %_64 = fsub double %z5, %y06
  %y17 = fadd double %_64, 0x3DE0B4611A626331
  %13 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 -2, i32* %13, align 8
  %14 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y06, double* %14, align 8
  %15 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y17, double* %15, align 8
  br label %bb70

bb17:                                             ; preds = %bb15
  %_134 = icmp ult i32 %ix, 1094263291
  br i1 %_134, label %bb28, label %bb29

bb16:                                             ; preds = %bb15
  %_72 = icmp ule i32 %ix, 1075183036
  br i1 %_72, label %bb18, label %bb23

bb23:                                             ; preds = %bb16
  %16 = icmp eq i32 %ix, 1075388923
  br i1 %16, label %bb24, label %bb25

bb18:                                             ; preds = %bb16
  %17 = icmp eq i32 %ix, 1074977148
  br i1 %17, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
; call libm::math::rem_pio2::rem_pio2::medium
  call void @_ZN4libm4math8rem_pio28rem_pio26medium17h6958a8d64950edafE({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x, i32 %ix)
  br label %bb70

bb20:                                             ; preds = %bb18
  %18 = icmp eq i32 %sign, 0
  br i1 %18, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %z14 = fsub double %x, 0x4012D97C7F300000
  %y015 = fsub double %z14, 0x3DE90E91A79394CA
  %_85 = fsub double %z14, %y015
  %y116 = fsub double %_85, 0x3DE90E91A79394CA
  %19 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 3, i32* %19, align 8
  %20 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y015, double* %20, align 8
  %21 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y116, double* %21, align 8
  br label %bb70

bb22:                                             ; preds = %bb20
  %z11 = fadd double %x, 0x4012D97C7F300000
  %y012 = fadd double %z11, 0x3DE90E91A79394CA
  %_98 = fsub double %z11, %y012
  %y113 = fadd double %_98, 0x3DE90E91A79394CA
  %22 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 -3, i32* %22, align 8
  %23 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y012, double* %23, align 8
  %24 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y113, double* %24, align 8
  br label %bb70

bb24:                                             ; preds = %bb23
; call libm::math::rem_pio2::rem_pio2::medium
  call void @_ZN4libm4math8rem_pio28rem_pio26medium17h6958a8d64950edafE({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x, i32 %ix)
  br label %bb70

bb25:                                             ; preds = %bb23
  %25 = icmp eq i32 %sign, 0
  br i1 %25, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %z20 = fsub double %x, 0x401921FB54400000
  %y021 = fsub double %z20, 0x3DF0B4611A626331
  %_115 = fsub double %z20, %y021
  %y122 = fsub double %_115, 0x3DF0B4611A626331
  %26 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 4, i32* %26, align 8
  %27 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y021, double* %27, align 8
  %28 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y122, double* %28, align 8
  br label %bb70

bb27:                                             ; preds = %bb25
  %z17 = fadd double %x, 0x401921FB54400000
  %y018 = fadd double %z17, 0x3DF0B4611A626331
  %_128 = fsub double %z17, %y018
  %y119 = fadd double %_128, 0x3DF0B4611A626331
  %29 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 -4, i32* %29, align 8
  %30 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y018, double* %30, align 8
  %31 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y119, double* %31, align 8
  br label %bb70

bb29:                                             ; preds = %bb17
  %_138 = icmp uge i32 %ix, 2146435072
  br i1 %_138, label %bb30, label %bb31

bb28:                                             ; preds = %bb17
; call libm::math::rem_pio2::rem_pio2::medium
  call void @_ZN4libm4math8rem_pio28rem_pio26medium17h6958a8d64950edafE({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x, i32 %ix)
  br label %bb70

bb31:                                             ; preds = %bb29
; call core::f64::<impl f64>::to_bits
  %32 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  store i64 %32, i64* %ui, align 8
  br label %bb32

bb30:                                             ; preds = %bb29
  %y023 = fsub double %x, %x
  %33 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 0, i32* %33, align 8
  %34 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %y023, double* %34, align 8
  %35 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y023, double* %35, align 8
  br label %bb70

bb32:                                             ; preds = %bb31
  %36 = load i64, i64* %ui, align 8
  %37 = and i64 %36, 4503599627370495
  store i64 %37, i64* %ui, align 8
  %38 = load i64, i64* %ui, align 8
  %39 = or i64 %38, 4710765210229538816
  store i64 %39, i64* %ui, align 8
  %_151 = load i64, i64* %ui, align 8
; call core::f64::<impl f64>::from_bits
  %40 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_151)
  store double %40, double* %z, align 8
  br label %bb33

bb33:                                             ; preds = %bb32
  %41 = getelementptr inbounds [3 x double], [3 x double]* %tx, i64 0, i64 0
  %42 = getelementptr inbounds [3 x double], [3 x double]* %tx, i64 0, i64 0
  %43 = getelementptr inbounds [3 x double], [3 x double]* %tx, i64 0, i64 3
  br label %repeat_loop_header

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb33
  %44 = phi double* [ %42, %bb33 ], [ %46, %repeat_loop_body ]
  %45 = icmp ne double* %44, %43
  br i1 %45, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  store double 0.000000e+00, double* %44, align 8
  %46 = getelementptr inbounds double, double* %44, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %47 = bitcast { i64, i64 }* %_154 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_154, i32 0, i32 1
  store i64 2, i64* %48, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_154, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_154, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %53 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he91be1cf9e424f6fE"(i64 %50, i64 %52)
  %_153.0 = extractvalue { i64, i64 } %53, 0
  %_153.1 = extractvalue { i64, i64 } %53, 1
  br label %bb34

bb34:                                             ; preds = %repeat_loop_next
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_153.0, i64* %54, align 8
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_153.1, i64* %55, align 8
  br label %bb35

bb35:                                             ; preds = %bb43, %bb34
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %56 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbda93f1fa34cbf27E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %56, { i64, i64 }* %_156, align 8
  br label %bb36

bb36:                                             ; preds = %bb35
  %57 = bitcast { i64, i64 }* %_156 to i64*
  %_159 = load i64, i64* %57, align 8, !range !2
  switch i64 %_159, label %bb38 [
    i64 0, label %bb39
    i64 1, label %bb37
  ]

bb38:                                             ; preds = %bb36
  unreachable

bb39:                                             ; preds = %bb36
  %_177 = load double, double* %z, align 8
  %_180.0 = bitcast [3 x double]* %tx to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_179 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_180.0, i64 3, i64 2)
  br label %bb44

bb37:                                             ; preds = %bb36
  %58 = bitcast { i64, i64 }* %_156 to %"core::option::Option<usize>::Some"*
  %59 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %58, i32 0, i32 1
  %i24 = load i64, i64* %59, align 8
  %_162 = load double, double* %z, align 8
  %_161 = call i32 @llvm.fptosi.sat.i32.f64(double %_162)
  %_165.0 = bitcast [3 x double]* %tx to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_164 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_165.0, i64 3, i64 %i24)
  br label %bb40

bb40:                                             ; preds = %bb37
; call core::option::Option<T>::unwrap
  %_163 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_164, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2402 to %"core::panic::location::Location"*))
  br label %bb41

bb41:                                             ; preds = %bb40
  %60 = sitofp i32 %_161 to double
  store double %60, double* %_163, align 8
  %_169 = load double, double* %z, align 8
  %_173.0 = bitcast [3 x double]* %tx to [0 x double]*
; call core::slice::<impl [T]>::get
  %_172 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_173.0, i64 3, i64 %i24)
  br label %bb42

bb42:                                             ; preds = %bb41
; call core::option::Option<T>::unwrap
  %_171 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_172, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2404 to %"core::panic::location::Location"*))
  br label %bb43

bb43:                                             ; preds = %bb42
  %_170 = load double, double* %_171, align 8
  %_168 = fsub double %_169, %_170
  %61 = fmul double %_168, %x1p24
  store double %61, double* %z, align 8
  br label %bb35

bb44:                                             ; preds = %bb39
; call core::option::Option<T>::unwrap
  %_178 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_179, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2406 to %"core::panic::location::Location"*))
  br label %bb45

bb45:                                             ; preds = %bb44
  store double %_177, double* %_178, align 8
  store i64 2, i64* %i, align 8
  br label %bb46

bb46:                                             ; preds = %bb53, %bb45
  %_184 = load i64, i64* %i, align 8
  %62 = icmp eq i64 %_184, 0
  br i1 %62, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i8 0, i8* %_183, align 1
  br label %bb49

bb48:                                             ; preds = %bb46
  %_189.0 = bitcast [3 x double]* %tx to [0 x double]*
  %_191 = load i64, i64* %i, align 8
; call core::slice::<impl [T]>::get
  %_188 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_189.0, i64 3, i64 %_191)
  br label %bb50

bb50:                                             ; preds = %bb48
; call core::option::Option<T>::unwrap
  %_187 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_188, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2408 to %"core::panic::location::Location"*))
  br label %bb51

bb51:                                             ; preds = %bb50
  %_186 = load double, double* %_187, align 8
  %_185 = fcmp oeq double %_186, 0.000000e+00
  %63 = zext i1 %_185 to i8
  store i8 %63, i8* %_183, align 1
  br label %bb49

bb49:                                             ; preds = %bb47, %bb51
  %64 = load i8, i8* %_183, align 1, !range !3
  %65 = trunc i8 %64 to i1
  br i1 %65, label %bb52, label %bb54

bb54:                                             ; preds = %bb49
  %66 = getelementptr inbounds [3 x double], [3 x double]* %ty, i64 0, i64 0
  %67 = getelementptr inbounds [3 x double], [3 x double]* %ty, i64 0, i64 0
  %68 = getelementptr inbounds [3 x double], [3 x double]* %ty, i64 0, i64 3
  br label %repeat_loop_header25

bb52:                                             ; preds = %bb49
  %69 = load i64, i64* %i, align 8
  %70 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %69, i64 1)
  %_192.0 = extractvalue { i64, i1 } %70, 0
  %_192.1 = extractvalue { i64, i1 } %70, 1
  %71 = call i1 @llvm.expect.i1(i1 %_192.1, i1 false)
  br i1 %71, label %panic, label %bb53

bb53:                                             ; preds = %bb52
  store i64 %_192.0, i64* %i, align 8
  br label %bb46

panic:                                            ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2410 to %"core::panic::location::Location"*)) #11
  unreachable

repeat_loop_header25:                             ; preds = %repeat_loop_body26, %bb54
  %72 = phi double* [ %67, %bb54 ], [ %74, %repeat_loop_body26 ]
  %73 = icmp ne double* %72, %68
  br i1 %73, label %repeat_loop_body26, label %repeat_loop_next27

repeat_loop_body26:                               ; preds = %repeat_loop_header25
  store double 0.000000e+00, double* %72, align 8
  %74 = getelementptr inbounds double, double* %72, i64 1
  br label %repeat_loop_header25

repeat_loop_next27:                               ; preds = %repeat_loop_header25
  %_200 = load i64, i64* %i, align 8
  store i64 %_200, i64* %_199, align 8
  %75 = load i64, i64* %_199, align 8
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %76 = call { [0 x double]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h699f35a7d2fc297dE"([3 x double]* align 8 dereferenceable(24) %tx, i64 %75, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2412 to %"core::panic::location::Location"*))
  %_197.0 = extractvalue { [0 x double]*, i64 } %76, 0
  %_197.1 = extractvalue { [0 x double]*, i64 } %76, 1
  br label %bb55

bb55:                                             ; preds = %repeat_loop_next27
  %_201.0 = bitcast [3 x double]* %ty to [0 x double]*
  %_208.0 = ashr i32 %ix, 20
  br label %bb56

bb56:                                             ; preds = %bb55
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_208.0, i32 1046)
  %_210.0 = extractvalue { i32, i1 } %77, 0
  %_210.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_210.1, i1 false)
  br i1 %78, label %panic28, label %bb57

bb57:                                             ; preds = %bb56
; call libm::math::rem_pio2_large::rem_pio2_large
  %n = call i32 @_ZN4libm4math14rem_pio2_large14rem_pio2_large17h171f25abdbb69186E([0 x double]* nonnull align 8 %_197.0, i64 %_197.1, [0 x double]* nonnull align 8 %_201.0, i64 3, i32 %_210.0, i64 1)
  br label %bb58

panic28:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2414 to %"core::panic::location::Location"*)) #11
  unreachable

bb58:                                             ; preds = %bb57
  %79 = icmp eq i32 %sign, 0
  br i1 %79, label %bb65, label %bb59

bb65:                                             ; preds = %bb58
  %_231.0 = bitcast [3 x double]* %ty to [0 x double]*
; call core::slice::<impl [T]>::get
  %_230 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_231.0, i64 3, i64 0)
  br label %bb66

bb59:                                             ; preds = %bb58
  %_214 = icmp eq i32 %n, -2147483648
  %80 = call i1 @llvm.expect.i1(i1 %_214, i1 false)
  br i1 %80, label %panic29, label %bb60

bb60:                                             ; preds = %bb59
  %_212 = sub i32 0, %n
  %_219.0 = bitcast [3 x double]* %ty to [0 x double]*
; call core::slice::<impl [T]>::get
  %_218 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_219.0, i64 3, i64 0)
  br label %bb61

panic29:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2416 to %"core::panic::location::Location"*)) #11
  unreachable

bb61:                                             ; preds = %bb60
; call core::option::Option<T>::unwrap
  %_217 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_218, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2418 to %"core::panic::location::Location"*))
  br label %bb62

bb62:                                             ; preds = %bb61
  %_216 = load double, double* %_217, align 8
  %_215 = fneg double %_216
  %_225.0 = bitcast [3 x double]* %ty to [0 x double]*
; call core::slice::<impl [T]>::get
  %_224 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_225.0, i64 3, i64 1)
  br label %bb63

bb63:                                             ; preds = %bb62
; call core::option::Option<T>::unwrap
  %_223 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_224, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2420 to %"core::panic::location::Location"*))
  br label %bb64

bb64:                                             ; preds = %bb63
  %_222 = load double, double* %_223, align 8
  %_221 = fneg double %_222
  %81 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 %_212, i32* %81, align 8
  %82 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %_215, double* %82, align 8
  %83 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %_221, double* %83, align 8
  br label %bb70

bb66:                                             ; preds = %bb65
; call core::option::Option<T>::unwrap
  %_229 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_230, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2422 to %"core::panic::location::Location"*))
  br label %bb67

bb67:                                             ; preds = %bb66
  %_228 = load double, double* %_229, align 8
  %_236.0 = bitcast [3 x double]* %ty to [0 x double]*
; call core::slice::<impl [T]>::get
  %_235 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_236.0, i64 3, i64 1)
  br label %bb68

bb68:                                             ; preds = %bb67
; call core::option::Option<T>::unwrap
  %_234 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_235, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2424 to %"core::panic::location::Location"*))
  br label %bb69

bb69:                                             ; preds = %bb68
  %_233 = load double, double* %_234, align 8
  %84 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 %n, i32* %84, align 8
  %85 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %_228, double* %85, align 8
  %86 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %_233, double* %86, align 8
  br label %bb70
}

; libm::math::rem_pio2::rem_pio2::medium
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4libm4math8rem_pio28rem_pio26medium17h6958a8d64950edafE({ double, i32, [1 x i32], double }* noalias nocapture sret({ double, i32, [1 x i32], double }) dereferenceable(24) %0, double %x, i32 %ix) unnamed_addr #1 {
start:
  %y0 = alloca double, align 8
  %w = alloca double, align 8
  %r = alloca double, align 8
  %_4 = fmul double %x, 0x3FE45F306DC9C883
  %tmp = fadd double %_4, 0x4338000000000000
  %f_n = fsub double %tmp, 0x4338000000000000
  %n = call i32 @llvm.fptosi.sat.i32.f64(double %f_n)
  %_12 = fmul double %f_n, 0x3FF921FB54400000
  %1 = fsub double %x, %_12
  store double %1, double* %r, align 8
  %2 = fmul double %f_n, 0x3DD0B4611A626331
  store double %2, double* %w, align 8
  %_17 = load double, double* %r, align 8
  %_18 = load double, double* %w, align 8
  %3 = fsub double %_17, %_18
  store double %3, double* %y0, align 8
  %_20 = load double, double* %y0, align 8
; call core::f64::<impl f64>::to_bits
  %ui = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_20)
  br label %bb1

bb1:                                              ; preds = %start
  %_25.0 = lshr i64 %ui, 52
  br label %bb2

bb2:                                              ; preds = %bb1
  %_22 = trunc i64 %_25.0 to i32
  %ey = and i32 %_22, 2047
  %_29.0 = lshr i32 %ix, 20
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_29.0, i32 %ey)
  %_34.0 = extractvalue { i32, i1 } %4, 0
  %_34.1 = extractvalue { i32, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %5, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %_30 = icmp sgt i32 %_34.0, 16
  br i1 %_30, label %bb5, label %bb10

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2426 to %"core::panic::location::Location"*)) #11
  unreachable

bb10:                                             ; preds = %bb9, %bb8, %bb4
  %_74 = load double, double* %r, align 8
  %_75 = load double, double* %y0, align 8
  %_73 = fsub double %_74, %_75
  %_76 = load double, double* %w, align 8
  %y1 = fsub double %_73, %_76
  %_78 = load double, double* %y0, align 8
  %6 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 1
  store i32 %n, i32* %6, align 8
  %7 = bitcast { double, i32, [1 x i32], double }* %0 to double*
  store double %_78, double* %7, align 8
  %8 = getelementptr inbounds { double, i32, [1 x i32], double }, { double, i32, [1 x i32], double }* %0, i32 0, i32 3
  store double %y1, double* %8, align 8
  ret void

bb5:                                              ; preds = %bb4
  %t = load double, double* %r, align 8
  %9 = fmul double %f_n, 0x3DD0B4611A600000
  store double %9, double* %w, align 8
  %_38 = load double, double* %w, align 8
  %10 = fsub double %t, %_38
  store double %10, double* %r, align 8
  %_39 = fmul double %f_n, 0x3BA3198A2E037073
  %_44 = load double, double* %r, align 8
  %_42 = fsub double %t, %_44
  %_45 = load double, double* %w, align 8
  %_41 = fsub double %_42, %_45
  %11 = fsub double %_39, %_41
  store double %11, double* %w, align 8
  %_46 = load double, double* %r, align 8
  %_47 = load double, double* %w, align 8
  %12 = fsub double %_46, %_47
  store double %12, double* %y0, align 8
  %_52 = load double, double* %y0, align 8
; call core::f64::<impl f64>::to_bits
  %_51 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %_52)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_53.0 = lshr i64 %_51, 52
  br label %bb7

bb7:                                              ; preds = %bb6
  %_49 = trunc i64 %_53.0 to i32
  %ey1 = and i32 %_49, 2047
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_29.0, i32 %ey1)
  %_58.0 = extractvalue { i32, i1 } %13, 0
  %_58.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %14, label %panic2, label %bb8

bb8:                                              ; preds = %bb7
  %_54 = icmp sgt i32 %_58.0, 49
  br i1 %_54, label %bb9, label %bb10

panic2:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2428 to %"core::panic::location::Location"*)) #11
  unreachable

bb9:                                              ; preds = %bb8
  %t3 = load double, double* %r, align 8
  %15 = fmul double %f_n, 0x3BA3198A2E000000
  store double %15, double* %w, align 8
  %_62 = load double, double* %w, align 8
  %16 = fsub double %t3, %_62
  store double %16, double* %r, align 8
  %_63 = fmul double %f_n, 0x397B839A252049C1
  %_68 = load double, double* %r, align 8
  %_66 = fsub double %t3, %_68
  %_69 = load double, double* %w, align 8
  %_65 = fsub double %_66, %_69
  %17 = fsub double %_63, %_65
  store double %17, double* %w, align 8
  %_70 = load double, double* %r, align 8
  %_71 = load double, double* %w, align 8
  %18 = fsub double %_70, %_71
  store double %18, double* %y0, align 8
  br label %bb10
}

; libm::math::rem_pio2_large::rem_pio2_large
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4libm4math14rem_pio2_large14rem_pio2_large17h171f25abdbb69186E([0 x double]* nonnull align 8 %x.0, i64 %x.1, [0 x double]* nonnull align 8 %y.0, i64 %y.1, i32 %e0, i64 %prec) unnamed_addr #1 {
start:
  %_679 = alloca { i64, i64 }, align 8
  %iter17 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_676 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_675 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_674 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_632 = alloca { i64, i64 }, align 8
  %iter16 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_629 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_628 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_627 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_585 = alloca { i64, i64 }, align 8
  %iter15 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_582 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_581 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_580 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_574 = alloca double, align 8
  %_563 = alloca { i64, i64 }, align 8
  %iter14 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_560 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_559 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_547 = alloca double, align 8
  %_535 = alloca { i64, i64 }, align 8
  %iter13 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_532 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_531 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_530 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_524 = alloca double, align 8
  %_513 = alloca { i64, i64 }, align 8
  %iter12 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_510 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_509 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_508 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_472 = alloca i8, align 1
  %k11 = alloca i64, align 8
  %_466 = alloca { i64, i64 }, align 8
  %iter10 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_463 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_462 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_461 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_442 = alloca { i64, i64 }, align 8
  %iter9 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_439 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_438 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_437 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_356 = alloca { i64, i64 }, align 8
  %iter8 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_353 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_352 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_330 = alloca { i64, i64 }, align 8
  %iter7 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_321 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_320 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %k = alloca i64, align 8
  %_297 = alloca { i64, i64 }, align 8
  %iter6 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_291 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_290 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_289 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %j5 = alloca i32, align 4
  %_238 = alloca { i64, i64 }, align 8
  %iter4 = alloca { i64, i64 }, align 8
  %_235 = alloca { i64, i64 }, align 8
  %carry = alloca i32, align 4
  %_136 = alloca { i64, i64 }, align 8
  %iter3 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_133 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_132 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %_131 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>", align 8
  %i = alloca i32, align 4
  %jz = alloca i64, align 8
  %_94 = alloca { i64, i64 }, align 8
  %iter2 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_91 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_90 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_85 = alloca { i64, i64 }, align 8
  %iter1 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_82 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_81 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_65 = alloca double, align 8
  %_60 = alloca { i64, i64 }, align 8
  %iter = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_57 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_56 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %j = alloca i32, align 4
  %q0 = alloca i32, align 4
  %jv = alloca i32, align 4
  %iq = alloca [20 x i32], align 4
  %q = alloca [20 x double], align 8
  %fq = alloca [20 x double], align 8
  %f = alloca [20 x double], align 8
  %z = alloca double, align 8
  %ih = alloca i32, align 4
  %n = alloca i32, align 4
  %fw = alloca double, align 8
; call core::f64::<impl f64>::from_bits
  %x1p24 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4715268809856909312)
  br label %bb1

bb1:                                              ; preds = %start
; call core::f64::<impl f64>::from_bits
  %x1p_24 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 4499096027743125504)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = getelementptr inbounds [20 x double], [20 x double]* %f, i64 0, i64 0
  %1 = getelementptr inbounds [20 x double], [20 x double]* %f, i64 0, i64 0
  %2 = getelementptr inbounds [20 x double], [20 x double]* %f, i64 0, i64 20
  br label %repeat_loop_header

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb2
  %3 = phi double* [ %1, %bb2 ], [ %5, %repeat_loop_body ]
  %4 = icmp ne double* %3, %2
  br i1 %4, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  store double 0.000000e+00, double* %3, align 8
  %5 = getelementptr inbounds double, double* %3, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %6 = getelementptr inbounds [20 x double], [20 x double]* %fq, i64 0, i64 0
  %7 = getelementptr inbounds [20 x double], [20 x double]* %fq, i64 0, i64 0
  %8 = getelementptr inbounds [20 x double], [20 x double]* %fq, i64 0, i64 20
  br label %repeat_loop_header18

repeat_loop_header18:                             ; preds = %repeat_loop_body19, %repeat_loop_next
  %9 = phi double* [ %7, %repeat_loop_next ], [ %11, %repeat_loop_body19 ]
  %10 = icmp ne double* %9, %8
  br i1 %10, label %repeat_loop_body19, label %repeat_loop_next20

repeat_loop_body19:                               ; preds = %repeat_loop_header18
  store double 0.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds double, double* %9, i64 1
  br label %repeat_loop_header18

repeat_loop_next20:                               ; preds = %repeat_loop_header18
  %12 = getelementptr inbounds [20 x double], [20 x double]* %q, i64 0, i64 0
  %13 = getelementptr inbounds [20 x double], [20 x double]* %q, i64 0, i64 0
  %14 = getelementptr inbounds [20 x double], [20 x double]* %q, i64 0, i64 20
  br label %repeat_loop_header21

repeat_loop_header21:                             ; preds = %repeat_loop_body22, %repeat_loop_next20
  %15 = phi double* [ %13, %repeat_loop_next20 ], [ %17, %repeat_loop_body22 ]
  %16 = icmp ne double* %15, %14
  br i1 %16, label %repeat_loop_body22, label %repeat_loop_next23

repeat_loop_body22:                               ; preds = %repeat_loop_header21
  store double 0.000000e+00, double* %15, align 8
  %17 = getelementptr inbounds double, double* %15, i64 1
  br label %repeat_loop_header21

repeat_loop_next23:                               ; preds = %repeat_loop_header21
  %18 = getelementptr inbounds [20 x i32], [20 x i32]* %iq, i64 0, i64 0
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 80, i1 false)
; call core::slice::<impl [T]>::get
  %_19 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h827f24cdb6adaa04E"([0 x i64]* nonnull align 8 bitcast (<{ [32 x i8] }>* @alloc994 to [0 x i64]*), i64 4, i64 %prec)
  br label %bb3

bb3:                                              ; preds = %repeat_loop_next23
; call core::option::Option<T>::unwrap
  %_18 = call align 8 dereferenceable(8) i64* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h018a001d296986e7E"(i64* align 8 dereferenceable_or_null(8) %_19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2430 to %"core::panic::location::Location"*))
  br label %bb4

bb4:                                              ; preds = %bb3
  %jk = load i64, i64* %_18, align 8
  %20 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %x.1, i64 1)
  %_26.0 = extractvalue { i64, i1 } %20, 0
  %_26.1 = extractvalue { i64, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %21, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  %22 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %e0, i32 3)
  %_30.0 = extractvalue { i32, i1 } %22, 0
  %_30.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %23, label %panic24, label %bb6

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2432 to %"core::panic::location::Location"*)) #11
  unreachable

bb6:                                              ; preds = %bb5
  %_32 = icmp eq i32 %_30.0, -2147483648
  %_33 = and i1 false, %_32
  %24 = call i1 @llvm.expect.i1(i1 %_33, i1 false)
  br i1 %24, label %panic25, label %bb7

panic24:                                          ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2434 to %"core::panic::location::Location"*)) #11
  unreachable

bb7:                                              ; preds = %bb6
  %25 = sdiv i32 %_30.0, 24
  store i32 %25, i32* %jv, align 4
  %_35 = load i32, i32* %jv, align 4
  %_34 = icmp slt i32 %_35, 0
  br i1 %_34, label %bb8, label %bb9

panic25:                                          ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2436 to %"core::panic::location::Location"*)) #11
  unreachable

bb9:                                              ; preds = %bb8, %bb7
  %_40 = load i32, i32* %jv, align 4
  %26 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_40, i32 1)
  %_41.0 = extractvalue { i32, i1 } %26, 0
  %_41.1 = extractvalue { i32, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %27, label %panic26, label %bb10

bb8:                                              ; preds = %bb7
  store i32 0, i32* %jv, align 4
  br label %bb9

bb10:                                             ; preds = %bb9
  %28 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 24, i32 %_41.0)
  %_42.0 = extractvalue { i32, i1 } %28, 0
  %_42.1 = extractvalue { i32, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false)
  br i1 %29, label %panic27, label %bb11

panic26:                                          ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2438 to %"core::panic::location::Location"*)) #11
  unreachable

bb11:                                             ; preds = %bb10
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %e0, i32 %_42.0)
  %_43.0 = extractvalue { i32, i1 } %30, 0
  %_43.1 = extractvalue { i32, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %31, label %panic28, label %bb12

panic27:                                          ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.3 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2440 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  store i32 %_43.0, i32* %q0, align 4
  %_45 = load i32, i32* %jv, align 4
  %jv29 = sext i32 %_45 to i64
  %_47 = trunc i64 %jv29 to i32
  %_49 = trunc i64 %_26.0 to i32
  %32 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_47, i32 %_49)
  %_51.0 = extractvalue { i32, i1 } %32, 0
  %_51.1 = extractvalue { i32, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false)
  br i1 %33, label %panic30, label %bb13

panic28:                                          ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2442 to %"core::panic::location::Location"*)) #11
  unreachable

bb13:                                             ; preds = %bb12
  store i32 %_51.0, i32* %j, align 4
  %34 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_26.0, i64 %jk)
  %_55.0 = extractvalue { i64, i1 } %34, 0
  %_55.1 = extractvalue { i64, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %35, label %panic31, label %bb14

panic30:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2444 to %"core::panic::location::Location"*)) #11
  unreachable

bb14:                                             ; preds = %bb13
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_57, i64 0, i64 %_55.0)
  br label %bb15

panic31:                                          ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2446 to %"core::panic::location::Location"*)) #11
  unreachable

bb15:                                             ; preds = %bb14
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_56, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_57)
  br label %bb16

bb16:                                             ; preds = %bb15
  %36 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter to i8*
  %37 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  br label %bb17

bb17:                                             ; preds = %bb29, %bb16
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %38 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter)
  store { i64, i64 } %38, { i64, i64 }* %_60, align 8
  br label %bb18

bb18:                                             ; preds = %bb17
  %39 = bitcast { i64, i64 }* %_60 to i64*
  %_63 = load i64, i64* %39, align 8, !range !2
  switch i64 %_63, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ]

bb20:                                             ; preds = %bb18
  unreachable

bb21:                                             ; preds = %bb18
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_82, i64 0, i64 %jk)
  br label %bb30

bb19:                                             ; preds = %bb18
  %40 = bitcast { i64, i64 }* %_60 to %"core::option::Option<usize>::Some"*
  %41 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %40, i32 0, i32 1
  %i32 = load i64, i64* %41, align 8
  %_67 = load i32, i32* %j, align 4
  %_66 = icmp slt i32 %_67, 0
  br i1 %_66, label %bb22, label %bb23

bb23:                                             ; preds = %bb19
  %_74 = load i32, i32* %j, align 4
  %_73 = sext i32 %_74 to i64
; call core::slice::<impl [T]>::get
  %_70 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 bitcast (<{ [2760 x i8] }>* @alloc1001 to [0 x i32]*), i64 690, i64 %_73)
  br label %bb24

bb22:                                             ; preds = %bb19
  store double 0.000000e+00, double* %_65, align 8
  br label %bb26

bb26:                                             ; preds = %bb25, %bb22
  %_77.0 = bitcast [20 x double]* %f to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_76 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_77.0, i64 20, i64 %i32)
  br label %bb27

bb24:                                             ; preds = %bb23
; call core::option::Option<T>::unwrap
  %_69 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2448 to %"core::panic::location::Location"*))
  br label %bb25

bb25:                                             ; preds = %bb24
  %_68 = load i32, i32* %_69, align 4
  %42 = sitofp i32 %_68 to double
  store double %42, double* %_65, align 8
  br label %bb26

bb27:                                             ; preds = %bb26
; call core::option::Option<T>::unwrap
  %_75 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_76, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2450 to %"core::panic::location::Location"*))
  br label %bb28

bb28:                                             ; preds = %bb27
  %43 = load double, double* %_65, align 8
  store double %43, double* %_75, align 8
  %44 = load i32, i32* %j, align 4
  %45 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 1)
  %_80.0 = extractvalue { i32, i1 } %45, 0
  %_80.1 = extractvalue { i32, i1 } %45, 1
  %46 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false)
  br i1 %46, label %panic33, label %bb29

bb29:                                             ; preds = %bb28
  store i32 %_80.0, i32* %j, align 4
  br label %bb17

panic33:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2452 to %"core::panic::location::Location"*)) #11
  unreachable

bb30:                                             ; preds = %bb21
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_81, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_82)
  br label %bb31

bb31:                                             ; preds = %bb30
  %47 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter1 to i8*
  %48 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false)
  br label %bb32

bb32:                                             ; preds = %bb51, %bb31
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %49 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter1)
  store { i64, i64 } %49, { i64, i64 }* %_85, align 8
  br label %bb33

bb33:                                             ; preds = %bb32
  %50 = bitcast { i64, i64 }* %_85 to i64*
  %_88 = load i64, i64* %50, align 8, !range !2
  switch i64 %_88, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ]

bb35:                                             ; preds = %bb33
  unreachable

bb36:                                             ; preds = %bb33
  store i64 %jk, i64* %jz, align 8
  br label %bb52

bb34:                                             ; preds = %bb33
  %51 = bitcast { i64, i64 }* %_85 to %"core::option::Option<usize>::Some"*
  %52 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %51, i32 0, i32 1
  %i34 = load i64, i64* %52, align 8
  store double 0.000000e+00, double* %fw, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_91, i64 0, i64 %_26.0)
  br label %bb37

bb37:                                             ; preds = %bb34
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_90, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_91)
  br label %bb38

bb38:                                             ; preds = %bb37
  %53 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter2 to i8*
  %54 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  br label %bb39

bb39:                                             ; preds = %bb49, %bb38
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %55 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter2)
  store { i64, i64 } %55, { i64, i64 }* %_94, align 8
  br label %bb40

bb40:                                             ; preds = %bb39
  %56 = bitcast { i64, i64 }* %_94 to i64*
  %_97 = load i64, i64* %56, align 8, !range !2
  switch i64 %_97, label %bb42 [
    i64 0, label %bb43
    i64 1, label %bb41
  ]

bb42:                                             ; preds = %bb40
  unreachable

bb43:                                             ; preds = %bb40
  %_117 = load double, double* %fw, align 8
  %_120.0 = bitcast [20 x double]* %q to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_119 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_120.0, i64 20, i64 %i34)
  br label %bb50

bb41:                                             ; preds = %bb40
  %57 = bitcast { i64, i64 }* %_94 to %"core::option::Option<usize>::Some"*
  %58 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %57, i32 0, i32 1
  %j35 = load i64, i64* %58, align 8
; call core::slice::<impl [T]>::get
  %_102 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %x.0, i64 %x.1, i64 %j35)
  br label %bb44

bb44:                                             ; preds = %bb41
; call core::option::Option<T>::unwrap
  %_101 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_102, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2454 to %"core::panic::location::Location"*))
  br label %bb45

bb45:                                             ; preds = %bb44
  %_100 = load double, double* %_101, align 8
  %_108.0 = bitcast [20 x double]* %f to [0 x double]*
  %59 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_26.0, i64 %i34)
  %_114.0 = extractvalue { i64, i1 } %59, 0
  %_114.1 = extractvalue { i64, i1 } %59, 1
  %60 = call i1 @llvm.expect.i1(i1 %_114.1, i1 false)
  br i1 %60, label %panic36, label %bb46

bb46:                                             ; preds = %bb45
  %61 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_114.0, i64 %j35)
  %_116.0 = extractvalue { i64, i1 } %61, 0
  %_116.1 = extractvalue { i64, i1 } %61, 1
  %62 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false)
  br i1 %62, label %panic37, label %bb47

panic36:                                          ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2456 to %"core::panic::location::Location"*)) #11
  unreachable

bb47:                                             ; preds = %bb46
; call core::slice::<impl [T]>::get
  %_107 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_108.0, i64 20, i64 %_116.0)
  br label %bb48

panic37:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2456 to %"core::panic::location::Location"*)) #11
  unreachable

bb48:                                             ; preds = %bb47
; call core::option::Option<T>::unwrap
  %_106 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_107, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2458 to %"core::panic::location::Location"*))
  br label %bb49

bb49:                                             ; preds = %bb48
  %_105 = load double, double* %_106, align 8
  %_99 = fmul double %_100, %_105
  %63 = load double, double* %fw, align 8
  %64 = fadd double %63, %_99
  store double %64, double* %fw, align 8
  br label %bb39

bb50:                                             ; preds = %bb43
; call core::option::Option<T>::unwrap
  %_118 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_119, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2460 to %"core::panic::location::Location"*))
  br label %bb51

bb51:                                             ; preds = %bb50
  store double %_117, double* %_118, align 8
  br label %bb32

bb52:                                             ; preds = %bb181, %bb36
  store i32 0, i32* %i, align 4
  %_128.0 = bitcast [20 x double]* %q to [0 x double]*
  %_130 = load i64, i64* %jz, align 8
; call core::slice::<impl [T]>::get
  %_127 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_128.0, i64 20, i64 %_130)
  br label %bb53

bb53:                                             ; preds = %bb52
; call core::option::Option<T>::unwrap
  %_126 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_127, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2462 to %"core::panic::location::Location"*))
  br label %bb54

bb54:                                             ; preds = %bb53
  %_125 = load double, double* %_126, align 8
  store double %_125, double* %z, align 8
  %_134 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_133, i64 1, i64 %_134)
  br label %bb55

bb55:                                             ; preds = %bb54
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_132, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_133)
  br label %bb56

bb56:                                             ; preds = %bb55
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_131, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_132)
  br label %bb57

bb57:                                             ; preds = %bb56
  %65 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter3 to i8*
  %66 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
  br label %bb58

bb58:                                             ; preds = %bb68, %bb57
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %67 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter3)
  store { i64, i64 } %67, { i64, i64 }* %_136, align 8
  br label %bb59

bb59:                                             ; preds = %bb58
  %68 = bitcast { i64, i64 }* %_136 to i64*
  %_139 = load i64, i64* %68, align 8, !range !2
  switch i64 %_139, label %bb61 [
    i64 0, label %bb62
    i64 1, label %bb60
  ]

bb61:                                             ; preds = %bb59
  unreachable

bb62:                                             ; preds = %bb59
  %_167 = load double, double* %z, align 8
  %_168 = load i32, i32* %q0, align 4
; call libm::math::scalbn::scalbn
  %_166 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %_167, i32 %_168)
  br label %bb69

bb60:                                             ; preds = %bb59
  %69 = bitcast { i64, i64 }* %_136 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %j38 = load i64, i64* %70, align 8
  %_144 = load double, double* %z, align 8
  %_142 = fmul double %x1p_24, %_144
  %_141 = call i32 @llvm.fptosi.sat.i32.f64(double %_142)
  %71 = sitofp i32 %_141 to double
  store double %71, double* %fw, align 8
  %_146 = load double, double* %z, align 8
  %_149 = load double, double* %fw, align 8
  %_147 = fmul double %x1p24, %_149
  %_145 = fsub double %_146, %_147
  %_152.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_155 = load i32, i32* %i, align 4
  %_154 = sext i32 %_155 to i64
; call core::slice::<impl [T]>::get_mut
  %_151 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_152.0, i64 20, i64 %_154)
  br label %bb63

bb63:                                             ; preds = %bb60
; call core::option::Option<T>::unwrap
  %_150 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_151, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2464 to %"core::panic::location::Location"*))
  br label %bb64

bb64:                                             ; preds = %bb63
  %72 = call i32 @llvm.fptosi.sat.i32.f64(double %_145)
  store i32 %72, i32* %_150, align 4
  %_159.0 = bitcast [20 x double]* %q to [0 x double]*
  %73 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %j38, i64 1)
  %_163.0 = extractvalue { i64, i1 } %73, 0
  %_163.1 = extractvalue { i64, i1 } %73, 1
  %74 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false)
  br i1 %74, label %panic39, label %bb65

bb65:                                             ; preds = %bb64
; call core::slice::<impl [T]>::get
  %_158 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_159.0, i64 20, i64 %_163.0)
  br label %bb66

panic39:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2466 to %"core::panic::location::Location"*)) #11
  unreachable

bb66:                                             ; preds = %bb65
; call core::option::Option<T>::unwrap
  %_157 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_158, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2468 to %"core::panic::location::Location"*))
  br label %bb67

bb67:                                             ; preds = %bb66
  %_156 = load double, double* %_157, align 8
  %_164 = load double, double* %fw, align 8
  %75 = fadd double %_156, %_164
  store double %75, double* %z, align 8
  %76 = load i32, i32* %i, align 4
  %77 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 1)
  %_165.0 = extractvalue { i32, i1 } %77, 0
  %_165.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_165.1, i1 false)
  br i1 %78, label %panic40, label %bb68

bb68:                                             ; preds = %bb67
  store i32 %_165.0, i32* %i, align 4
  br label %bb58

panic40:                                          ; preds = %bb67
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2470 to %"core::panic::location::Location"*)) #11
  unreachable

bb69:                                             ; preds = %bb62
  store double %_166, double* %z, align 8
  %_172 = load double, double* %z, align 8
  %_171 = fmul double %_172, 1.250000e-01
; call libm::math::floor::floor
  %_170 = call double @_ZN4libm4math5floor5floor17hc9729f302dc6b204E(double %_171)
  br label %bb70

bb70:                                             ; preds = %bb69
  %_169 = fmul double 8.000000e+00, %_170
  %79 = load double, double* %z, align 8
  %80 = fsub double %79, %_169
  store double %80, double* %z, align 8
  %_173 = load double, double* %z, align 8
  %81 = call i32 @llvm.fptosi.sat.i32.f64(double %_173)
  store i32 %81, i32* %n, align 4
  %_175 = load i32, i32* %n, align 4
  %_174 = sitofp i32 %_175 to double
  %82 = load double, double* %z, align 8
  %83 = fsub double %82, %_174
  store double %83, double* %z, align 8
  store i32 0, i32* %ih, align 4
  %_177 = load i32, i32* %q0, align 4
  %_176 = icmp sgt i32 %_177, 0
  br i1 %_176, label %bb71, label %bb89

bb89:                                             ; preds = %bb70
  %_218 = load i32, i32* %q0, align 4
  %84 = icmp eq i32 %_218, 0
  br i1 %84, label %bb90, label %bb95

bb71:                                             ; preds = %bb70
  %_181.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_184 = load i64, i64* %jz, align 8
  %85 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_184, i64 1)
  %_185.0 = extractvalue { i64, i1 } %85, 0
  %_185.1 = extractvalue { i64, i1 } %85, 1
  %86 = call i1 @llvm.expect.i1(i1 %_185.1, i1 false)
  br i1 %86, label %panic41, label %bb72

bb72:                                             ; preds = %bb71
; call core::slice::<impl [T]>::get
  %_180 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_181.0, i64 20, i64 %_185.0)
  br label %bb73

panic41:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2472 to %"core::panic::location::Location"*)) #11
  unreachable

bb73:                                             ; preds = %bb72
; call core::option::Option<T>::unwrap
  %_179 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_180, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2474 to %"core::panic::location::Location"*))
  br label %bb74

bb74:                                             ; preds = %bb73
  %_178 = load i32, i32* %_179, align 4
  %_187 = load i32, i32* %q0, align 4
  %87 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 24, i32 %_187)
  %_188.0 = extractvalue { i32, i1 } %87, 0
  %_188.1 = extractvalue { i32, i1 } %87, 1
  %88 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false)
  br i1 %88, label %panic42, label %bb75

bb75:                                             ; preds = %bb74
  %89 = and i32 %_188.0, -32
  %_189.1 = icmp ne i32 %89, 0
  %90 = and i32 %_188.0, 31
  %_189.0 = ashr i32 %_178, %90
  %91 = call i1 @llvm.expect.i1(i1 %_189.1, i1 false)
  br i1 %91, label %panic43, label %bb76

panic42:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2476 to %"core::panic::location::Location"*)) #11
  unreachable

bb76:                                             ; preds = %bb75
  store i32 %_189.0, i32* %i, align 4
  %_190 = load i32, i32* %i, align 4
  %92 = load i32, i32* %n, align 4
  %93 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %_190)
  %_191.0 = extractvalue { i32, i1 } %93, 0
  %_191.1 = extractvalue { i32, i1 } %93, 1
  %94 = call i1 @llvm.expect.i1(i1 %_191.1, i1 false)
  br i1 %94, label %panic44, label %bb77

panic43:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2474 to %"core::panic::location::Location"*)) #11
  unreachable

bb77:                                             ; preds = %bb76
  store i32 %_191.0, i32* %n, align 4
  %_193 = load i32, i32* %i, align 4
  %_195 = load i32, i32* %q0, align 4
  %95 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 24, i32 %_195)
  %_196.0 = extractvalue { i32, i1 } %95, 0
  %_196.1 = extractvalue { i32, i1 } %95, 1
  %96 = call i1 @llvm.expect.i1(i1 %_196.1, i1 false)
  br i1 %96, label %panic45, label %bb78

panic44:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2478 to %"core::panic::location::Location"*)) #11
  unreachable

bb78:                                             ; preds = %bb77
  %97 = and i32 %_196.0, -32
  %_197.1 = icmp ne i32 %97, 0
  %98 = and i32 %_196.0, 31
  %_197.0 = shl i32 %_193, %98
  %99 = call i1 @llvm.expect.i1(i1 %_197.1, i1 false)
  br i1 %99, label %panic46, label %bb79

panic45:                                          ; preds = %bb77
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2480 to %"core::panic::location::Location"*)) #11
  unreachable

bb79:                                             ; preds = %bb78
  %_200.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_203 = load i64, i64* %jz, align 8
  %100 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_203, i64 1)
  %_204.0 = extractvalue { i64, i1 } %100, 0
  %_204.1 = extractvalue { i64, i1 } %100, 1
  %101 = call i1 @llvm.expect.i1(i1 %_204.1, i1 false)
  br i1 %101, label %panic47, label %bb80

panic46:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.5 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2482 to %"core::panic::location::Location"*)) #11
  unreachable

bb80:                                             ; preds = %bb79
; call core::slice::<impl [T]>::get_mut
  %_199 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_200.0, i64 20, i64 %_204.0)
  br label %bb81

panic47:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2484 to %"core::panic::location::Location"*)) #11
  unreachable

bb81:                                             ; preds = %bb80
; call core::option::Option<T>::unwrap
  %_198 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_199, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2486 to %"core::panic::location::Location"*))
  br label %bb82

bb82:                                             ; preds = %bb81
  %102 = load i32, i32* %_198, align 4
  %103 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %102, i32 %_197.0)
  %_205.0 = extractvalue { i32, i1 } %103, 0
  %_205.1 = extractvalue { i32, i1 } %103, 1
  %104 = call i1 @llvm.expect.i1(i1 %_205.1, i1 false)
  br i1 %104, label %panic48, label %bb83

bb83:                                             ; preds = %bb82
  store i32 %_205.0, i32* %_198, align 4
  %_209.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_212 = load i64, i64* %jz, align 8
  %105 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_212, i64 1)
  %_213.0 = extractvalue { i64, i1 } %105, 0
  %_213.1 = extractvalue { i64, i1 } %105, 1
  %106 = call i1 @llvm.expect.i1(i1 %_213.1, i1 false)
  br i1 %106, label %panic49, label %bb84

panic48:                                          ; preds = %bb82
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2486 to %"core::panic::location::Location"*)) #11
  unreachable

bb84:                                             ; preds = %bb83
; call core::slice::<impl [T]>::get
  %_208 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_209.0, i64 20, i64 %_213.0)
  br label %bb85

panic49:                                          ; preds = %bb83
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2488 to %"core::panic::location::Location"*)) #11
  unreachable

bb85:                                             ; preds = %bb84
; call core::option::Option<T>::unwrap
  %_207 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_208, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2490 to %"core::panic::location::Location"*))
  br label %bb86

bb86:                                             ; preds = %bb85
  %_206 = load i32, i32* %_207, align 4
  %_215 = load i32, i32* %q0, align 4
  %107 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 23, i32 %_215)
  %_216.0 = extractvalue { i32, i1 } %107, 0
  %_216.1 = extractvalue { i32, i1 } %107, 1
  %108 = call i1 @llvm.expect.i1(i1 %_216.1, i1 false)
  br i1 %108, label %panic50, label %bb87

bb87:                                             ; preds = %bb86
  %109 = and i32 %_216.0, -32
  %_217.1 = icmp ne i32 %109, 0
  %110 = and i32 %_216.0, 31
  %_217.0 = ashr i32 %_206, %110
  %111 = call i1 @llvm.expect.i1(i1 %_217.1, i1 false)
  br i1 %111, label %panic51, label %bb88

panic50:                                          ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2492 to %"core::panic::location::Location"*)) #11
  unreachable

bb88:                                             ; preds = %bb87
  store i32 %_217.0, i32* %ih, align 4
  br label %bb97

panic51:                                          ; preds = %bb87
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.2 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2490 to %"core::panic::location::Location"*)) #11
  unreachable

bb97:                                             ; preds = %bb94, %bb96, %bb95, %bb88
  %_231 = load i32, i32* %ih, align 4
  %_230 = icmp sgt i32 %_231, 0
  br i1 %_230, label %bb98, label %bb130

bb90:                                             ; preds = %bb89
  %_222.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_225 = load i64, i64* %jz, align 8
  %112 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_225, i64 1)
  %_226.0 = extractvalue { i64, i1 } %112, 0
  %_226.1 = extractvalue { i64, i1 } %112, 1
  %113 = call i1 @llvm.expect.i1(i1 %_226.1, i1 false)
  br i1 %113, label %panic52, label %bb91

bb95:                                             ; preds = %bb89
  %_229 = load double, double* %z, align 8
  %_228 = fcmp oge double %_229, 5.000000e-01
  br i1 %_228, label %bb96, label %bb97

bb96:                                             ; preds = %bb95
  store i32 2, i32* %ih, align 4
  br label %bb97

bb91:                                             ; preds = %bb90
; call core::slice::<impl [T]>::get
  %_221 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_222.0, i64 20, i64 %_226.0)
  br label %bb92

panic52:                                          ; preds = %bb90
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2494 to %"core::panic::location::Location"*)) #11
  unreachable

bb92:                                             ; preds = %bb91
; call core::option::Option<T>::unwrap
  %_220 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_221, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2496 to %"core::panic::location::Location"*))
  br label %bb93

bb93:                                             ; preds = %bb92
  %_219 = load i32, i32* %_220, align 4
  %_227.0 = ashr i32 %_219, 23
  br label %bb94

bb94:                                             ; preds = %bb93
  store i32 %_227.0, i32* %ih, align 4
  br label %bb97

bb130:                                            ; preds = %bb129, %bb127, %bb126, %bb97
  %_287 = load double, double* %z, align 8
  %_286 = fcmp oeq double %_287, 0.000000e+00
  br i1 %_286, label %bb131, label %bb182

bb98:                                             ; preds = %bb97
  %114 = load i32, i32* %n, align 4
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 1)
  %_232.0 = extractvalue { i32, i1 } %115, 0
  %_232.1 = extractvalue { i32, i1 } %115, 1
  %116 = call i1 @llvm.expect.i1(i1 %_232.1, i1 false)
  br i1 %116, label %panic53, label %bb99

bb99:                                             ; preds = %bb98
  store i32 %_232.0, i32* %n, align 4
  store i32 0, i32* %carry, align 4
  %_236 = load i64, i64* %jz, align 8
  %117 = bitcast { i64, i64 }* %_235 to i64*
  store i64 0, i64* %117, align 8
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_235, i32 0, i32 1
  store i64 %_236, i64* %118, align 8
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_235, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_235, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %123 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he91be1cf9e424f6fE"(i64 %120, i64 %122)
  %_234.0 = extractvalue { i64, i64 } %123, 0
  %_234.1 = extractvalue { i64, i64 } %123, 1
  br label %bb100

panic53:                                          ; preds = %bb98
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2498 to %"core::panic::location::Location"*)) #11
  unreachable

bb100:                                            ; preds = %bb99
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter4, i32 0, i32 0
  store i64 %_234.0, i64* %124, align 8
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter4, i32 0, i32 1
  store i64 %_234.1, i64* %125, align 8
  br label %bb101

bb101:                                            ; preds = %bb112, %bb108, %bb116, %bb100
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %126 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hbda93f1fa34cbf27E"({ i64, i64 }* align 8 dereferenceable(16) %iter4)
  store { i64, i64 } %126, { i64, i64 }* %_238, align 8
  br label %bb102

bb102:                                            ; preds = %bb101
  %127 = bitcast { i64, i64 }* %_238 to i64*
  %_241 = load i64, i64* %127, align 8, !range !2
  switch i64 %_241, label %bb104 [
    i64 0, label %bb105
    i64 1, label %bb103
  ]

bb104:                                            ; preds = %bb102
  unreachable

bb105:                                            ; preds = %bb102
  %_266 = load i32, i32* %q0, align 4
  %_265 = icmp sgt i32 %_266, 0
  br i1 %_265, label %bb117, label %bb126

bb103:                                            ; preds = %bb102
  %128 = bitcast { i64, i64 }* %_238 to %"core::option::Option<usize>::Some"*
  %129 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %128, i32 0, i32 1
  %i54 = load i64, i64* %129, align 8
  %_246.0 = bitcast [20 x i32]* %iq to [0 x i32]*
; call core::slice::<impl [T]>::get
  %_245 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_246.0, i64 20, i64 %i54)
  br label %bb106

bb106:                                            ; preds = %bb103
; call core::option::Option<T>::unwrap
  %_244 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_245, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2500 to %"core::panic::location::Location"*))
  br label %bb107

bb107:                                            ; preds = %bb106
  %j55 = load i32, i32* %_244, align 4
  %_249 = load i32, i32* %carry, align 4
  %130 = icmp eq i32 %_249, 0
  br i1 %130, label %bb108, label %bb113

bb108:                                            ; preds = %bb107
  %131 = icmp eq i32 %j55, 0
  br i1 %131, label %bb101, label %bb109

bb113:                                            ; preds = %bb107
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 16777215, i32 %j55)
  %_259.0 = extractvalue { i32, i1 } %132, 0
  %_259.1 = extractvalue { i32, i1 } %132, 1
  %133 = call i1 @llvm.expect.i1(i1 %_259.1, i1 false)
  br i1 %133, label %panic56, label %bb114

bb114:                                            ; preds = %bb113
  %_262.0 = bitcast [20 x i32]* %iq to [0 x i32]*
; call core::slice::<impl [T]>::get_mut
  %_261 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_262.0, i64 20, i64 %i54)
  br label %bb115

panic56:                                          ; preds = %bb113
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2502 to %"core::panic::location::Location"*)) #11
  unreachable

bb115:                                            ; preds = %bb114
; call core::option::Option<T>::unwrap
  %_260 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_261, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2504 to %"core::panic::location::Location"*))
  br label %bb116

bb116:                                            ; preds = %bb115
  store i32 %_259.0, i32* %_260, align 4
  br label %bb101

bb109:                                            ; preds = %bb108
  store i32 1, i32* %carry, align 4
  %134 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 16777216, i32 %j55)
  %_252.0 = extractvalue { i32, i1 } %134, 0
  %_252.1 = extractvalue { i32, i1 } %134, 1
  %135 = call i1 @llvm.expect.i1(i1 %_252.1, i1 false)
  br i1 %135, label %panic57, label %bb110

bb110:                                            ; preds = %bb109
  %_255.0 = bitcast [20 x i32]* %iq to [0 x i32]*
; call core::slice::<impl [T]>::get_mut
  %_254 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_255.0, i64 20, i64 %i54)
  br label %bb111

panic57:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2506 to %"core::panic::location::Location"*)) #11
  unreachable

bb111:                                            ; preds = %bb110
; call core::option::Option<T>::unwrap
  %_253 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_254, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2508 to %"core::panic::location::Location"*))
  br label %bb112

bb112:                                            ; preds = %bb111
  store i32 %_252.0, i32* %_253, align 4
  br label %bb101

bb126:                                            ; preds = %bb121, %bb125, %bb117, %bb105
  %_281 = load i32, i32* %ih, align 4
  %136 = icmp eq i32 %_281, 2
  br i1 %136, label %bb127, label %bb130

bb117:                                            ; preds = %bb105
  %137 = load i32, i32* %q0, align 4
  switch i32 %137, label %bb126 [
    i32 1, label %bb118
    i32 2, label %bb122
  ]

bb118:                                            ; preds = %bb117
  %_269.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_272 = load i64, i64* %jz, align 8
  %138 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_272, i64 1)
  %_273.0 = extractvalue { i64, i1 } %138, 0
  %_273.1 = extractvalue { i64, i1 } %138, 1
  %139 = call i1 @llvm.expect.i1(i1 %_273.1, i1 false)
  br i1 %139, label %panic59, label %bb119

bb122:                                            ; preds = %bb117
  %_276.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_279 = load i64, i64* %jz, align 8
  %140 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_279, i64 1)
  %_280.0 = extractvalue { i64, i1 } %140, 0
  %_280.1 = extractvalue { i64, i1 } %140, 1
  %141 = call i1 @llvm.expect.i1(i1 %_280.1, i1 false)
  br i1 %141, label %panic58, label %bb123

bb123:                                            ; preds = %bb122
; call core::slice::<impl [T]>::get_mut
  %_275 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_276.0, i64 20, i64 %_280.0)
  br label %bb124

panic58:                                          ; preds = %bb122
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2510 to %"core::panic::location::Location"*)) #11
  unreachable

bb124:                                            ; preds = %bb123
; call core::option::Option<T>::unwrap
  %_274 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_275, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2512 to %"core::panic::location::Location"*))
  br label %bb125

bb125:                                            ; preds = %bb124
  %142 = load i32, i32* %_274, align 4
  %143 = and i32 %142, 4194303
  store i32 %143, i32* %_274, align 4
  br label %bb126

bb119:                                            ; preds = %bb118
; call core::slice::<impl [T]>::get_mut
  %_268 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_269.0, i64 20, i64 %_273.0)
  br label %bb120

panic59:                                          ; preds = %bb118
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2514 to %"core::panic::location::Location"*)) #11
  unreachable

bb120:                                            ; preds = %bb119
; call core::option::Option<T>::unwrap
  %_267 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_268, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2516 to %"core::panic::location::Location"*))
  br label %bb121

bb121:                                            ; preds = %bb120
  %144 = load i32, i32* %_267, align 4
  %145 = and i32 %144, 8388607
  store i32 %145, i32* %_267, align 4
  br label %bb126

bb127:                                            ; preds = %bb126
  %_282 = load double, double* %z, align 8
  %146 = fsub double 1.000000e+00, %_282
  store double %146, double* %z, align 8
  %_283 = load i32, i32* %carry, align 4
  %147 = icmp eq i32 %_283, 0
  br i1 %147, label %bb130, label %bb128

bb128:                                            ; preds = %bb127
  %_285 = load i32, i32* %q0, align 4
; call libm::math::scalbn::scalbn
  %_284 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double 1.000000e+00, i32 %_285)
  br label %bb129

bb129:                                            ; preds = %bb128
  %148 = load double, double* %z, align 8
  %149 = fsub double %148, %_284
  store double %149, double* %z, align 8
  br label %bb130

bb182:                                            ; preds = %bb140, %bb130
  %_388 = load double, double* %z, align 8
  %_387 = fcmp oeq double %_388, 0.000000e+00
  br i1 %_387, label %bb183, label %bb184

bb131:                                            ; preds = %bb130
  store i32 0, i32* %j5, align 4
  %_294 = load i64, i64* %jz, align 8
  %150 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_294, i64 1)
  %_295.0 = extractvalue { i64, i1 } %150, 0
  %_295.1 = extractvalue { i64, i1 } %150, 1
  %151 = call i1 @llvm.expect.i1(i1 %_295.1, i1 false)
  br i1 %151, label %panic60, label %bb132

bb132:                                            ; preds = %bb131
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_291, i64 %jk, i64 %_295.0)
  br label %bb133

panic60:                                          ; preds = %bb131
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2518 to %"core::panic::location::Location"*)) #11
  unreachable

bb133:                                            ; preds = %bb132
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_290, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_291)
  br label %bb134

bb134:                                            ; preds = %bb133
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_289, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_290)
  br label %bb135

bb135:                                            ; preds = %bb134
  %152 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter6 to i8*
  %153 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false)
  br label %bb136

bb136:                                            ; preds = %bb142, %bb135
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %154 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter6)
  store { i64, i64 } %154, { i64, i64 }* %_297, align 8
  br label %bb137

bb137:                                            ; preds = %bb136
  %155 = bitcast { i64, i64 }* %_297 to i64*
  %_300 = load i64, i64* %155, align 8, !range !2
  switch i64 %_300, label %bb139 [
    i64 0, label %bb140
    i64 1, label %bb138
  ]

bb139:                                            ; preds = %bb137
  unreachable

bb140:                                            ; preds = %bb137
  %_308 = load i32, i32* %j5, align 4
  %156 = icmp eq i32 %_308, 0
  br i1 %156, label %bb143, label %bb182

bb138:                                            ; preds = %bb137
  %157 = bitcast { i64, i64 }* %_297 to %"core::option::Option<usize>::Some"*
  %158 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %157, i32 0, i32 1
  %i61 = load i64, i64* %158, align 8
  %_305.0 = bitcast [20 x i32]* %iq to [0 x i32]*
; call core::slice::<impl [T]>::get
  %_304 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_305.0, i64 20, i64 %i61)
  br label %bb141

bb141:                                            ; preds = %bb138
; call core::option::Option<T>::unwrap
  %_303 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_304, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2520 to %"core::panic::location::Location"*))
  br label %bb142

bb142:                                            ; preds = %bb141
  %_302 = load i32, i32* %_303, align 4
  %159 = load i32, i32* %j5, align 4
  %160 = or i32 %159, %_302
  store i32 %160, i32* %j5, align 4
  br label %bb136

bb143:                                            ; preds = %bb140
  store i64 1, i64* %k, align 8
  br label %bb144

bb144:                                            ; preds = %bb149, %bb143
  %_313.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_317 = load i64, i64* %k, align 8
  %161 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %jk, i64 %_317)
  %_318.0 = extractvalue { i64, i1 } %161, 0
  %_318.1 = extractvalue { i64, i1 } %161, 1
  %162 = call i1 @llvm.expect.i1(i1 %_318.1, i1 false)
  br i1 %162, label %panic62, label %bb145

bb145:                                            ; preds = %bb144
; call core::slice::<impl [T]>::get_mut
  %_312 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_313.0, i64 20, i64 %_318.0)
  br label %bb146

panic62:                                          ; preds = %bb144
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2522 to %"core::panic::location::Location"*)) #11
  unreachable

bb146:                                            ; preds = %bb145
; call core::option::Option<T>::unwrap
  %_311 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_312, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2524 to %"core::panic::location::Location"*))
  br label %bb147

bb147:                                            ; preds = %bb146
  %_310 = load i32, i32* %_311, align 4
  %163 = icmp eq i32 %_310, 0
  br i1 %163, label %bb148, label %bb150

bb148:                                            ; preds = %bb147
  %164 = load i64, i64* %k, align 8
  %165 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %164, i64 1)
  %_319.0 = extractvalue { i64, i1 } %165, 0
  %_319.1 = extractvalue { i64, i1 } %165, 1
  %166 = call i1 @llvm.expect.i1(i1 %_319.1, i1 false)
  br i1 %166, label %panic72, label %bb149

bb150:                                            ; preds = %bb147
  %_323 = load i64, i64* %jz, align 8
  %167 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_323, i64 1)
  %_324.0 = extractvalue { i64, i1 } %167, 0
  %_324.1 = extractvalue { i64, i1 } %167, 1
  %168 = call i1 @llvm.expect.i1(i1 %_324.1, i1 false)
  br i1 %168, label %panic63, label %bb151

bb151:                                            ; preds = %bb150
  %_326 = load i64, i64* %jz, align 8
  %_327 = load i64, i64* %k, align 8
  %169 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_326, i64 %_327)
  %_328.0 = extractvalue { i64, i1 } %169, 0
  %_328.1 = extractvalue { i64, i1 } %169, 1
  %170 = call i1 @llvm.expect.i1(i1 %_328.1, i1 false)
  br i1 %170, label %panic64, label %bb152

panic63:                                          ; preds = %bb150
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2526 to %"core::panic::location::Location"*)) #11
  unreachable

bb152:                                            ; preds = %bb151
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_321, i64 %_324.0, i64 %_328.0)
  br label %bb153

panic64:                                          ; preds = %bb151
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2528 to %"core::panic::location::Location"*)) #11
  unreachable

bb153:                                            ; preds = %bb152
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_320, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_321)
  br label %bb154

bb154:                                            ; preds = %bb153
  %171 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter7 to i8*
  %172 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 24, i1 false)
  br label %bb155

bb155:                                            ; preds = %bb180, %bb154
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %173 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter7)
  store { i64, i64 } %173, { i64, i64 }* %_330, align 8
  br label %bb156

bb156:                                            ; preds = %bb155
  %174 = bitcast { i64, i64 }* %_330 to i64*
  %_333 = load i64, i64* %174, align 8, !range !2
  switch i64 %_333, label %bb158 [
    i64 0, label %bb159
    i64 1, label %bb157
  ]

bb158:                                            ; preds = %bb156
  unreachable

bb159:                                            ; preds = %bb156
  %_385 = load i64, i64* %k, align 8
  %175 = load i64, i64* %jz, align 8
  %176 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %175, i64 %_385)
  %_386.0 = extractvalue { i64, i1 } %176, 0
  %_386.1 = extractvalue { i64, i1 } %176, 1
  %177 = call i1 @llvm.expect.i1(i1 %_386.1, i1 false)
  br i1 %177, label %panic71, label %bb181

bb157:                                            ; preds = %bb156
  %178 = bitcast { i64, i64 }* %_330 to %"core::option::Option<usize>::Some"*
  %179 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %178, i32 0, i32 1
  %i65 = load i64, i64* %179, align 8
  %180 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %jv29, i64 %i65)
  %_343.0 = extractvalue { i64, i1 } %180, 0
  %_343.1 = extractvalue { i64, i1 } %180, 1
  %181 = call i1 @llvm.expect.i1(i1 %_343.1, i1 false)
  br i1 %181, label %panic66, label %bb160

bb160:                                            ; preds = %bb157
; call core::slice::<impl [T]>::get
  %_337 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 bitcast (<{ [2760 x i8] }>* @alloc1001 to [0 x i32]*), i64 690, i64 %_343.0)
  br label %bb161

panic66:                                          ; preds = %bb157
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2530 to %"core::panic::location::Location"*)) #11
  unreachable

bb161:                                            ; preds = %bb160
; call core::option::Option<T>::unwrap
  %_336 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_337, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2532 to %"core::panic::location::Location"*))
  br label %bb162

bb162:                                            ; preds = %bb161
  %_335 = load i32, i32* %_336, align 4
  %_346.0 = bitcast [20 x double]* %f to [0 x double]*
  %182 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_26.0, i64 %i65)
  %_351.0 = extractvalue { i64, i1 } %182, 0
  %_351.1 = extractvalue { i64, i1 } %182, 1
  %183 = call i1 @llvm.expect.i1(i1 %_351.1, i1 false)
  br i1 %183, label %panic67, label %bb163

bb163:                                            ; preds = %bb162
; call core::slice::<impl [T]>::get_mut
  %_345 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_346.0, i64 20, i64 %_351.0)
  br label %bb164

panic67:                                          ; preds = %bb162
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2534 to %"core::panic::location::Location"*)) #11
  unreachable

bb164:                                            ; preds = %bb163
; call core::option::Option<T>::unwrap
  %_344 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_345, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2536 to %"core::panic::location::Location"*))
  br label %bb165

bb165:                                            ; preds = %bb164
  %184 = sitofp i32 %_335 to double
  store double %184, double* %_344, align 8
  store double 0.000000e+00, double* %fw, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_353, i64 0, i64 %_26.0)
  br label %bb166

bb166:                                            ; preds = %bb165
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_352, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_353)
  br label %bb167

bb167:                                            ; preds = %bb166
  %185 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter8 to i8*
  %186 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 24, i1 false)
  br label %bb168

bb168:                                            ; preds = %bb178, %bb167
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %187 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter8)
  store { i64, i64 } %187, { i64, i64 }* %_356, align 8
  br label %bb169

bb169:                                            ; preds = %bb168
  %188 = bitcast { i64, i64 }* %_356 to i64*
  %_359 = load i64, i64* %188, align 8, !range !2
  switch i64 %_359, label %bb171 [
    i64 0, label %bb172
    i64 1, label %bb170
  ]

bb171:                                            ; preds = %bb169
  unreachable

bb172:                                            ; preds = %bb169
  %_379 = load double, double* %fw, align 8
  %_382.0 = bitcast [20 x double]* %q to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_381 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_382.0, i64 20, i64 %i65)
  br label %bb179

bb170:                                            ; preds = %bb169
  %189 = bitcast { i64, i64 }* %_356 to %"core::option::Option<usize>::Some"*
  %190 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %189, i32 0, i32 1
  %j68 = load i64, i64* %190, align 8
; call core::slice::<impl [T]>::get
  %_364 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %x.0, i64 %x.1, i64 %j68)
  br label %bb173

bb173:                                            ; preds = %bb170
; call core::option::Option<T>::unwrap
  %_363 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_364, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2538 to %"core::panic::location::Location"*))
  br label %bb174

bb174:                                            ; preds = %bb173
  %_362 = load double, double* %_363, align 8
  %_370.0 = bitcast [20 x double]* %f to [0 x double]*
  %191 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_26.0, i64 %i65)
  %_376.0 = extractvalue { i64, i1 } %191, 0
  %_376.1 = extractvalue { i64, i1 } %191, 1
  %192 = call i1 @llvm.expect.i1(i1 %_376.1, i1 false)
  br i1 %192, label %panic69, label %bb175

bb175:                                            ; preds = %bb174
  %193 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_376.0, i64 %j68)
  %_378.0 = extractvalue { i64, i1 } %193, 0
  %_378.1 = extractvalue { i64, i1 } %193, 1
  %194 = call i1 @llvm.expect.i1(i1 %_378.1, i1 false)
  br i1 %194, label %panic70, label %bb176

panic69:                                          ; preds = %bb174
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2540 to %"core::panic::location::Location"*)) #11
  unreachable

bb176:                                            ; preds = %bb175
; call core::slice::<impl [T]>::get
  %_369 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_370.0, i64 20, i64 %_378.0)
  br label %bb177

panic70:                                          ; preds = %bb175
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2540 to %"core::panic::location::Location"*)) #11
  unreachable

bb177:                                            ; preds = %bb176
; call core::option::Option<T>::unwrap
  %_368 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_369, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2542 to %"core::panic::location::Location"*))
  br label %bb178

bb178:                                            ; preds = %bb177
  %_367 = load double, double* %_368, align 8
  %_361 = fmul double %_362, %_367
  %195 = load double, double* %fw, align 8
  %196 = fadd double %195, %_361
  store double %196, double* %fw, align 8
  br label %bb168

bb179:                                            ; preds = %bb172
; call core::option::Option<T>::unwrap
  %_380 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_381, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2544 to %"core::panic::location::Location"*))
  br label %bb180

bb180:                                            ; preds = %bb179
  store double %_379, double* %_380, align 8
  br label %bb155

bb181:                                            ; preds = %bb159
  store i64 %_386.0, i64* %jz, align 8
  br label %bb52

panic71:                                          ; preds = %bb159
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2546 to %"core::panic::location::Location"*)) #11
  unreachable

bb149:                                            ; preds = %bb148
  store i64 %_319.0, i64* %k, align 8
  br label %bb144

panic72:                                          ; preds = %bb148
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2548 to %"core::panic::location::Location"*)) #11
  unreachable

bb184:                                            ; preds = %bb182
  %_400 = load double, double* %z, align 8
  %_402 = load i32, i32* %q0, align 4
  %_403 = icmp eq i32 %_402, -2147483648
  %197 = call i1 @llvm.expect.i1(i1 %_403, i1 false)
  br i1 %197, label %panic77, label %bb193

bb183:                                            ; preds = %bb182
  %198 = load i64, i64* %jz, align 8
  %199 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %198, i64 1)
  %_389.0 = extractvalue { i64, i1 } %199, 0
  %_389.1 = extractvalue { i64, i1 } %199, 1
  %200 = call i1 @llvm.expect.i1(i1 %_389.1, i1 false)
  br i1 %200, label %panic73, label %bb185

bb185:                                            ; preds = %bb183
  store i64 %_389.0, i64* %jz, align 8
  %201 = load i32, i32* %q0, align 4
  %202 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %201, i32 24)
  %_390.0 = extractvalue { i32, i1 } %202, 0
  %_390.1 = extractvalue { i32, i1 } %202, 1
  %203 = call i1 @llvm.expect.i1(i1 %_390.1, i1 false)
  br i1 %203, label %panic74, label %bb186

panic73:                                          ; preds = %bb183
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2550 to %"core::panic::location::Location"*)) #11
  unreachable

bb186:                                            ; preds = %bb185
  store i32 %_390.0, i32* %q0, align 4
  br label %bb187

panic74:                                          ; preds = %bb185
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2552 to %"core::panic::location::Location"*)) #11
  unreachable

bb187:                                            ; preds = %bb192, %bb186
  %_394.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_396 = load i64, i64* %jz, align 8
; call core::slice::<impl [T]>::get
  %_393 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_394.0, i64 20, i64 %_396)
  br label %bb188

bb188:                                            ; preds = %bb187
; call core::option::Option<T>::unwrap
  %_392 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_393, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2554 to %"core::panic::location::Location"*))
  br label %bb189

bb189:                                            ; preds = %bb188
  %_391 = load i32, i32* %_392, align 4
  %204 = icmp eq i32 %_391, 0
  br i1 %204, label %bb190, label %bb205

bb190:                                            ; preds = %bb189
  %205 = load i64, i64* %jz, align 8
  %206 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %205, i64 1)
  %_397.0 = extractvalue { i64, i1 } %206, 0
  %_397.1 = extractvalue { i64, i1 } %206, 1
  %207 = call i1 @llvm.expect.i1(i1 %_397.1, i1 false)
  br i1 %207, label %panic75, label %bb191

bb205:                                            ; preds = %bb204, %bb201, %bb189
  %_436 = load i32, i32* %q0, align 4
; call libm::math::scalbn::scalbn
  %_435 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double 1.000000e+00, i32 %_436)
  br label %bb206

bb191:                                            ; preds = %bb190
  store i64 %_397.0, i64* %jz, align 8
  %208 = load i32, i32* %q0, align 4
  %209 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %208, i32 24)
  %_398.0 = extractvalue { i32, i1 } %209, 0
  %_398.1 = extractvalue { i32, i1 } %209, 1
  %210 = call i1 @llvm.expect.i1(i1 %_398.1, i1 false)
  br i1 %210, label %panic76, label %bb192

panic75:                                          ; preds = %bb190
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2556 to %"core::panic::location::Location"*)) #11
  unreachable

bb192:                                            ; preds = %bb191
  store i32 %_398.0, i32* %q0, align 4
  br label %bb187

panic76:                                          ; preds = %bb191
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2558 to %"core::panic::location::Location"*)) #11
  unreachable

bb193:                                            ; preds = %bb184
  %_401 = sub i32 0, %_402
; call libm::math::scalbn::scalbn
  %_399 = call double @_ZN4libm4math6scalbn6scalbn17h5fbf1b13766140f2E(double %_400, i32 %_401)
  br label %bb194

panic77:                                          ; preds = %bb184
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2560 to %"core::panic::location::Location"*)) #11
  unreachable

bb194:                                            ; preds = %bb193
  store double %_399, double* %z, align 8
  %_405 = load double, double* %z, align 8
  %_404 = fcmp oge double %_405, %x1p24
  br i1 %_404, label %bb195, label %bb202

bb202:                                            ; preds = %bb194
  %_429 = load double, double* %z, align 8
  %_432.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_434 = load i64, i64* %jz, align 8
; call core::slice::<impl [T]>::get_mut
  %_431 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_432.0, i64 20, i64 %_434)
  br label %bb203

bb195:                                            ; preds = %bb194
  %_410 = load double, double* %z, align 8
  %_408 = fmul double %x1p_24, %_410
  %_407 = call i32 @llvm.fptosi.sat.i32.f64(double %_408)
  %211 = sitofp i32 %_407 to double
  store double %211, double* %fw, align 8
  %_412 = load double, double* %z, align 8
  %_415 = load double, double* %fw, align 8
  %_413 = fmul double %x1p24, %_415
  %_411 = fsub double %_412, %_413
  %_418.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_420 = load i64, i64* %jz, align 8
; call core::slice::<impl [T]>::get_mut
  %_417 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_418.0, i64 20, i64 %_420)
  br label %bb196

bb196:                                            ; preds = %bb195
; call core::option::Option<T>::unwrap
  %_416 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_417, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2562 to %"core::panic::location::Location"*))
  br label %bb197

bb197:                                            ; preds = %bb196
  %212 = call i32 @llvm.fptosi.sat.i32.f64(double %_411)
  store i32 %212, i32* %_416, align 4
  %213 = load i64, i64* %jz, align 8
  %214 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %213, i64 1)
  %_421.0 = extractvalue { i64, i1 } %214, 0
  %_421.1 = extractvalue { i64, i1 } %214, 1
  %215 = call i1 @llvm.expect.i1(i1 %_421.1, i1 false)
  br i1 %215, label %panic78, label %bb198

bb198:                                            ; preds = %bb197
  store i64 %_421.0, i64* %jz, align 8
  %216 = load i32, i32* %q0, align 4
  %217 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %216, i32 24)
  %_422.0 = extractvalue { i32, i1 } %217, 0
  %_422.1 = extractvalue { i32, i1 } %217, 1
  %218 = call i1 @llvm.expect.i1(i1 %_422.1, i1 false)
  br i1 %218, label %panic79, label %bb199

panic78:                                          ; preds = %bb197
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2564 to %"core::panic::location::Location"*)) #11
  unreachable

bb199:                                            ; preds = %bb198
  store i32 %_422.0, i32* %q0, align 4
  %_423 = load double, double* %fw, align 8
  %_426.0 = bitcast [20 x i32]* %iq to [0 x i32]*
  %_428 = load i64, i64* %jz, align 8
; call core::slice::<impl [T]>::get_mut
  %_425 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17h780f84f463f17a5cE"([0 x i32]* nonnull align 4 %_426.0, i64 20, i64 %_428)
  br label %bb200

panic79:                                          ; preds = %bb198
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2566 to %"core::panic::location::Location"*)) #11
  unreachable

bb200:                                            ; preds = %bb199
; call core::option::Option<T>::unwrap
  %_424 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_425, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2568 to %"core::panic::location::Location"*))
  br label %bb201

bb201:                                            ; preds = %bb200
  %219 = call i32 @llvm.fptosi.sat.i32.f64(double %_423)
  store i32 %219, i32* %_424, align 4
  br label %bb205

bb203:                                            ; preds = %bb202
; call core::option::Option<T>::unwrap
  %_430 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2f9138b0b9058baaE"(i32* align 4 dereferenceable_or_null(4) %_431, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2570 to %"core::panic::location::Location"*))
  br label %bb204

bb204:                                            ; preds = %bb203
  %220 = call i32 @llvm.fptosi.sat.i32.f64(double %_429)
  store i32 %220, i32* %_430, align 4
  br label %bb205

bb206:                                            ; preds = %bb205
  store double %_435, double* %fw, align 8
  %_440 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_439, i64 0, i64 %_440)
  br label %bb207

bb207:                                            ; preds = %bb206
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_438, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_439)
  br label %bb208

bb208:                                            ; preds = %bb207
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_437, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_438)
  br label %bb209

bb209:                                            ; preds = %bb208
  %221 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter9 to i8*
  %222 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 24, i1 false)
  br label %bb210

bb210:                                            ; preds = %bb218, %bb209
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %223 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter9)
  store { i64, i64 } %223, { i64, i64 }* %_442, align 8
  br label %bb211

bb211:                                            ; preds = %bb210
  %224 = bitcast { i64, i64 }* %_442 to i64*
  %_445 = load i64, i64* %224, align 8, !range !2
  switch i64 %_445, label %bb213 [
    i64 0, label %bb214
    i64 1, label %bb212
  ]

bb213:                                            ; preds = %bb211
  unreachable

bb214:                                            ; preds = %bb211
  %_464 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_463, i64 0, i64 %_464)
  br label %bb219

bb212:                                            ; preds = %bb211
  %225 = bitcast { i64, i64 }* %_442 to %"core::option::Option<usize>::Some"*
  %226 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %225, i32 0, i32 1
  %i80 = load i64, i64* %226, align 8
  %_447 = load double, double* %fw, align 8
  %_452.0 = bitcast [20 x i32]* %iq to [0 x i32]*
; call core::slice::<impl [T]>::get
  %_451 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb3b942d5fa09c4a2E"([0 x i32]* nonnull align 4 %_452.0, i64 20, i64 %i80)
  br label %bb215

bb215:                                            ; preds = %bb212
; call core::option::Option<T>::unwrap
  %_450 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h3223cabf79fd8bc1E"(i32* align 4 dereferenceable_or_null(4) %_451, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2572 to %"core::panic::location::Location"*))
  br label %bb216

bb216:                                            ; preds = %bb215
  %_449 = load i32, i32* %_450, align 4
  %_448 = sitofp i32 %_449 to double
  %_457.0 = bitcast [20 x double]* %q to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_456 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_457.0, i64 20, i64 %i80)
  br label %bb217

bb217:                                            ; preds = %bb216
; call core::option::Option<T>::unwrap
  %_455 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_456, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2574 to %"core::panic::location::Location"*))
  br label %bb218

bb218:                                            ; preds = %bb217
  %227 = fmul double %_447, %_448
  store double %227, double* %_455, align 8
  %228 = load double, double* %fw, align 8
  %229 = fmul double %228, %x1p_24
  store double %229, double* %fw, align 8
  br label %bb210

bb219:                                            ; preds = %bb214
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_462, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_463)
  br label %bb220

bb220:                                            ; preds = %bb219
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_461, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_462)
  br label %bb221

bb221:                                            ; preds = %bb220
  %230 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter10 to i8*
  %231 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_461 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 24, i1 false)
  br label %bb222

bb222:                                            ; preds = %bb242, %bb221
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %232 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter10)
  store { i64, i64 } %232, { i64, i64 }* %_466, align 8
  br label %bb223

bb223:                                            ; preds = %bb222
  %233 = bitcast { i64, i64 }* %_466 to i64*
  %_469 = load i64, i64* %233, align 8, !range !2
  switch i64 %_469, label %bb225 [
    i64 0, label %bb226
    i64 1, label %bb224
  ]

bb225:                                            ; preds = %bb223
  unreachable

bb226:                                            ; preds = %bb223
  switch i64 %prec, label %bb243 [
    i64 0, label %bb244
    i64 1, label %bb260
    i64 2, label %bb260
    i64 3, label %bb292
  ]

bb224:                                            ; preds = %bb223
  %234 = bitcast { i64, i64 }* %_466 to %"core::option::Option<usize>::Some"*
  %235 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %234, i32 0, i32 1
  %i81 = load i64, i64* %235, align 8
  store double 0.000000e+00, double* %fw, align 8
  store i64 0, i64* %k11, align 8
  br label %bb227

bb227:                                            ; preds = %bb238, %bb224
  %_474 = load i64, i64* %k11, align 8
  %_473 = icmp ule i64 %_474, %jk
  br i1 %_473, label %bb229, label %bb228

bb228:                                            ; preds = %bb227
  store i8 0, i8* %_472, align 1
  br label %bb230

bb229:                                            ; preds = %bb227
  %_477 = load i64, i64* %k11, align 8
  %_479 = load i64, i64* %jz, align 8
  %236 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_479, i64 %i81)
  %_481.0 = extractvalue { i64, i1 } %236, 0
  %_481.1 = extractvalue { i64, i1 } %236, 1
  %237 = call i1 @llvm.expect.i1(i1 %_481.1, i1 false)
  br i1 %237, label %panic82, label %bb231

bb231:                                            ; preds = %bb229
  %_476 = icmp ule i64 %_477, %_481.0
  %238 = zext i1 %_476 to i8
  store i8 %238, i8* %_472, align 1
  br label %bb230

panic82:                                          ; preds = %bb229
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2576 to %"core::panic::location::Location"*)) #11
  unreachable

bb230:                                            ; preds = %bb228, %bb231
  %239 = load i8, i8* %_472, align 1, !range !3
  %240 = trunc i8 %239 to i1
  br i1 %240, label %bb232, label %bb239

bb239:                                            ; preds = %bb230
  %_499 = load double, double* %fw, align 8
  %_502.0 = bitcast [20 x double]* %fq to [0 x double]*
  %_505 = load i64, i64* %jz, align 8
  %241 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_505, i64 %i81)
  %_507.0 = extractvalue { i64, i1 } %241, 0
  %_507.1 = extractvalue { i64, i1 } %241, 1
  %242 = call i1 @llvm.expect.i1(i1 %_507.1, i1 false)
  br i1 %242, label %panic85, label %bb240

bb232:                                            ; preds = %bb230
  %_488 = load i64, i64* %k11, align 8
; call core::slice::<impl [T]>::get
  %_485 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 bitcast (<{ [64 x i8] }>* @alloc1004 to [0 x double]*), i64 8, i64 %_488)
  br label %bb233

bb233:                                            ; preds = %bb232
; call core::option::Option<T>::unwrap
  %_484 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_485, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2578 to %"core::panic::location::Location"*))
  br label %bb234

bb234:                                            ; preds = %bb233
  %_483 = load double, double* %_484, align 8
  %_492.0 = bitcast [20 x double]* %q to [0 x double]*
  %_496 = load i64, i64* %k11, align 8
  %243 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i81, i64 %_496)
  %_497.0 = extractvalue { i64, i1 } %243, 0
  %_497.1 = extractvalue { i64, i1 } %243, 1
  %244 = call i1 @llvm.expect.i1(i1 %_497.1, i1 false)
  br i1 %244, label %panic83, label %bb235

bb235:                                            ; preds = %bb234
; call core::slice::<impl [T]>::get
  %_491 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_492.0, i64 20, i64 %_497.0)
  br label %bb236

panic83:                                          ; preds = %bb234
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2580 to %"core::panic::location::Location"*)) #11
  unreachable

bb236:                                            ; preds = %bb235
; call core::option::Option<T>::unwrap
  %_490 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_491, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2582 to %"core::panic::location::Location"*))
  br label %bb237

bb237:                                            ; preds = %bb236
  %_489 = load double, double* %_490, align 8
  %_482 = fmul double %_483, %_489
  %245 = load double, double* %fw, align 8
  %246 = fadd double %245, %_482
  store double %246, double* %fw, align 8
  %247 = load i64, i64* %k11, align 8
  %248 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %247, i64 1)
  %_498.0 = extractvalue { i64, i1 } %248, 0
  %_498.1 = extractvalue { i64, i1 } %248, 1
  %249 = call i1 @llvm.expect.i1(i1 %_498.1, i1 false)
  br i1 %249, label %panic84, label %bb238

bb238:                                            ; preds = %bb237
  store i64 %_498.0, i64* %k11, align 8
  br label %bb227

panic84:                                          ; preds = %bb237
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.1 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2584 to %"core::panic::location::Location"*)) #11
  unreachable

bb240:                                            ; preds = %bb239
; call core::slice::<impl [T]>::get_mut
  %_501 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_502.0, i64 20, i64 %_507.0)
  br label %bb241

panic85:                                          ; preds = %bb239
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2586 to %"core::panic::location::Location"*)) #11
  unreachable

bb241:                                            ; preds = %bb240
; call core::option::Option<T>::unwrap
  %_500 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_501, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2588 to %"core::panic::location::Location"*))
  br label %bb242

bb242:                                            ; preds = %bb241
  store double %_499, double* %_500, align 8
  br label %bb222

bb243:                                            ; preds = %bb226
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2589 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2591 to %"core::panic::location::Location"*)) #11
  unreachable

bb244:                                            ; preds = %bb226
  store double 0.000000e+00, double* %fw, align 8
  %_511 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_510, i64 0, i64 %_511)
  br label %bb245

bb260:                                            ; preds = %bb226, %bb226
  store double 0.000000e+00, double* %fw, align 8
  %_533 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_532, i64 0, i64 %_533)
  br label %bb261

bb292:                                            ; preds = %bb226
  %_583 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_582, i64 1, i64 %_583)
  br label %bb293

bb293:                                            ; preds = %bb292
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_581, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_582)
  br label %bb294

bb294:                                            ; preds = %bb293
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_580, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_581)
  br label %bb295

bb295:                                            ; preds = %bb294
  %250 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter15 to i8*
  %251 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_580 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 24, i1 false)
  br label %bb296

bb296:                                            ; preds = %bb313, %bb295
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %252 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter15)
  store { i64, i64 } %252, { i64, i64 }* %_585, align 8
  br label %bb297

bb297:                                            ; preds = %bb296
  %253 = bitcast { i64, i64 }* %_585 to i64*
  %_588 = load i64, i64* %253, align 8, !range !2
  switch i64 %_588, label %bb299 [
    i64 0, label %bb300
    i64 1, label %bb298
  ]

bb299:                                            ; preds = %bb297
  unreachable

bb300:                                            ; preds = %bb297
  %_630 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_629, i64 2, i64 %_630)
  br label %bb314

bb298:                                            ; preds = %bb297
  %254 = bitcast { i64, i64 }* %_585 to %"core::option::Option<usize>::Some"*
  %255 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %254, i32 0, i32 1
  %i86 = load i64, i64* %255, align 8
  %_593.0 = bitcast [20 x double]* %fq to [0 x double]*
  %256 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i86, i64 1)
  %_597.0 = extractvalue { i64, i1 } %256, 0
  %_597.1 = extractvalue { i64, i1 } %256, 1
  %257 = call i1 @llvm.expect.i1(i1 %_597.1, i1 false)
  br i1 %257, label %panic87, label %bb301

bb301:                                            ; preds = %bb298
; call core::slice::<impl [T]>::get
  %_592 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_593.0, i64 20, i64 %_597.0)
  br label %bb302

panic87:                                          ; preds = %bb298
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2593 to %"core::panic::location::Location"*)) #11
  unreachable

bb302:                                            ; preds = %bb301
; call core::option::Option<T>::unwrap
  %_591 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_592, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2595 to %"core::panic::location::Location"*))
  br label %bb303

bb303:                                            ; preds = %bb302
  %_590 = load double, double* %_591, align 8
  %_601.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_600 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_601.0, i64 20, i64 %i86)
  br label %bb304

bb304:                                            ; preds = %bb303
; call core::option::Option<T>::unwrap
  %_599 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_600, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2597 to %"core::panic::location::Location"*))
  br label %bb305

bb305:                                            ; preds = %bb304
  %_598 = load double, double* %_599, align 8
  %258 = fadd double %_590, %_598
  store double %258, double* %fw, align 8
  %_608.0 = bitcast [20 x double]* %fq to [0 x double]*
  %259 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i86, i64 1)
  %_612.0 = extractvalue { i64, i1 } %259, 0
  %_612.1 = extractvalue { i64, i1 } %259, 1
  %260 = call i1 @llvm.expect.i1(i1 %_612.1, i1 false)
  br i1 %260, label %panic88, label %bb306

bb306:                                            ; preds = %bb305
; call core::slice::<impl [T]>::get
  %_607 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_608.0, i64 20, i64 %_612.0)
  br label %bb307

panic88:                                          ; preds = %bb305
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2599 to %"core::panic::location::Location"*)) #11
  unreachable

bb307:                                            ; preds = %bb306
; call core::option::Option<T>::unwrap
  %_606 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_607, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2601 to %"core::panic::location::Location"*))
  br label %bb308

bb308:                                            ; preds = %bb307
  %_605 = load double, double* %_606, align 8
  %_613 = load double, double* %fw, align 8
  %_604 = fsub double %_605, %_613
  %_616.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_615 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_616.0, i64 20, i64 %i86)
  br label %bb309

bb309:                                            ; preds = %bb308
; call core::option::Option<T>::unwrap
  %_614 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_615, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2603 to %"core::panic::location::Location"*))
  br label %bb310

bb310:                                            ; preds = %bb309
  %261 = load double, double* %_614, align 8
  %262 = fadd double %261, %_604
  store double %262, double* %_614, align 8
  %_619 = load double, double* %fw, align 8
  %_622.0 = bitcast [20 x double]* %fq to [0 x double]*
  %263 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i86, i64 1)
  %_626.0 = extractvalue { i64, i1 } %263, 0
  %_626.1 = extractvalue { i64, i1 } %263, 1
  %264 = call i1 @llvm.expect.i1(i1 %_626.1, i1 false)
  br i1 %264, label %panic89, label %bb311

bb311:                                            ; preds = %bb310
; call core::slice::<impl [T]>::get_mut
  %_621 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_622.0, i64 20, i64 %_626.0)
  br label %bb312

panic89:                                          ; preds = %bb310
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2605 to %"core::panic::location::Location"*)) #11
  unreachable

bb312:                                            ; preds = %bb311
; call core::option::Option<T>::unwrap
  %_620 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_621, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2607 to %"core::panic::location::Location"*))
  br label %bb313

bb313:                                            ; preds = %bb312
  store double %_619, double* %_620, align 8
  br label %bb296

bb314:                                            ; preds = %bb300
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_628, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_629)
  br label %bb315

bb315:                                            ; preds = %bb314
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_627, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_628)
  br label %bb316

bb316:                                            ; preds = %bb315
  %265 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter16 to i8*
  %266 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %266, i64 24, i1 false)
  br label %bb317

bb317:                                            ; preds = %bb334, %bb316
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %267 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter16)
  store { i64, i64 } %267, { i64, i64 }* %_632, align 8
  br label %bb318

bb318:                                            ; preds = %bb317
  %268 = bitcast { i64, i64 }* %_632 to i64*
  %_635 = load i64, i64* %268, align 8, !range !2
  switch i64 %_635, label %bb320 [
    i64 0, label %bb321
    i64 1, label %bb319
  ]

bb320:                                            ; preds = %bb318
  unreachable

bb321:                                            ; preds = %bb318
  store double 0.000000e+00, double* %fw, align 8
  %_677 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_676, i64 2, i64 %_677)
  br label %bb335

bb319:                                            ; preds = %bb318
  %269 = bitcast { i64, i64 }* %_632 to %"core::option::Option<usize>::Some"*
  %270 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %269, i32 0, i32 1
  %i90 = load i64, i64* %270, align 8
  %_640.0 = bitcast [20 x double]* %fq to [0 x double]*
  %271 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i90, i64 1)
  %_644.0 = extractvalue { i64, i1 } %271, 0
  %_644.1 = extractvalue { i64, i1 } %271, 1
  %272 = call i1 @llvm.expect.i1(i1 %_644.1, i1 false)
  br i1 %272, label %panic91, label %bb322

bb322:                                            ; preds = %bb319
; call core::slice::<impl [T]>::get
  %_639 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_640.0, i64 20, i64 %_644.0)
  br label %bb323

panic91:                                          ; preds = %bb319
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2609 to %"core::panic::location::Location"*)) #11
  unreachable

bb323:                                            ; preds = %bb322
; call core::option::Option<T>::unwrap
  %_638 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_639, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2611 to %"core::panic::location::Location"*))
  br label %bb324

bb324:                                            ; preds = %bb323
  %_637 = load double, double* %_638, align 8
  %_648.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_647 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_648.0, i64 20, i64 %i90)
  br label %bb325

bb325:                                            ; preds = %bb324
; call core::option::Option<T>::unwrap
  %_646 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_647, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2613 to %"core::panic::location::Location"*))
  br label %bb326

bb326:                                            ; preds = %bb325
  %_645 = load double, double* %_646, align 8
  %273 = fadd double %_637, %_645
  store double %273, double* %fw, align 8
  %_655.0 = bitcast [20 x double]* %fq to [0 x double]*
  %274 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i90, i64 1)
  %_659.0 = extractvalue { i64, i1 } %274, 0
  %_659.1 = extractvalue { i64, i1 } %274, 1
  %275 = call i1 @llvm.expect.i1(i1 %_659.1, i1 false)
  br i1 %275, label %panic92, label %bb327

bb327:                                            ; preds = %bb326
; call core::slice::<impl [T]>::get
  %_654 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_655.0, i64 20, i64 %_659.0)
  br label %bb328

panic92:                                          ; preds = %bb326
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2615 to %"core::panic::location::Location"*)) #11
  unreachable

bb328:                                            ; preds = %bb327
; call core::option::Option<T>::unwrap
  %_653 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_654, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2617 to %"core::panic::location::Location"*))
  br label %bb329

bb329:                                            ; preds = %bb328
  %_652 = load double, double* %_653, align 8
  %_660 = load double, double* %fw, align 8
  %_651 = fsub double %_652, %_660
  %_663.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get_mut
  %_662 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_663.0, i64 20, i64 %i90)
  br label %bb330

bb330:                                            ; preds = %bb329
; call core::option::Option<T>::unwrap
  %_661 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_662, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2619 to %"core::panic::location::Location"*))
  br label %bb331

bb331:                                            ; preds = %bb330
  %276 = load double, double* %_661, align 8
  %277 = fadd double %276, %_651
  store double %277, double* %_661, align 8
  %_666 = load double, double* %fw, align 8
  %_669.0 = bitcast [20 x double]* %fq to [0 x double]*
  %278 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %i90, i64 1)
  %_673.0 = extractvalue { i64, i1 } %278, 0
  %_673.1 = extractvalue { i64, i1 } %278, 1
  %279 = call i1 @llvm.expect.i1(i1 %_673.1, i1 false)
  br i1 %279, label %panic93, label %bb332

bb332:                                            ; preds = %bb331
; call core::slice::<impl [T]>::get_mut
  %_668 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %_669.0, i64 20, i64 %_673.0)
  br label %bb333

panic93:                                          ; preds = %bb331
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2621 to %"core::panic::location::Location"*)) #11
  unreachable

bb333:                                            ; preds = %bb332
; call core::option::Option<T>::unwrap
  %_667 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_668, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2623 to %"core::panic::location::Location"*))
  br label %bb334

bb334:                                            ; preds = %bb333
  store double %_666, double* %_667, align 8
  br label %bb317

bb335:                                            ; preds = %bb321
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_675, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_676)
  br label %bb336

bb336:                                            ; preds = %bb335
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_674, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_675)
  br label %bb337

bb337:                                            ; preds = %bb336
  %280 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter17 to i8*
  %281 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_674 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 24, i1 false)
  br label %bb338

bb338:                                            ; preds = %bb344, %bb337
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %282 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter17)
  store { i64, i64 } %282, { i64, i64 }* %_679, align 8
  br label %bb339

bb339:                                            ; preds = %bb338
  %283 = bitcast { i64, i64 }* %_679 to i64*
  %_682 = load i64, i64* %283, align 8, !range !2
  switch i64 %_682, label %bb341 [
    i64 0, label %bb342
    i64 1, label %bb340
  ]

bb341:                                            ; preds = %bb339
  unreachable

bb342:                                            ; preds = %bb339
  %_690 = load i32, i32* %ih, align 4
  %284 = icmp eq i32 %_690, 0
  br i1 %284, label %bb345, label %bb346

bb340:                                            ; preds = %bb339
  %285 = bitcast { i64, i64 }* %_679 to %"core::option::Option<usize>::Some"*
  %286 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %285, i32 0, i32 1
  %i94 = load i64, i64* %286, align 8
  %_687.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_686 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_687.0, i64 20, i64 %i94)
  br label %bb343

bb343:                                            ; preds = %bb340
; call core::option::Option<T>::unwrap
  %_685 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_686, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2625 to %"core::panic::location::Location"*))
  br label %bb344

bb344:                                            ; preds = %bb343
  %_684 = load double, double* %_685, align 8
  %287 = load double, double* %fw, align 8
  %288 = fadd double %287, %_684
  store double %288, double* %fw, align 8
  br label %bb338

bb345:                                            ; preds = %bb342
  %_694.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_693 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_694.0, i64 20, i64 0)
  br label %bb347

bb346:                                            ; preds = %bb342
  %_714.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_713 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_714.0, i64 20, i64 0)
  br label %bb357

bb357:                                            ; preds = %bb346
; call core::option::Option<T>::unwrap
  %_712 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_713, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2627 to %"core::panic::location::Location"*))
  br label %bb358

bb358:                                            ; preds = %bb357
  %_711 = load double, double* %_712, align 8
; call core::slice::<impl [T]>::get_mut
  %_717 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 0)
  br label %bb359

bb359:                                            ; preds = %bb358
; call core::option::Option<T>::unwrap
  %_716 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_717, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2629 to %"core::panic::location::Location"*))
  br label %bb360

bb360:                                            ; preds = %bb359
  %289 = fneg double %_711
  store double %289, double* %_716, align 8
  %_722.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_721 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_722.0, i64 20, i64 1)
  br label %bb361

bb361:                                            ; preds = %bb360
; call core::option::Option<T>::unwrap
  %_720 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_721, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2631 to %"core::panic::location::Location"*))
  br label %bb362

bb362:                                            ; preds = %bb361
  %_719 = load double, double* %_720, align 8
; call core::slice::<impl [T]>::get_mut
  %_725 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 1)
  br label %bb363

bb363:                                            ; preds = %bb362
; call core::option::Option<T>::unwrap
  %_724 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_725, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2633 to %"core::panic::location::Location"*))
  br label %bb364

bb364:                                            ; preds = %bb363
  %290 = fneg double %_719
  store double %290, double* %_724, align 8
  %_727 = load double, double* %fw, align 8
; call core::slice::<impl [T]>::get_mut
  %_729 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 2)
  br label %bb365

bb365:                                            ; preds = %bb364
; call core::option::Option<T>::unwrap
  %_728 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_729, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2635 to %"core::panic::location::Location"*))
  br label %bb366

bb366:                                            ; preds = %bb365
  %291 = fneg double %_727
  store double %291, double* %_728, align 8
  br label %bb367

bb367:                                            ; preds = %bb259, %bb291, %bb356, %bb366
  %_731 = load i32, i32* %n, align 4
  %292 = and i32 %_731, 7
  ret i32 %292

bb347:                                            ; preds = %bb345
; call core::option::Option<T>::unwrap
  %_692 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_693, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2637 to %"core::panic::location::Location"*))
  br label %bb348

bb348:                                            ; preds = %bb347
  %_691 = load double, double* %_692, align 8
; call core::slice::<impl [T]>::get_mut
  %_697 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 0)
  br label %bb349

bb349:                                            ; preds = %bb348
; call core::option::Option<T>::unwrap
  %_696 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_697, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2639 to %"core::panic::location::Location"*))
  br label %bb350

bb350:                                            ; preds = %bb349
  store double %_691, double* %_696, align 8
  %_702.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_701 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_702.0, i64 20, i64 1)
  br label %bb351

bb351:                                            ; preds = %bb350
; call core::option::Option<T>::unwrap
  %_700 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_701, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2641 to %"core::panic::location::Location"*))
  br label %bb352

bb352:                                            ; preds = %bb351
  %_699 = load double, double* %_700, align 8
; call core::slice::<impl [T]>::get_mut
  %_705 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 1)
  br label %bb353

bb353:                                            ; preds = %bb352
; call core::option::Option<T>::unwrap
  %_704 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_705, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2643 to %"core::panic::location::Location"*))
  br label %bb354

bb354:                                            ; preds = %bb353
  store double %_699, double* %_704, align 8
  %_707 = load double, double* %fw, align 8
; call core::slice::<impl [T]>::get_mut
  %_709 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 2)
  br label %bb355

bb355:                                            ; preds = %bb354
; call core::option::Option<T>::unwrap
  %_708 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_709, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2645 to %"core::panic::location::Location"*))
  br label %bb356

bb356:                                            ; preds = %bb355
  store double %_707, double* %_708, align 8
  br label %bb367

bb261:                                            ; preds = %bb260
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_531, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_532)
  br label %bb262

bb262:                                            ; preds = %bb261
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_530, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_531)
  br label %bb263

bb263:                                            ; preds = %bb262
  %293 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter13 to i8*
  %294 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_530 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 24, i1 false)
  br label %bb264

bb264:                                            ; preds = %bb270, %bb263
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %295 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter13)
  store { i64, i64 } %295, { i64, i64 }* %_535, align 8
  br label %bb265

bb265:                                            ; preds = %bb264
  %296 = bitcast { i64, i64 }* %_535 to i64*
  %_538 = load i64, i64* %296, align 8, !range !2
  switch i64 %_538, label %bb267 [
    i64 0, label %bb268
    i64 1, label %bb266
  ]

bb267:                                            ; preds = %bb265
  unreachable

bb268:                                            ; preds = %bb265
  %_546 = load double, double* %fw, align 8
  store double %_546, double* %fw, align 8
  %_548 = load i32, i32* %ih, align 4
  %297 = icmp eq i32 %_548, 0
  br i1 %297, label %bb271, label %bb272

bb266:                                            ; preds = %bb265
  %298 = bitcast { i64, i64 }* %_535 to %"core::option::Option<usize>::Some"*
  %299 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %298, i32 0, i32 1
  %i95 = load i64, i64* %299, align 8
  %_543.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_542 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_543.0, i64 20, i64 %i95)
  br label %bb269

bb269:                                            ; preds = %bb266
; call core::option::Option<T>::unwrap
  %_541 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_542, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2647 to %"core::panic::location::Location"*))
  br label %bb270

bb270:                                            ; preds = %bb269
  %_540 = load double, double* %_541, align 8
  %300 = load double, double* %fw, align 8
  %301 = fadd double %300, %_540
  store double %301, double* %fw, align 8
  br label %bb264

bb271:                                            ; preds = %bb268
  %302 = load double, double* %fw, align 8
  store double %302, double* %_547, align 8
  br label %bb273

bb272:                                            ; preds = %bb268
  %_549 = load double, double* %fw, align 8
  %303 = fneg double %_549
  store double %303, double* %_547, align 8
  br label %bb273

bb273:                                            ; preds = %bb271, %bb272
; call core::slice::<impl [T]>::get_mut
  %_551 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 0)
  br label %bb274

bb274:                                            ; preds = %bb273
; call core::option::Option<T>::unwrap
  %_550 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_551, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2649 to %"core::panic::location::Location"*))
  br label %bb275

bb275:                                            ; preds = %bb274
  %304 = load double, double* %_547, align 8
  store double %304, double* %_550, align 8
  %_556.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_555 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_556.0, i64 20, i64 0)
  br label %bb276

bb276:                                            ; preds = %bb275
; call core::option::Option<T>::unwrap
  %_554 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_555, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2651 to %"core::panic::location::Location"*))
  br label %bb277

bb277:                                            ; preds = %bb276
  %_553 = load double, double* %_554, align 8
  %_558 = load double, double* %fw, align 8
  %305 = fsub double %_553, %_558
  store double %305, double* %fw, align 8
  %_561 = load i64, i64* %jz, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17hcdc2e32148e112d1E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_560, i64 1, i64 %_561)
  br label %bb278

bb278:                                            ; preds = %bb277
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0c0eba74831990b3E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_559, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_560)
  br label %bb279

bb279:                                            ; preds = %bb278
  %306 = bitcast %"core::ops::range::RangeInclusive<usize>"* %iter14 to i8*
  %307 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* align 8 %307, i64 24, i1 false)
  br label %bb280

bb280:                                            ; preds = %bb286, %bb279
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %308 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17h1ad84b578e68d4c0E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %iter14)
  store { i64, i64 } %308, { i64, i64 }* %_563, align 8
  br label %bb281

bb281:                                            ; preds = %bb280
  %309 = bitcast { i64, i64 }* %_563 to i64*
  %_566 = load i64, i64* %309, align 8, !range !2
  switch i64 %_566, label %bb283 [
    i64 0, label %bb284
    i64 1, label %bb282
  ]

bb283:                                            ; preds = %bb281
  unreachable

bb284:                                            ; preds = %bb281
  %_575 = load i32, i32* %ih, align 4
  %310 = icmp eq i32 %_575, 0
  br i1 %310, label %bb287, label %bb288

bb282:                                            ; preds = %bb281
  %311 = bitcast { i64, i64 }* %_563 to %"core::option::Option<usize>::Some"*
  %312 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %311, i32 0, i32 1
  %i96 = load i64, i64* %312, align 8
  %_571.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_570 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_571.0, i64 20, i64 %i96)
  br label %bb285

bb285:                                            ; preds = %bb282
; call core::option::Option<T>::unwrap
  %_569 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_570, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2653 to %"core::panic::location::Location"*))
  br label %bb286

bb286:                                            ; preds = %bb285
  %_568 = load double, double* %_569, align 8
  %313 = load double, double* %fw, align 8
  %314 = fadd double %313, %_568
  store double %314, double* %fw, align 8
  br label %bb280

bb287:                                            ; preds = %bb284
  %315 = load double, double* %fw, align 8
  store double %315, double* %_574, align 8
  br label %bb289

bb288:                                            ; preds = %bb284
  %_576 = load double, double* %fw, align 8
  %316 = fneg double %_576
  store double %316, double* %_574, align 8
  br label %bb289

bb289:                                            ; preds = %bb287, %bb288
; call core::slice::<impl [T]>::get_mut
  %_578 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 1)
  br label %bb290

bb290:                                            ; preds = %bb289
; call core::option::Option<T>::unwrap
  %_577 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_578, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2655 to %"core::panic::location::Location"*))
  br label %bb291

bb291:                                            ; preds = %bb290
  %317 = load double, double* %_574, align 8
  store double %317, double* %_577, align 8
  br label %bb367

bb245:                                            ; preds = %bb244
; call core::iter::traits::iterator::Iterator::rev
  call void @_ZN4core4iter6traits8iterator8Iterator3rev17h2199c57534e5a66dE(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_509, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_510)
  br label %bb246

bb246:                                            ; preds = %bb245
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5376b945a66bdb38E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture sret(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>") dereferenceable(24) %_508, %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* noalias nocapture dereferenceable(24) %_509)
  br label %bb247

bb247:                                            ; preds = %bb246
  %318 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %iter12 to i8*
  %319 = bitcast %"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* %_508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 24, i1 false)
  br label %bb248

bb248:                                            ; preds = %bb254, %bb247
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %320 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfbf0a19bada095c1E"(%"core::iter::adapters::rev::Rev<core::ops::range::RangeInclusive<usize>>"* align 8 dereferenceable(24) %iter12)
  store { i64, i64 } %320, { i64, i64 }* %_513, align 8
  br label %bb249

bb249:                                            ; preds = %bb248
  %321 = bitcast { i64, i64 }* %_513 to i64*
  %_516 = load i64, i64* %321, align 8, !range !2
  switch i64 %_516, label %bb251 [
    i64 0, label %bb252
    i64 1, label %bb250
  ]

bb251:                                            ; preds = %bb249
  unreachable

bb252:                                            ; preds = %bb249
  %_525 = load i32, i32* %ih, align 4
  %322 = icmp eq i32 %_525, 0
  br i1 %322, label %bb255, label %bb256

bb250:                                            ; preds = %bb249
  %323 = bitcast { i64, i64 }* %_513 to %"core::option::Option<usize>::Some"*
  %324 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %323, i32 0, i32 1
  %i97 = load i64, i64* %324, align 8
  %_521.0 = bitcast [20 x double]* %fq to [0 x double]*
; call core::slice::<impl [T]>::get
  %_520 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcb87ae2181d083d6E"([0 x double]* nonnull align 8 %_521.0, i64 20, i64 %i97)
  br label %bb253

bb253:                                            ; preds = %bb250
; call core::option::Option<T>::unwrap
  %_519 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb5eafa48313141a6E"(i64* align 8 dereferenceable_or_null(8) %_520, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2657 to %"core::panic::location::Location"*))
  br label %bb254

bb254:                                            ; preds = %bb253
  %_518 = load double, double* %_519, align 8
  %325 = load double, double* %fw, align 8
  %326 = fadd double %325, %_518
  store double %326, double* %fw, align 8
  br label %bb248

bb255:                                            ; preds = %bb252
  %327 = load double, double* %fw, align 8
  store double %327, double* %_524, align 8
  br label %bb257

bb256:                                            ; preds = %bb252
  %_526 = load double, double* %fw, align 8
  %328 = fneg double %_526
  store double %328, double* %_524, align 8
  br label %bb257

bb257:                                            ; preds = %bb255, %bb256
; call core::slice::<impl [T]>::get_mut
  %_528 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$7get_mut17hcd35ecc06e54f119E"([0 x double]* nonnull align 8 %y.0, i64 %y.1, i64 0)
  br label %bb258

bb258:                                            ; preds = %bb257
; call core::option::Option<T>::unwrap
  %_527 = call align 8 dereferenceable(8) double* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h4fcd22a9ec21d482E"(i64* align 8 dereferenceable_or_null(8) %_528, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2659 to %"core::panic::location::Location"*))
  br label %bb259

bb259:                                            ; preds = %bb258
  %329 = load double, double* %_524, align 8
  store double %329, double* %_527, align 8
  br label %bb367
}

; libm::math::rem_pio2f::rem_pio2f
; Function Attrs: nonlazybind uwtable
define internal { i32, double } @_ZN4libm4math9rem_pio2f9rem_pio2f17h97dc6e4f6f64a42cE(float %x) unnamed_addr #1 {
start:
  %ty = alloca [1 x double], align 8
  %tx = alloca [1 x double], align 8
  %0 = alloca { i32, double }, align 8
  %x64 = fpext float %x to double
  %1 = bitcast [1 x double]* %tx to double*
  store double 0.000000e+00, double* %1, align 8
  %2 = bitcast [1 x double]* %ty to double*
  store double 0.000000e+00, double* %2, align 8
; call core::f32::<impl f32>::to_bits
  %_7 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb1

bb1:                                              ; preds = %start
  %ix = and i32 %_7, 2147483647
  %_9 = icmp ult i32 %ix, 1305022427
  br i1 %_9, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_25 = icmp uge i32 %ix, 2139095040
  br i1 %_25, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  %_12 = fmul double %x64, 0x3FE45F306DC9C883
  %tmp = fadd double %_12, 0x4338000000000000
  %f_n = fsub double %tmp, 0x4338000000000000
  %_16 = call i32 @llvm.fptosi.sat.i32.f64(double %f_n)
  %_21 = fmul double %f_n, 0x3FF921FB50000000
  %_19 = fsub double %x64, %_21
  %_23 = fmul double %f_n, 0x3E5110B4611A6263
  %_18 = fsub double %_19, %_23
  %3 = bitcast { i32, double }* %0 to i32*
  store i32 %_16, i32* %3, align 8
  %4 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 1
  store double %_18, double* %4, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15, %bb4, %bb2
  %5 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 1
  %8 = load double, double* %7, align 8
  %9 = insertvalue { i32, double } undef, i32 %6, 0
  %10 = insertvalue { i32, double } %9, double %8, 1
  ret { i32, double } %10

bb5:                                              ; preds = %bb3
; call core::f32::<impl f32>::to_bits
  %_32 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h21d3da38de1cafdbE"(float %x)
  br label %bb6

bb4:                                              ; preds = %bb3
  %_27 = fsub double %x64, %x64
  %11 = bitcast { i32, double }* %0 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 1
  store double %_27, double* %12, align 8
  br label %bb17

bb6:                                              ; preds = %bb5
  %_34.0 = lshr i32 %_32, 31
  br label %bb7

bb7:                                              ; preds = %bb6
  %sign = icmp ne i32 %_34.0, 0
  %_39.0 = lshr i32 %ix, 23
  br label %bb8

bb8:                                              ; preds = %bb7
  %13 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %_39.0, i32 150)
  %_41.0 = extractvalue { i32, i1 } %13, 0
  %_41.1 = extractvalue { i32, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %14, label %panic, label %bb9

bb9:                                              ; preds = %bb8
  %_48.0 = shl i32 %_41.0, 23
  br label %bb10

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2661 to %"core::panic::location::Location"*)) #11
  unreachable

bb10:                                             ; preds = %bb9
  %15 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %ix, i32 %_48.0)
  %_49.0 = extractvalue { i32, i1 } %15, 0
  %_49.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %16, label %panic1, label %bb11

bb11:                                             ; preds = %bb10
; call core::f32::<impl f32>::from_bits
  %_42 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17h981ea1e67b8b1888E"(i32 %_49.0)
  br label %bb12

panic1:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.0 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2663 to %"core::panic::location::Location"*)) #11
  unreachable

bb12:                                             ; preds = %bb11
  %17 = getelementptr inbounds [1 x double], [1 x double]* %tx, i64 0, i64 0
  %18 = fpext float %_42 to double
  store double %18, double* %17, align 8
  %_52.0 = bitcast [1 x double]* %tx to [0 x double]*
  %_55.0 = bitcast [1 x double]* %ty to [0 x double]*
; call libm::math::rem_pio2_large::rem_pio2_large
  %n = call i32 @_ZN4libm4math14rem_pio2_large14rem_pio2_large17h171f25abdbb69186E([0 x double]* nonnull align 8 %_52.0, i64 1, [0 x double]* nonnull align 8 %_55.0, i64 1, i32 %_41.0, i64 0)
  br label %bb13

bb13:                                             ; preds = %bb12
  br i1 %sign, label %bb14, label %bb16

bb16:                                             ; preds = %bb13
  %19 = getelementptr inbounds [1 x double], [1 x double]* %ty, i64 0, i64 0
  %_67 = load double, double* %19, align 8
  %20 = bitcast { i32, double }* %0 to i32*
  store i32 %n, i32* %20, align 8
  %21 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 1
  store double %_67, double* %21, align 8
  br label %bb17

bb14:                                             ; preds = %bb13
  %_62 = icmp eq i32 %n, -2147483648
  %22 = call i1 @llvm.expect.i1(i1 %_62, i1 false)
  br i1 %22, label %panic2, label %bb15

bb15:                                             ; preds = %bb14
  %_60 = sub i32 0, %n
  %23 = getelementptr inbounds [1 x double], [1 x double]* %ty, i64 0, i64 0
  %_64 = load double, double* %23, align 8
  %_63 = fneg double %_64
  %24 = bitcast { i32, double }* %0 to i32*
  store i32 %_60, i32* %24, align 8
  %25 = getelementptr inbounds { i32, double }, { i32, double }* %0, i32 0, i32 1
  store double %_63, double* %25, align 8
  br label %bb17

panic2:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.6 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2665 to %"core::panic::location::Location"*)) #11
  unreachable
}

; libm::math::get_high_word
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math13get_high_word17h0ff76eaf1886da20E(double %x) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::to_bits
  %_3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %_5.0 = lshr i64 %_3, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = trunc i64 %_5.0 to i32
  ret i32 %0
}

; libm::math::get_low_word
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4libm4math12get_low_word17h1f40a025d9fddcb4E(double %x) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::to_bits
  %_2 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %x)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = trunc i64 %_2 to i32
  ret i32 %0
}

; libm::math::with_set_high_word
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4libm4math18with_set_high_word17hf93c9d004f6408dcE(double %f, i32 %hi) unnamed_addr #0 {
start:
  %tmp = alloca i64, align 8
; call core::f64::<impl f64>::to_bits
  %0 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %f)
  store i64 %0, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load i64, i64* %tmp, align 8
  %2 = and i64 %1, 4294967295
  store i64 %2, i64* %tmp, align 8
  %_6 = zext i32 %hi to i64
  %_8.0 = shl i64 %_6, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = load i64, i64* %tmp, align 8
  %4 = or i64 %3, %_8.0
  store i64 %4, i64* %tmp, align 8
  %_9 = load i64, i64* %tmp, align 8
; call core::f64::<impl f64>::from_bits
  %5 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret double %5
}

; libm::math::with_set_low_word
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4libm4math17with_set_low_word17h1089b40bbb45a1acE(double %f, i32 %lo) unnamed_addr #0 {
start:
  %tmp = alloca i64, align 8
; call core::f64::<impl f64>::to_bits
  %0 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hc3c7f92777776417E"(double %f)
  store i64 %0, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load i64, i64* %tmp, align 8
  %2 = and i64 %1, -4294967296
  store i64 %2, i64* %tmp, align 8
  %_5 = zext i32 %lo to i64
  %3 = load i64, i64* %tmp, align 8
  %4 = or i64 %3, %_5
  store i64 %4, i64* %tmp, align 8
  %_7 = load i64, i64* %tmp, align 8
; call core::f64::<impl f64>::from_bits
  %5 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %5
}

; libm::math::combine_words
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4libm4math13combine_words17h3c36b36db76fc1a1E(i32 %hi, i32 %lo) unnamed_addr #0 {
start:
  %_5 = zext i32 %hi to i64
  %_7.0 = shl i64 %_5, 32
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = zext i32 %lo to i64
  %_3 = or i64 %_7.0, %_8
; call core::f64::<impl f64>::from_bits
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17ha9ba7ac8aa25c7e9E"(i64 %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %0
}

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h1088041795c895c8E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nonlazybind
declare i32 @rust_eh_personality(...) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x double> @llvm.sqrt.v2f64(<2 x double>) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fptosi.sat.i32.f64(double) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fptosi.sat.i64.f64(double) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fptosi.sat.i64.f32(float) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fptosi.sat.i32.f32(float) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fptoui.sat.i64.f64(double) #7

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #7

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" "target-features"="+sse" }
attributes #3 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" "target-features"="+sse2" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { nonlazybind "target-cpu"="x86-64" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i64 0, i64 2}
!3 = !{i8 0, i8 2}
!4 = !{}
